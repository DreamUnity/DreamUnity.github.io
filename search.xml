<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>高项_第九章项目人力资源管理</title>
      <link href="/2022/09/05/gao-xiang-di-jiu-zhang-xiang-mu-ren-li-zi-yuan-guan-li/"/>
      <url>/2022/09/05/gao-xiang-di-jiu-zhang-xiang-mu-ren-li-zi-yuan-guan-li/</url>
      
        <content type="html"><![CDATA[<h1>第九章 项目人力资源管理</h1><p><img src="https://img-blog.csdnimg.cn/cce70b9f7d5545c0b326bb3334e5a31a.png" alt=""><br><img src="https://img-blog.csdnimg.cn/a9158a8510dd4245b5991e1804c849c6.png" alt=""></p><h2 id="项目人力资源管理概念（了解）"><a class="header-anchor" href="#项目人力资源管理概念（了解）"></a>项目人力资源管理概念（了解）</h2><p><strong>项目团队</strong></p><blockquote><p>项目团队由为完成项目而承担不同角色与职责的人员组成。项目团队成 员可能具备不同的技能，可能是全职或兼职的,可能随项目进展而增加或减 少。</p></blockquote><p><strong>项目管理团队</strong></p><blockquote><p>项目管理团队是项目团队的一部分,负责项目管理和领导活动,如各项 目阶段的启动、规划、执行、监督、控制和收尾。</p></blockquote><h3 id="领导和管理（了解）"><a class="header-anchor" href="#领导和管理（了解）"></a>领导和管理（了解）</h3><p>领导者( Leader )的工作主要涉及三方面:<br>( 1 )<mark>确定方向</mark>,为团队设定目标,描绘愿景,制定战略。<br>( 2 )<mark>统一思想</mark>，协调人员,团结尽可能多的力量来实现愿景。<br>( 3 )<mark>激励和鼓舞</mark>,在向目标进军的过程中不可避免要遇到艰难险阻,领导者要激励和鼓舞大家克服困难奋勇前进。</p><p>领导“人”、管理“事”</p><p>项目经理具有<mark>领导者</mark>和<mark>管理者</mark>的双重身份。对项目经理而言,<mark>管理能力和领导能力</mark>,二者均不可或缺。对于大型复杂项目,领导能力尤为重要。</p><h3 id="冲突和竞争（了解）"><a class="header-anchor" href="#冲突和竞争（了解）"></a>冲突和竞争（了解）</h3><p>冲突(Conflict)是指两个或两个以上的社会单元在目标上互不相容或互相排斥从而产生心理上的或行为上的矛盾</p><p>竞争(Competition)的双方则具有相同的一个目标，不需要发生势不两立的争夺</p><p><mark>冲突并不是一定有害的</mark>，项目经理对于有害的冲突要设法加一解决或者减少；对有益的冲突要加以利用，要鼓励团队成员良性竞争。</p><h2 id="项目人力资源管理过程（背诵）"><a class="header-anchor" href="#项目人力资源管理过程（背诵）"></a>项目人力资源管理过程（背诵）</h2><ol><li class="lvl-4"><p>规划人力资源管理（写一个文档，人力资源管理计划，里面规定了如何做好人力资源管理）</p></li><li class="lvl-3"><p>组建项目团队（确认人力资源的可用情况，并为开展项目活动而组建团队）</p></li><li class="lvl-3"><p>建设项目团队（提高工作能力，促进团队成员互动，改善团队整体氛围，以提高项目绩效）</p></li><li class="lvl-3"><p>管理项目团队（跟踪团队成员工作表现，提供反馈，解决问题并管理团队变更，以优化项目绩效的）</p></li></ol><p><img src="https://img-blog.csdnimg.cn/9510e3bd40bf4ac7984d52c9c41cf5d8.png#pic_center" alt="五大过程组与人力资源管理的关系" width="700"></p><h3 id="1-规划人力资源管理"><a class="header-anchor" href="#1-规划人力资源管理"></a>1.规划人力资源管理</h3><p>规划人力资源管理是识别和记录项目角色、职责、所需技能、报告关系、并编制人员配备管理计划的过程。</p><p>人力资源管理计划描述将如何安排项目的角色与职责、报告关系和人员配备管理。它还包括人员管理计划（列有人员招募和遣散时间表）、培训需求、团队建设策略、认可与奖励计划、合规性考虑、安全问题及人员配备管理计划对组织的影响等。<br><img src="https://img-blog.csdnimg.cn/760b8407f33243afaedeb75882caaa08.png#pic_center" alt="规划人力资源管理的ITO" width="500"></p><h4 id="规划人力资源管理输入："><a class="header-anchor" href="#规划人力资源管理输入："></a>规划人力资源管理输入：</h4><p>活动资源需求：在进行人力资源规划时，需要根据活动资源需求来确定项目所需的人力资源。在规划人力资源管理过程中，明确对项目团队成员及其能力的初步需求，并不断渐进明细。</p><h4 id="规划人力资源管理工具与技术："><a class="header-anchor" href="#规划人力资源管理工具与技术："></a>规划人力资源管理工具与技术：</h4><ol><li class="lvl-3"><p>组织图和职位描述（掌握） 可采用多种格式来记录团队成员的角色与职责。大多数格式属于以下三类:<mark>层级型、矩阵型和文本型</mark>。通常,层级型可用于规定<mark>高层级角色</mark>,而文本型更适合用于<mark>记录详细职责</mark>。<br>![](<a href="https://img-blog.csdnimg.cn/2307857e069a449d851f6725cbfa700e.png">https://img-blog.csdnimg.cn/2307857e069a449d851f6725cbfa700e.png</a> #pic_center=700x)</p></li></ol><ul class="lvl-0"><li class="lvl-3"><p>层级型组织结构：.</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">工作分解结构( WBS )用来显示如何把项目可交付成果分解为工作包,有助于明确高层级的职责。</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">组织分解结构( OBS )按照组织现有的部门、单元或团队排列,并在每个部门下列出其所负责的项目活动或 工作包。</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">资源分解结构( RBS )是按资源类别和类型进行分解</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">区别和联系: OBS和WBS类似，区别在于OBS不是按照项目可交付成果的分解而组织的,而是按照组织所设置的部门、单位和团队而组织的;</li></ul></li><li class="lvl-2"><p>矩阵型（掌握）</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">责任分配矩阵( RAM )是用来显示分配给每个工作包的项目资源的表格。它显示I作包或活动与项目团队成员之间的关系。RAM 的一个例子是RACI(执行、负责、咨询和知情)矩阵。<mark>一项任务只有一个负责人</mark></li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4"><img src="https://img-blog.csdnimg.cn/16bd207b473247c68ac4d26d9c418233.png#pic_center" alt="" width="500"></li></ul></li></ul><ol start="2"><li class="lvl-3"><p>人际交往：人际交往（Networking）是指在组织、行业或职业环境中与他人的正式或非正式互动。人际交往活动的例子包括主动写信、行业会议、非正式对话、午餐会和座谈会等</p></li><li class="lvl-3"><p>组织理论：组织理论阐述个人、团队和组织部门的行为方式。有效利用组织理论中的通用知识，可以节约编制人力资源管理计划的时间、成本及人力投入，提高规划工作的效率</p></li></ol><h4 id="规划人力资源管理输出"><a class="header-anchor" href="#规划人力资源管理输出"></a>规划人力资源管理输出</h4><p>作为项目管理计划的三部分,人力资源管理计划提供了关于如何定义、配备、管理及最终遣散项目人力资源的指南。</p><blockquote><p>人力资源管理计划包括(但不限于)以下内容:<br>( 1 )角色与职责,定义项目所需的岗位、技能和能力。<br>( 2 )项目组织图,说明项目所需的人员数量。<br>( 3 )人员配备管理计划,说明需要每个团队成员的时间段，以及有助于项目. 团队参与的其他重要信息。</p></blockquote><h3 id="2-组件项目团队"><a class="header-anchor" href="#2-组件项目团队"></a>2.组件项目团队</h3><p>组建项目团队是确认人力资源的可用情况,并为开展项目活动而组建团队的过程。指导团队选择和职责分配,组建一个成功的团队。<br><img src="https://img-blog.csdnimg.cn/7d01067a575e47a4825371b6f59495a5.png#pic_center" alt="组建项目团队的ITO" width="600"></p><h4 id="组件项目团队的工具与技术"><a class="header-anchor" href="#组件项目团队的工具与技术"></a>组件项目团队的工具与技术</h4><ol><li class="lvl-3"><p>预分派：如果项目团队成员是事先选定的,他们就是被预分派的。预分派可在下列情况下发生:在竞标过程中承诺分派特定人员进行项目工作;项目成功取决于特定人员的专有技能;或者,项目章程中指定了某些人员的工作分派。</p></li><li class="lvl-3"><p>谈判：在许多项目中,通过谈判完成人员分派。</p></li><li class="lvl-3"><p>招募：如果执行组织不能提供为完成项目所需的人员,就需要从外部获得所需的服务,这可能包括雇佣独立咨询师,或把相关工作分包给其他组织。</p></li><li class="lvl-3"><p>虚拟团队:虚拟团队可定义为具有共同目标、在完成角色任务的过程中很少或没有时间面对面工作的一群人。现代沟通技术(如电子邮件、电话会议、社交媒体、网络会议和视频会议等)使虚拟团队成为可行。</p></li></ol><ul class="lvl-0"><li class="lvl-2"><p>虚拟团队的利:</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">在组织内部地处不同地理位置的员工之间组建团队。</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">为项目团队增加特殊技能,即使相应的专家不在同- -地理区域。</li></ul></li><li class="lvl-3"><ul class="lvl-2"><li class="lvl-5">将在家办公的员工纳入团队。</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">在工作班次、工作小时或工作日不同的员工之间组建团队。</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">将行动不便者或残疾人纳入团队。</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">执行那些原本会因差旅费用过高而被否决的项目。</li></ul></li><li class="lvl-2"><p>虚拟团队的弊:</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">可能产生误解,有孤立感,团队成员之间难以分享知识和经验,采用通信技术的成本。虚拟团队也需要有项目经理,也需要有计划。</li></ul></li></ul><ol start="5"><li class="lvl-3"><p>多标准决策分析可用性,团队成员能否在项目所需时段内为项目工作,在项目期间内是否存在影响可用性的因素。成本,聘用团队成员所需的成本是否在规定的预算内。经验,团队成员是否具各项目所需的相关经验。能力，团队成员是否具备项目所需的能力。知识,团队成员是否掌握关于客户、类似项目和项目环境细节的相关知识。技能,团队成员是否具有相关的技能,来使用项目工具,开展项目执行或培训。态度,团队成员能否与他人协同工作,以形成有凝聚力的团队。国际因素,团队成员的位置、时区和沟通能力。</p></li></ol><h4 id="组建项目团队的输出"><a class="header-anchor" href="#组建项目团队的输出"></a>组建项目团队的输出</h4><ol><li class="lvl-3"><p>项目人员分派项目人员分派就是把团队成员分派到合适的项目岗位上。</p></li><li class="lvl-3"><p>资源日历资源日历记录每个项目团队成员在项目.上的工作时间段。</p></li><li class="lvl-3"><p>项目管理计划更新项目管理计划中的人力资源管理计划可能需要更新。例如,承担某个角色的人员未达到人力资源管理计划所规定的全部要求,就需要更新项目管理计划对团队结构、人员角色或职责进行变更。</p></li></ol><h3 id="3-建设项目团队（了解）"><a class="header-anchor" href="#3-建设项目团队（了解）"></a>3.建设项目团队（了解）</h3><p>建设项目团队是提高工作能力,促进团队成员互动,改善团队整体氛围,以提高项目绩效的过程。改进团队协作,增强人际技能,激励团队成员,降低人员离职率,提升整体项目绩效。</p><p>建设项目团队的目标包括(但不限于) :<br>( 1 )提高团队成员的知识和技能,以提高他们完成项目可交付成果的能力，并降低成本、缩短I期和提高质量。<br>( 2 )提高团队成员之间的信任和认同感,以提高士气、减少冲突和增进团队协作。<br>( 3 )创建富有生气、凝聚力和协作性的团队文化,以便①提高个人和团队生产率,振奋团队精神,促进团队合作;②促进团队成员之间的交叉培训和辅导，以分享知识和经验。</p><p><img src="https://img-blog.csdnimg.cn/58d627cd192b4c649adbe32b525fcccb.png#pic_center" alt="建设项目团队的ITO" width="600"></p><h4 id="建设项目团队的工具"><a class="header-anchor" href="#建设项目团队的工具"></a>建设项目团队的工具</h4><p>( 1 )人际关系技能有时被称为"软技能” 包括: 领导力、激励、沟通、影响力、谈判、建立信任、冲突管理、有效决策、教练技术、团队建设</p><blockquote><p>项目经理的权力有5种来源<br>( 1 )<mark>职位</mark>权力,来源于管理者在组织中的职位和职权。<br>( 2 )<mark>惩罚</mark>权力,使用降取、扣薪、惩罚、批评、威胁等负面手段的能力。<br>( 3 )<mark>奖励</mark>权力,给予下属奖励的能力。<br>( 4 )<mark>专家</mark>权力,来源于个人的专业技能。<br>( 5 )<mark>参照</mark>权力,由于成为别人学习参照榜样所拥有的力量。</p></blockquote><p>职位权力、惩罚权力、奖励权力来自于<mark>组织的授权</mark>,专家权力和参照权力来自于<mark>管理者自身</mark>。对于双重汇报关系和非直接汇报关系人员的管理,项目经理更注重运用奖励权力、专家权力和参照权力,尽量避免使用惩罚权力。<br>( 2 )培训培训包括全部旨在提高项目团队成员能力的活动。<br>( 3 )团队建设活动团队建设活动既可以是状态审查会. 上的五分钟议程,也可以是为改善人际关系而设计的、在非工作场所专门举办的体验活动。<br>( 4 )基本规则用基本规则对项目团队成员的可接受行为做出明确规定。尽早制定并遵守明桷的规则,有助于减少误解,提高生产力。<br>( 5 )集中办公是指把部分或全部项目团队成员安排在同- -个物理地点工作,以增强团队工作能力。集中办公既可以是临时的(如仅在项目特别重要的时期) ,也可以贯穿整个项目。 “作战室”或"指挥部"是集中办公的一种策略。<br>( 6 )认可与奖励在建设项目团队和管理项目团队的过程中,需要对成员的优良行为给予认可与奖励。 (<mark>激励理论</mark>:马斯洛需求层次理论、赫茨伯格的双因素理论、X理论和Y理论、期望理论。)<br>( 7 )人事测评工具人事评测工具能让项目经理和项目团队洞察成员的优势和劣势。</p><blockquote><p>马斯洛需求层次理论（掌握）<br>( 1 )生理需求:对衣食住行等需求,常见的激励措施:<mark>员工宿舍、工作餐、工作服、班车、工资、补贴、奖金等</mark>。<br>( 2 )安全需求:包括对人身安全、生活稳定、不致失业以及免遭痛苦、威胁或疾病等的需求。常见的激励措施:<mark>养老保险、医疗保障、长期劳动合同、意外保险、失业保险等</mark>。<br>( 3 )<mark>社会交往的需求</mark>‼️:包括对友谊、爱情以及隶属关系的需求。常见的激励措施:<mark>定期员工活动、聚会、比赛、俱乐部等</mark>。<br>( 4 )受尊重的需求:自尊心和荣誉感。常见的激励措施:<mark>荣誉性的奖励,形象、地位的提升,颁发奖章,作为导师培训别人等</mark>。<br>( 5 )自我实现的需求:实现自己的潜力,发挥个人能力到最大程度,使自己越来越成为自己所期望的人物。常见的激励措施:<mark>给他更多的空间让他负责、让他成为智囊团、参与决策、参与公司的管理会议等</mark>。<br><img src="https://img-blog.csdnimg.cn/e41be5cd865f499380826b6f7219c765.png#pic_center" alt="马斯洛需求层次理论" width="400"></p></blockquote><blockquote><p>赫兹伯格双因素理论<br><strong>第一类是保健因素</strong>，这些因素是与工作环境或条件有关的,能防止人们产生不满意感的一类因素,包括工作环境、工资薪水、公司政策、个人生活、管理监督、人际关系等。当保健因素不健全时,人们就会对工作产生不满意感。但即使保健因素很好时,也仅仅可以消除工作中的不满意,却无法增加人们对工作的满意感,所以这些因素是无法起到激励作用的。<br><strong>第二类是激励因素</strong>，这些因素是与员工的工作本身或工作内容有关的、能促使人们产生工作满意感的一类因素,是高层次的需要,包括成就、承认、工作本身、责任、发展机会等<br><img src="https://img-blog.csdnimg.cn/3016e174727048abbe510807751ff870.png#pic_center" alt="" width="300"></p></blockquote><blockquote><p>X理论和Y理论<br>X理论(不好)<br>( 1 )人天性好逸恶劳，只要有可能就会逃避工作。<br>( 2 )人生来就以自我为中心,漠视组织的要求。<br>( 3 )人缺乏进取心,逃避责任，甘愿听从指挥,安于现状,没有创造性。<br>( 4 )人们通常容易受骗,易受人煽动。<br>( 5 )人们天生反对改革。<br>( 6 )人的工作动机就是为了获得经济报酬。<br>Y理论(好)(YES)<br>( 1 )人天生并不是好逸恶劳,他们热爱工作,从工作得到满足感和成就感。<br>( 2 )外来的控制和处罚对人们实现组织的目标不是-个有效的办法，下属能够自我确定目标，自我指挥和自我控制。<br>( 3 )在适当的条件下，人们愿意主动承担责任。<br>( 4 )大多数人具有- - 定的想象力和创造力。<br>( 5 )在现代社会中,人们的智慧和潜能只是部分地得到了发挥,如果给予机会,人们喜欢工作,并渴望发挥其才能。</p></blockquote><blockquote><p>期望理论期望理论是一种通过考察<mark>人们的努力行为与其所获得的最终奖酬之间的因果关系</mark>,来说明激励过程,并以选择合适的行为达到最终的奖酬目标的理论。<br>( 1 )<strong>目标效价</strong>,指实现该目标对个人有多大价值的主观判断。如果实现该目标对个人来说很有价值,个人的积极性就高;反之,积极性则低。<br>( 2 )<strong>期望值</strong>,指个人对实现该目标可能性大小的主观估计。</p></blockquote><h4 id="团队发展的5个阶段"><a class="header-anchor" href="#团队发展的5个阶段"></a>团队发展的5个阶段</h4><p>( 1 )形成阶段( Forming )， 一个个的个体转变为团队成员,逐渐相互认识并了解项目情况及他们在项目中的角色与职责,开始形成共同目标。<br>( 2 )震荡阶段( Storming )，团队成员开始执行分配的项目任务,一 般会遇到超出预想的困难,希望被现实打破。个体之间开始争执，互相指责,并且开始怀疑项目经理的能力。<br>( 3 )规范阶段( Norming ) ，经过一定时间的磨合,团队成员开始协同工作,并调整各自的工作习惯和行为来支持团队,团队成员开始相互信任,项目经理能够得到团队的认可。<br>( 4 )发挥阶段( Performing ) ，随着相互之间的配合默契和对项目经理的信任加强,团队就像一个组织有序的单位那样工作。团队成员的集体荣誉感会非常强。<br>( 5 )解散阶段( Adjourning ) ，所有工作完成后,项目结束,团队解散。<mark>不管目前处于什么阶段,增加一个人或减少-一个人,都从形成期重新开始。可能跳过其中的某个阶段,直接进入下一个阶段</mark></p><h4 id="建设项目团队的输出"><a class="header-anchor" href="#建设项目团队的输出"></a>建设项目团队的输出</h4><p>( 1 )团队绩效评价:<br>项目管理团队应该持续地对项目团队绩效进行正式或非正式评价。不断地评价项目团队绩效,有助于采取措施解决问题,调楚沟通方式,解决冲突和改进团队互动。</p><blockquote><p>评价团队有效性的指标可包括:</p><ol><li class="lvl-3">个人技能的改进,从而使成员更有效地完成，I作任务;</li><li class="lvl-3">团队能力的改进,从而使团队整体I作得更好;</li><li class="lvl-3">团队成员离职率的降低;</li><li class="lvl-3">团队凝聚力的加强,从而使团队成员开放地分享信息和经验,互相帮助,提高项目绩效</li></ol></blockquote><p>( 2 )事业环境因素更新:<br>作为建设项目团队过程的结果，可能需要更新的事业环境因素包括(但不限于) :人事管理制度、员工培训记录和技能评估。</p><h3 id="管理项目团队"><a class="header-anchor" href="#管理项目团队"></a>管理项目团队</h3><p>管理项目团队是跟踪团队成员工作表现,提供反馈,解决问题并管理团队变更,以优化项目绩效的过程。影响团队行为,管理冲突,解决问题,并评估团队成员的绩效。</p><p><img src="https://img-blog.csdnimg.cn/b7de06f0ff984c4eb782c7c330590d5b.png#pic_center" alt="管理项目团队的ITO" width="500"></p><h4 id="项目管理团队的输入"><a class="header-anchor" href="#项目管理团队的输入"></a>项目管理团队的输入</h4><p>问题日志：在管理项目团队过程中，总会出现各种问题。可用问题日志记录由谁负责在目标日期内解决待定问题，并监督解决情况</p><h4 id="项目管理团队的工具与技术"><a class="header-anchor" href="#项目管理团队的工具与技术"></a>项目管理团队的工具与技术</h4><p>( 1 )观察和交谈，可通过观察和交谈 ,随时了解项目团队成员的工作和态度。项目管理团队应该监督项目可交付成果的进展，了解团队成员引以为荣的成就，了解各种人际关系问题。<br>( 2 )项目绩效评估在项目过程中进行绩效评估的目的是:澄清角色与职责、向团队成员提供建设性反馈、发现未知或未决问题、制订个人培训计划,以及确立未来目标。<br>( 3 )冲突管理：<br>( 4 )人际关系技能项目经理应该综合运用技术、人际和概念技能来分析形势,并与团队成员有效互动。恰当地使用人际关系技能,可充分发挥全体团队成员的优势。</p><blockquote><p>5种常用的冲突解决方法（背诵）‼️<br>( 1 )撤退/回避( Withdraw/Avoid )。从实际或潜在冲突中退出,将问题推迟到准备充分的时候,或者将问题推给其他人员解决。双方在解决问题.上都不积极,也不想合作。撤退是一种暂时性的冲突解决方法。<br>( 2 )缓和/包容( Smooth/Accommodate )。强调一致、淡化分歧;为维持和谐与关系而<mark>单方面退让一步</mark>。这是一种慷慨而宽厚的做法，为了和谐和大局,而迁就对方,或者暂时放下争议点,谋求在其他非争议点与对方协作。缓和也是一种暂时性的冲突解决方法。<br>( 3 )妥协/调解( Compromise/Reconcile )。为了暂时或部分解决冲突,寻找能让各方都在一定程度上满意的方案。双方在态度上都愿意果断解决冲突,也愿意合作。<mark>双方</mark>都得到了自己想要的东西，但只是一部分,而不是全部。双方都做了让步,都有得有失。<mark>妥协是双方面的包容,包容是单方面的妥协</mark>。<br>( 4 )强迫/命令( Force/Direct )。以牺牲其他方为代价,推行某一方的观点;只提供赢输方案。通常是利用权力来强行解决紧急问题。一方赢, 一方输。<br>( 5 )合作/解决问题( Collaborate/ProblemSolve )。综合考虑不同的观点和意见,采用合作的态度和开放式对话引|导各方达成共识和承诺。这是冲突双方最理想的结果,前提是双方要相互尊重、愿意合作、愿意倾听对方。</p></blockquote><blockquote><p>小燕子和容嬷嬷的故事巧记冲突解决方法小燕子要求皇帝<mark>撤回(撤退/回避)<mark>圣旨,圣旨中皇帝让小燕子</mark>缓和</mark>和容嬷嬷的矛盾,并且单方面的<mark>包容</mark>容嬷嬤,小燕子也不愿意双方<mark>妥协</mark>,要求皇帝<mark>调解</mark>矛盾，皇帝<mark>强迫</mark>容嬷嬷道歉,并且<mark>命令</mark>容嬷嬷下跪,小燕子和皇帝<mark>合作</mark>，<mark>解决了问题</mark>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第八章项目质量管理</title>
      <link href="/2022/08/30/gao-xiang-di-ba-zhang-xiang-mu-zhi-liang-guan-li/"/>
      <url>/2022/08/30/gao-xiang-di-ba-zhang-xiang-mu-zhi-liang-guan-li/</url>
      
        <content type="html"><![CDATA[<h1>第八章项目质量管理</h1><p>上午、案例分析、论文写作都会考察。质量管理<mark>非常重要</mark>，上午每年一般考3分左右，很喜欢考这一章的<mark>工具和技术</mark>，另外，官方教材里的这一章的知识点比较欠缺，一定多看下面总结的内容进行补充。<br><img src="https://img-blog.csdnimg.cn/b45842ce79744f0580451d6b4fa3841b.png" alt=""><br><img src="https://img-blog.csdnimg.cn/7b87a67dfa984c7b9bcb622704a5f632.png" alt=""></p><h2 id="质量管理基础"><a class="header-anchor" href="#质量管理基础"></a>质量管理基础</h2><p>国家标准对质量的定义为:“一组<mark>固有特性</mark>满足要求的程度”。</p><p>质量与等级是两个不同的概念,没必然的联系。<br>(1)一个低等级(功能有限)、高质量(无明显缺陷,用户手册易读)的软件产品,该产品适合一般使用，可以被认可。<br>(2)一个高等级(功能繁多)、低质量(有许多缺陷,用户手册杂乱无章)的软件产品,该产品的功能会因质量低劣而无效或低效,不会被使用者接受。</p><p>项目的质量是应顾客的要求进行的;不同的顾客有着不同的质量要求,其意图已反映在项目合同中。因此,项目合同通常是进行项目质量管理的主要依据。</p><p><mark>质量管理</mark>是指为了实现质量目标而进行的所有质量性质的活动。在质量方面指挥和控制的活动,<mark>包括质量方针和质量目标以及质量规划、质量保证、质量控制和质量改进</mark>。</p><p>质量方针是总方针的一个组成部分，由最高管理者批准。质量目标应分解落实到各部门]及项目的全体成员,以便于实施、检查、考核。</p><blockquote><p>了解全面质量管理(TQM)是一种全员、全过程、全企业的品质管理。它是一个组织以质量为中心,以全员参与为基础,通过让顾客满意和本组织所有成员及社会受益而达到永续经营的目的。由<mark>结构、技术、人员和变革推动者4个要素组成。4个核心的特征:即全员参加、全过程、全面方法和全面结果</mark>的质量管理。六西格码意为"六倍标准差”, 在质量上表示为<mark>每百万不合格品率( PPM )少于3.4</mark> ;采用DMAIC(确定、测量、分析、改进、控制)改进方法对组织的关键流程进行改进;六西格玛的优越之处在于从项目实施过程中改进和保证质量，而不是从结果中检验控制质量。这样做不仅减少了检控质量的步骤,而且避免了由此带来的返工成本。更为重要的是,六西格玛管理培养了员工的质量意识,并把这种质量意识融入企业文化中。(<mark>1σ 68%  2σ 95%  3σ 99%</mark>)<br><img src="https://img-blog.csdnimg.cn/5014031eb88346ad8d8342f6d3c931d3.png#pic_center" alt="" width="500"></p></blockquote><p>CMMI模型将成熟度分为5个等级：</p><ol><li class="lvl-3"><p>初始级</p></li><li class="lvl-3"><p>已管理级</p></li><li class="lvl-3"><p>已定义级</p></li><li class="lvl-3"><p>已量化管理级</p></li><li class="lvl-3"><p>优化级</p></li></ol><h3 id="ISO9000质量管理（了解）"><a class="header-anchor" href="#ISO9000质量管理（了解）"></a>ISO9000质量管理（了解）</h3><p>( 1 )以顾客为中心<br>( 2 )领导作用<br>( 3 )全员参与<br>( 4 )过程方法<br>( 5 )管理的系统方法<br>( 6 )持续改进<br>( 7 )基于事实的决策方法<br>( 8 )与供方互利的关系</p><h2 id="质量管理过程（背诵）"><a class="header-anchor" href="#质量管理过程（背诵）"></a>质量管理过程（背诵）</h2><p>①规划质量管理(写一个文档,质量管理计划,里面规定了如何做好质量管理，明确质量目标，如何做才能达到质量要求或标准的过程)<br>②实施质量保证(实施质量保证是<mark>审计质量要求和质量控制测量结果</mark>，确保采用合理的质量标准和操作性定义的过程。<mark>质量保证是质量计划和质量控制的控制</mark>)<br>③质量控制(质量控制是监督并记录<mark>质量活动执行结果</mark>,以便评估绩效,并推荐必要的变更过程)</p><p><img src="https://img-blog.csdnimg.cn/6decc322ac354c6b8a7f1b05ad554a95.png" alt="5大过程组与质量管理的关系"></p><h3 id="规划质量管理"><a class="header-anchor" href="#规划质量管理"></a>规划质量管理</h3><p>规划质量管理是识别项目及其可交付成果的<mark>质量要求和标准</mark>,并准备对策<mark>确保符合质量要求</mark>的过程。本过程的主要作用是,为整个项目中如何管理和确认质量提供了指南和方向。</p><p><img src="https://img-blog.csdnimg.cn/076829b8e47d41529f8b9779b92ce3cc.png#pic_center" alt="规划质量管理的ITO" width="500"></p><h4 id="规划质量管理的输入："><a class="header-anchor" href="#规划质量管理的输入："></a>规划质量管理的输入：</h4><p>( 1 )项目管理计划:项目管理计划被用于制订质量管理计划。用于制订质量管理计划的信息包括(但不限于) : 范围基准、进度基准、成本基准、其他管理计划。<br>( 2 )干系人登记册:干系人登记册有助于识别对质量重视或有影响的那些干系人。<br>( 3 )风险登记册:风险登记册包含可能影响质量要求的各种威胁和机会的信息。<br>( 4 )需求文件:需求文件记录项目应该满足的、与干系人期望有关的需求。需求文件中包括(但不限于)项目( 包括产品)需求和质量需求。</p><h4 id="规划质量管理工具与技术："><a class="header-anchor" href="#规划质量管理工具与技术："></a>规划质量管理工具与技术：</h4><p>( 1 )成本收益分析法:对每个质量活动进行成本效益分析,就是要比较其可能的成本与预期的效益。<br>( 2 )质量成本法:在产品生命周期中发生的所有成本,包括为预防不符合要求、为评价产品或服务是否符合要求,以及因未达到要求而发生的所有成本。</p><blockquote><p>质量成本:一致性成本和非一致性成本</p><ul class="lvl-1"><li class="lvl-2">一致性成本包括<mark>预防成本</mark>(如培训)和<mark>评价成本</mark>(如测试、检查)</li><li class="lvl-2">非一致性成本又称为失败成本，又分为<mark>内部失败成本</mark>(项目组主动发现问题并弥补发生的成本)和<mark>外部失败成本</mark><br><img src="https://img-blog.csdnimg.cn/59ecb1aa649c495295e52291365810de.png#pic_center" alt="质量成本" width="500"></li></ul></blockquote><p>( 3 )标杆对照(<mark>即基准分析</mark>):将实际或计划的项目实践与可比项目的实践进行对照,以便识别最佳实践,形成改进意见,并为绩效考核提供依据。<br>( 4 )实验设计:是一种<mark>统计方法</mark>,用来识别哪些因素会对正在生产的产品或正在开发的流程的特定变量产生影响。<br>( 5 )其他:头脑风暴、力场分析、名义小组技术</p><h4 id="七种质量工具："><a class="header-anchor" href="#七种质量工具："></a>七种质量工具：</h4><h5 id="老七工具："><a class="header-anchor" href="#老七工具："></a>老七工具：</h5><p>①流程图(刘)<br>②因果图(英)<br>③直方图(只)<br>④散点图(点)<br>⑤排列图(劣)(帕累托图)<br>⑥控制图(质)<br>⑦核查表(茶)</p><p><img src="https://img-blog.csdnimg.cn/26ea2aafdbc24563b58b46376dc582f5.png#pic_center" alt="" width="500"><br><img src="https://img-blog.csdnimg.cn/44f27fe86714443e8ff594fae3d4a70b.png#pic_center" alt="" width="500"></p><ol><li class="lvl-3"><p>流程图：<br><img src="https://img-blog.csdnimg.cn/63360dee6e0045228d6ce34d2d68ce45.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>因果图：<br><img src="https://img-blog.csdnimg.cn/774b9407d1b341e8bedb07af3b68d316.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>直方图<br><img src="https://img-blog.csdnimg.cn/265ea8dc0507448e957aa02dfb009766.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>散点图<br><img src="https://img-blog.csdnimg.cn/6c64095d416042a3be6cae51abf84383.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>帕累托图</p></li></ol><p><img src="https://img-blog.csdnimg.cn/db0afc156cbe4823a643828213080407.png#pic_center" alt="" width="500"></p><ol start="6"><li class="lvl-3"><p>控制图<br><img src="https://img-blog.csdnimg.cn/d0e2f3d132484c83b3de659513c8568b.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>核查表：<br><img src="https://img-blog.csdnimg.cn/6648d4e68f864c2e8fb5b956fd747f16.png#pic_center" alt="" width="500"></p></li></ol><h5 id="新七工具"><a class="header-anchor" href="#新七工具"></a>新七工具</h5><p>①矩阵图(矩)<br>②树形图(树)<br>③相互关系图(关联图) (相)<br>④亲和图(亲)<br>⑤过程决策程序图(策)<br>⑥活动网络图(动)<br>⑦优先矩阵(优)<br>诗文讲的故事是:有一个叫<mark>刘英</mark>的人在相亲时<mark>只</mark>敢<mark>点</mark>最便宜的<mark>劣质茶</mark>,为什么?家里穷呀。原来,她是<mark>钜</mark>了家里的<mark>树</mark>,卖了钱,来<mark>相亲</mark>的。可见这次相亲的<mark>策</mark>划活<mark>动</mark>有多<mark>优</mark>秀。<br><img src="https://img-blog.csdnimg.cn/224c2c72d94849779438a949f6005f98.png#pic_center" alt="" width="500"></p><p><img src="https://img-blog.csdnimg.cn/c89e62ecd0d3410badf16a9546bb16b4.png#pic_center" alt="" width="500"></p><ol><li class="lvl-3"><p>矩阵图</p></li></ol><p><img src="https://img-blog.csdnimg.cn/6b2e2d438b804349add357f749c95f2f.png#pic_center" alt="" width="500"></p><ol start="2"><li class="lvl-3"><p>树形图<br><img src="https://img-blog.csdnimg.cn/9e33b355ad00450f967c78a214faf4a4.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>关联图<br><img src="https://img-blog.csdnimg.cn/438012b84caa4810a9cb09f9d453bc9b.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>亲和图<br><img src="https://img-blog.csdnimg.cn/b1265d2d8e5a43cdb95138279e88f5f5.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>过程决策程序图<br><img src="https://img-blog.csdnimg.cn/4eff8d7cf6434e648727bce40eceb5be.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>活动网络图<br><img src="https://img-blog.csdnimg.cn/4f6fd1f422d2473aa889c858508ff1eb.png#pic_center" alt="" width="500"></p></li><li class="lvl-3"><p>优先矩阵<br><img src="https://img-blog.csdnimg.cn/2d59d308df34416fa4a2324e70e14607.png#pic_center" alt="" width="500"></p></li></ol><h4 id="区别"><a class="header-anchor" href="#区别"></a>区别</h4><p><img src="https://img-blog.csdnimg.cn/16bd0928f64c4f6c9292e7eae2d26c3c.png#pic_center" alt="" width="500"></p><h3 id="规划质量管理输出"><a class="header-anchor" href="#规划质量管理输出"></a>规划质量管理输出</h3><p>( 1 )质量管理计划</p><p>质量管理计划是项目管理计划的组成部分,描述如何实施组织的质量政策,以及项目管理团队准备如何达到项目的质量要求。质量管理计划可以是<mark>正式</mark>,也可以是<mark>非正式的</mark>,可以是<mark>非常详细的</mark>,也可以是<mark>高度概括的</mark>。其风格与详细程度取决于项目的具体需要。应该在项目早期就对质量管理计划进行评审，以确保决策是基于准确信息的</p><p>( 2 )过程改进计划</p><p>过程改进计划是项目管理计划的子计划或组成部分。过程改进计划详细说明对项目管理过程和产品开发过程进行分析的各个步骤,以识别增值活动。(<mark>增加增值活动,较少辅助性增值活动</mark>)</p><p>( 3 )质量测量指标</p><p>质量测量指标专用于描述项目或产品属性，以及控制质量过程将如何对属性进行测量。质量测量指标用于<mark>实施质量保证和控制质量过程</mark>。质量测量指标的例子包括:<mark>准时性、成本控制、缺陷频率、故障率、可用性、可靠性和测试覆盖度等</mark>。通过测量,得到实际数值。测量指标的可允许变动范围称为公差。<br>( 4 )质量核对单</p><p>核对单是一种结构化工具,通常具体列出各项内容，用来<mark>核实所要求的一系列步骤是否已得到执行</mark>。</p><h3 id="实施质量保证"><a class="header-anchor" href="#实施质量保证"></a>实施质量保证</h3><p>实施质量保证是<mark>审计质量要求</mark>和<mark>质量控制测量结果</mark>，确保采用合理的质量标准和操作性定义的过程。<mark>促进质量过程改进</mark>。</p><p>质量保证旨在建立对未来输出或未完输出(也称正在进行的工作)将在完工时满足特定的需求和期望的信心。</p><p>质量保证一般由<mark>质量保证部门</mark>或者类似的相关部门完成。项目经理和相关质量部门做好质量保证I作。质量保证部门]或类似部门]经常要对质量保证活动进行监督</p><p>实施质量保证过程也为持续过程改进创造条件。持续过程改进是指不断地改进所有过程的质量。通过持续过程改进,可以减少浪费,消除非增值活动使各过程在更高的效率与效果水平上运行。<br><img src="https://img-blog.csdnimg.cn/29404f6f85e14ff08f2a5a8103f1fa0b.png#pic_center" alt="实施质量保证的ITO" width="500"></p><h4 id="实施质量保证的输入"><a class="header-anchor" href="#实施质量保证的输入"></a>实施质量保证的输入</h4><p>质量控制测量结果：是对质量控制活动的结果的书面记录，应该以规划质量管理过程所确定的格式加以记录（<mark>质量控制过程的输出</mark>）</p><h4 id="实施质量保证的工具"><a class="header-anchor" href="#实施质量保证的工具"></a>实施质量保证的工具</h4><p>质量审计,又称质量保证体系审核,是对具体质量管理活动的结构性的评审。</p><blockquote><p>质量审计的目标是: （了解）<br>①识别全部正在实施的良好及最佳实践。<br>②识别全部违规做法、差距及不足。<br>③分享所在组织或行业中类似项目的良好实践。<br>④积极、主动地提供协助,以改进过程的执行,从而帮助团队提高生产效率。<br>⑤强调每次审计都应对组织经验教训的积累做出贡献。</p></blockquote><p>质量审计可以是<mark>事先安排,也可随机进行</mark>。在具体领域中有专长的<mark>内部审计师或第三方</mark>组织都可以实施质量审计可由内部或外部审计师进行。质量审计还可确认已批准的变更请求(包括更新、纠正措施、缺陷补救和预防措施)的实施情况。</p><p>过程分析是指按照<mark>过程改进计划</mark>中概括的步骤来识别所需的改进。它也要检查在过程运行期间遇到的问题、制约因素,以及发现的非增值活动,探究根本原因,并制定预防措施的一种具体技术。</p><h3 id="质量控制"><a class="header-anchor" href="#质量控制"></a>质量控制</h3><p>质量控制是监督并记录质量活动执行<mark>结果</mark>,以便评估绩效,并推荐必要的变更过程,作用包括：<br>①识别过程低效或产品质量低劣的原因,建议并采取相应措施消除这些原因。<br>②确认项目的可交付成果及工作满足主要干系人的既定需求,足以进行最终验收。</p><p><img src="https://img-blog.csdnimg.cn/f133d62b18a24c11b7a9a44d21fba6d9.png#pic_center" alt="质量控制的ITO" width="500"></p><h4 id="质量控制的工具与技术"><a class="header-anchor" href="#质量控制的工具与技术"></a>质量控制的工具与技术</h4><p>统计抽样是指从目标总体中抽取一部分相关样本用于检查和测量,以满足质量管理计划中的规定。( 可以降低质量控制的成本)</p><p>检查也可称为审查、同行审查、审计或巡检等。检查也可用于确认缺陷补救。</p><p>测试、检查、统计抽样、6σ也是属于质量控制的工具和技术</p><h3 id="质量保证和质量控制的区别"><a class="header-anchor" href="#质量保证和质量控制的区别"></a>质量保证和质量控制的区别</h3><p>实施质量保证:是针对过程改进和审计的,<mark>强调的是过程改进和信心保证</mark>。</p><p>实施质量控制:是按照质量要求、检查具体可交付成果的质量,<mark>强调的是具体的可交付成果</mark>。</p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第七章项目成本管理</title>
      <link href="/2022/08/27/gao-xiang-di-qi-zhang-xiang-mu-cheng-ben-guan-li/"/>
      <url>/2022/08/27/gao-xiang-di-qi-zhang-xiang-mu-cheng-ben-guan-li/</url>
      
        <content type="html"><![CDATA[<h1>第七章项目成本管理</h1><p>上午、案例分析、论文写作都会进行考察。项目成本管理一本上午考察3分，非常重要，要是成本控制的不好，直接关乎项目的质量，因此成本管理次张杰非常重要，案例分析可能会出案例分析计算，主要集中在<mark>挣值、预测技术计算等方面</mark>。<br><img src="https://img-blog.csdnimg.cn/9c5716a014f249b6ace7933f7cfcf27a.png#pic_center" alt="" width="700"><img src="https://img-blog.csdnimg.cn/ccbfd54c653148a495083ddea4b2d5bf.png#pic_center" alt="" width="700"></p><h2 id="概述-2"><a class="header-anchor" href="#概述-2"></a>概述</h2><p>项目全过程所耗用的各种成本的总和为项目成本项目成本管理就是要确保在批准的预算内完成项目</p><h3 id="成本的类型"><a class="header-anchor" href="#成本的类型"></a>成本的类型</h3><p>( 1 )可变成本:随着生产量、工作量或时间而变的成本为可变成本。可变成本又称变动成本。<br>( 2 )固定成本:不随生产量、工作量或时间的变化而变化的非重复成本为固定成本。<br>( 3 )直接成本:直接可以归属于<mark>一个项目工作</mark>的成本为直接成本。如项目团队差旅费、工资、项目使用的物料及设备使用费等。<br>( 4 )间接成本:来自一般管理费用科目或<mark>几个项目共同担负</mark>的项目成本所分分摊给本项目的费用,就形成了项目的间接成本,如税金、额外福利和保卫费用等。<br>( 5 )机会成本:是利用一定的时间或资源生产- 种商品时,而失去利用这些资源生产其他最佳替代品的机会就是机会成本,泛指一切在作出选择后其中一个最大的损失。<br>( 6 )沉没成本:是指由于过去的决策已经发生了的,不能由现在或将来的任何决策改变的成本。沉没成本是一种历史 成本,对现有决策而言是不可控成本，会很大程度上影响人们的行为方式与决策,在投资决策时应排除沉没成本的干扰。( <mark>已经花出去,浪费掉的钱</mark>)</p><h3 id="应急储备和管理储备"><a class="header-anchor" href="#应急储备和管理储备"></a>应急储备和管理储备</h3><p>应急储备是包含在<mark>成本基准内的一部分预算</mark>,用来应对已经接受的已识别风险,以及己经制定应急或减轻措施的已识别风险。应急储备通常是预算的一部分,用来应对那些会影响项目的”<mark>已知一末知</mark>”风险。使用前<mark>不需要得到高层管理者审批</mark>。( <mark>PM可支配应急储备</mark>)</p><p>管理储备是为了管理控制的目的而特别留出的项目预算,用来应对项目范围中不可预见的工作。管理储备用来应对会影响项目的"<mark>未知一未知</mark>”风险。管理储备不包括在成本基准中,但属于项目总预算和资金需求的一部分,使用前需要得到高层管理者审批。当动用管理储备资助不可预见的工作时,就要把动用的管理储备增加到成本基准中,从而导致成本基准变更。( <mark>PM不可支配管理储备,如果需要使用需要得到高层的批准</mark>) ( <mark>不用在挣值计算中</mark>)<br><img src="https://img-blog.csdnimg.cn/c2be5f362ae244bc8229a203ce16648e.png#pic_center" alt="" width="500"></p><h2 id="成本管理过程（背诵）‼️"><a class="header-anchor" href="#成本管理过程（背诵）‼️"></a>成本管理过程（背诵）‼️</h2><ol><li class="lvl-3"><p>规划成本（写一个文档，成本管理计划，里面规定了如何做好成本管理）</p></li><li class="lvl-3"><p>估算成本（估算项目大概需要花费多少钱）</p></li><li class="lvl-3"><p>制订成本（需要准确预算项目中需要花多少钱，需要形成基线）</p></li><li class="lvl-3"><p>控制成本（在项目的进行中，要对项目的成本进行监控，看有没有偏差，有偏差要进行纠偏）</p></li></ol><h3 id="5大过程组与成本管理"><a class="header-anchor" href="#5大过程组与成本管理"></a>5大过程组与成本管理</h3><p><img src="https://img-blog.csdnimg.cn/804d608a18a94c658b1dd7b9828455e1.png#pic_center" alt="" width="600"></p><h3 id="1-规划成本管理"><a class="header-anchor" href="#1-规划成本管理"></a>1.规划成本管理</h3><p>规划成本管理是为规划、管理、花费和控制项目成本而制定政策、程序和文档的过程,本过程的主要作用是,在整个项目中为如何管理项目成本提供指南和方向。<br><img src="https://img-blog.csdnimg.cn/628c488bf26648f29bc654a23bed0d3c.png#pic_center" alt="规划成本管理ITO" width="500"></p><h4 id="规划成本管理的工具"><a class="header-anchor" href="#规划成本管理的工具"></a>规划成本管理的工具</h4><p>( 1 )专家判断基于历史信息,专家判断可以对项目环境及以往类似项目的信息提供有价值的见解。<br>( 2 )技术分析:在制订成本管理计划时,可能需要选择项目筹资的战略方法如自筹资金、股权投资、借贷投资等。成本管理计划中可能也需详细说明筹集项目资源的方法,如自制、采购、租用或租赁。如同会影响项目的其他财务决策,这些决策可能对项目进度和风险产生影响。可用的技术包括:回收期、投资回报率、内部报酬率、现金流贴现、净现值。(<mark>计算专题具体讲</mark>)<br>( 3 )会议:项目团队可能举行规划会议来制订成本管理计划。参会人员可能包括项目经理、项目发起人、选定的项目团队成员、选定的干系人、项目成本负责人,以及其他必要人员。</p><h4 id="成本管理计划"><a class="header-anchor" href="#成本管理计划"></a>成本管理计划</h4><p>成本管理计划是项目管理计划的组成部分,描述将如何规划、安排和控制项目成本。成本管理过程及其工具与技术应记录在成本管理计划中。</p><h3 id="2-估算成本"><a class="header-anchor" href="#2-估算成本"></a>2.估算成本</h3><p>估算成本是对完成项目活动所需资金进行<mark>近似估算</mark>的过程。</p><blockquote><p>编制项目成本估算的三个步骤:<br>( 1 )识别并分析成本的构成科目。会形成资源需求、会计科目表、项目资源矩阵。（<mark>哪里需要花钱</mark>）<br>( 2  )根据己识别的项目成本构成科目,估算每- -科目的成本大小。 (<mark>每个地方要花多少钱</mark>)<br>( 3 )分析成本估算结果,找出各种可以相互替代的成本,协调各种成本之间的比例关系。(<mark>当有多种形式花钱的时候,能不能找出多种方案,来优化这个成本的估算</mark>)</p></blockquote><p><img src="https://img-blog.csdnimg.cn/93870deb5c044c1bb14a394ccc8d9998.png#pic_center" alt="估算成本的ITO" width="500"></p><h4 id="估算成本工具与技术"><a class="header-anchor" href="#估算成本工具与技术"></a>估算成本工具与技术</h4><p>( 1 )专家判断:基于历史信息,可以对项目环境及以往类似项目的信息提供有价值的见解。<br>( 2 )类比估算:指以过去类似项目的<mark>参数值或规模指标</mark>为基础,来估算当前项目的同类参数或指标。这是一种粗略的估算方法。在项目详细信息不足时,例如在项目的早期阶段,就经常使用这种技术来估算成本数值。该方法综合利用历史信息和专家判断。通常成本较低、耗时较少,但<mark>准确性也较低</mark>。<br>( 3 )参数估算:指利用历史数据之间的统计关系和其他变量,来进行项目工作的成本估算。参数估算的准确性取决于<mark>参数模型</mark>的成熟度和基础数据的可靠性。<br>( 4 )自下而上估算:首先对单个工作包或活动的成本进行最具体、细致的估算;然后把这些细节性成本向上汇总或“滚动”到更高层次所需的成本,通常取决于单个活动或工于后续报告和跟踪。包的规模和复杂程度自下而上估算的准确性及其本身<br>( 5 )三点估算(<mark>计算专题具体讲</mark>)<br>( 6 )储备分析<br>( 7 )质量成本(COQ):在估算活动成本时。可能要用到关于质量成本的各种假设。<br>( 8 )项目管理软件:项目管理应用软件、电子表单、模拟和统计工具等,可用来辅助成本估算。这些工具能简化某些成本估算技术的使用,使人们能快速考虑多种成本估算方案。<br>( 9 )卖方投标分析:在成本估算过程中,可能需要根据合格卖方的投标情况,分析项目成本。在用竞争性招标选择卖方的项目中,项目团队需要开展额外的成本估算工作,以便审查各项可交付成果的价格,并计算出组成项目最终总成本的各分项成本。( <mark>可以根据卖方的投标报价,大致估算项目的成本</mark>)<br>( 10 )群体决策技术</p><h4 id="估算成本的输出"><a class="header-anchor" href="#估算成本的输出"></a>估算成本的输出</h4><p>( 1 ) 活动成本估算:活动成本估算是对完成项目工作可能需要的成本的量化估算。成本估算可以是汇总的或详细分列的。<br>( 2 )估算依据:成本估算所需的支持信息的数量和种类,因应用领域而异。不论其详细程度如何，支持性文件都应该清晰、完整地说明成本估算是如何得出的。<br>( 3 )项目文件更新:可能需要更新的项目文件包括(但不限于)风险登记册。</p><h3 id="3-制定预算"><a class="header-anchor" href="#3-制定预算"></a>3.制定预算</h3><p>制订预算是汇总所有单个活动或工作包的估算成本,建立- -个经批准的成本基准的过程。确定成本基准。成本基准是经过批准且按时间段分配的项目预算,但不包括管理储备。<br><img src="https://img-blog.csdnimg.cn/ed6cf87961d648a783e89fea1bcaef04.png#pic_center" alt="制定预算的ITO" width="500"></p><h4 id="制定预算的工具与技术"><a class="header-anchor" href="#制定预算的工具与技术"></a>制定预算的工具与技术</h4><p>( 1 )成本氾总:先把成本估算汇总到WBS中的工作包,再由工作包汇总至WBS更高层次(如控制账户) , 最终得出整个项目的总成本。<br>( 2 )储备分析:通过预算储备分析,可以计算出项目的应急储备与管理储备。<br>( 3 )历史关系:有关变量之间可能存在一 些可据以进行<mark>参数估算</mark>或<mark>类比估算</mark>的历史关系。<br>( 4 )资金限制平衡:应该根据对项目资金的任何限制,来平衡资金支出。如果发现资金限制与计划支出之间的差异,则可能需要调整工作的进度计划，以平衡资金支出水平。这可以通过在项目进度计划中添加强制日期来实现。</p><h4 id="制定预算的输出"><a class="header-anchor" href="#制定预算的输出"></a>制定预算的输出</h4><p>( 1 )成本基准:成本基准是经过批准的、按时间段分配的项目预算,不包括任何管理储备,只有通过正式的变更控制程序才能变更,用作与实际结果进行比较的依据。<br>( 2 )项目资金需求:根据成本基准,确定总资金需求和阶段性(如季度或年度)资金需求。成本基准中既包括预计支出及预计债务。项目资金通常以增量的方式投入,并且可能是非均衡的,呈现出阶梯状。<br><img src="https://img-blog.csdnimg.cn/bef8e8035343400486e40c01d4d777bf.png#pic_center" alt="项目预算的组成" width="500"></p><blockquote><p>成本估算与预算的区别与联系</p><p>( 1 )成本估算和预算的区别：成本估算是对各活动的估算,而预算是将估算汇总并和进度结合并形成按时间分配的成本基准。<br>( 2 )成本估算和预算的联系：成本预算是在项目成本估算的基础上进行的;成本估算的输出结果是成本预算的基础与依据,成本预算则是将已批准的项目总的估算成本进行分摊。成本估算-&gt;成本预算</p></blockquote><h3 id="4-控制成本"><a class="header-anchor" href="#4-控制成本"></a>4.控制成本</h3><p>控制成本是监督项目状态,以更新项目成本,管理成本基准变更的过程。本过程的主要作用是,发现实际与计划的差异,以便采取纠正措施,降低风险。<br><img src="https://img-blog.csdnimg.cn/48ec9d921e71469b87793a81fde310fb.png#pic_center" alt="控制成本的ITO" width="500"></p><h4 id="控制成本的工具与技术"><a class="header-anchor" href="#控制成本的工具与技术"></a>控制成本的工具与技术</h4><p>( 1 )挣值管理:把范围、进度和资源绩效综合起来考虑，以评估项目绩效和进展的方法。 (<mark>计算专题具体讲</mark>)<br>( 2 )预测<br>( 3 )完工尚需绩效指数( TCPI )<br>( 4 )绩效审查<br>( 5 )项目管理软件</p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第六章项目进度管理</title>
      <link href="/2022/08/27/gao-xiang-di-liu-zhang-xiang-mu-jin-du-guan-li/"/>
      <url>/2022/08/27/gao-xiang-di-liu-zhang-xiang-mu-jin-du-guan-li/</url>
      
        <content type="html"><![CDATA[<h1>第六章项目进度管理</h1><p>上午考察3分，必考网络图之类的，下午必考计算题，必需熟练掌握。记忆点不是很多，重在理解，都应该是送分题</p><h2 id="ITO-5"><a class="header-anchor" href="#ITO-5"></a>ITO</h2><p><img src="https://img-blog.csdnimg.cn/5a9365879128414a9d611865d6afb28f.png#pic_center" alt="" width="500"></p><p><img src="https://img-blog.csdnimg.cn/d36815fec2ee4bc795ccc46e8d30dfb3.png#pic_center" alt="" width="500"></p><p><img src="https://img-blog.csdnimg.cn/d83d0fce483a437ca1020ca8109e10cd.png#pic_center" alt="" width="500"></p><h2 id="概述"><a class="header-anchor" href="#概述"></a>概述</h2><h3 id="进度管理过程（背诵）‼️"><a class="header-anchor" href="#进度管理过程（背诵）‼️"></a>进度管理过程（背诵）‼️</h3><p>项目进度管理包括以下7个过程：<br>①规划进度管理(写一个文档,进度管理计划，里面规定了如何做好进度管理)<br>②定义活动(识别和记录项目中有哪些活动)<br>③排列活动顺序(先做什么活动后做什么活动)<br>④估算活动资源(估算执行各项活动所需材料、人员、设备或用品的种类和数量的过程)<br>⑤估算活动持续时间(根据资源估算的结果,估算完成单项活动所需I期的过程<br>⑥制订进度计划(分析活动顺序、持续时间、资源需求和进度制约因素,制定具体的“进度计划安排”)<br>⑦控制进度(在项目的进行中,要对项目的进度进行监控,看有没有偏差,有偏差要进行纠偏)</p><blockquote><p>第一个是制定进度管理计划，最后一个是一个具体的实施的进度计划</p><ul class="lvl-1"><li class="lvl-2">规划进度管理,就是提前针对进度管理的方方面面做好规划,包括使用什么工具、方法、技术来进行进度管理;</li><li class="lvl-2">而制定进度计划,应该是“采用规划阶段确定的工具、方法、技术对进度进行分析后,制定出的进度计划表”, 比如"进度网络图、甘特图、里程碑图”等等,换言之,<mark>制定进度计划</mark>,就是<mark>制定具体</mark>的"进度计划安排”</li></ul></blockquote><h3 id="五大过程组与进度管理"><a class="header-anchor" href="#五大过程组与进度管理"></a>五大过程组与进度管理</h3><p><img src="https://img-blog.csdnimg.cn/29180db4752d4e818621d1f9bafc0901.png#pic_center" alt="" width="600"></p><h2 id="项目进度管理过程"><a class="header-anchor" href="#项目进度管理过程"></a>项目进度管理过程</h2><h3 id="1-规划进度管理（掌握）"><a class="header-anchor" href="#1-规划进度管理（掌握）"></a>1.规划进度管理（掌握）</h3><p>规划项目进度管理是为实施项目进度管理制定政策、程序,并形成文档化的项目进度管理计划的过程,如何在整个项目过程中管理、执行和控制项目进度提供指南和方向。进度管理计划可以是正式或非正式的,非常详细或高度概括的</p><p><img src="https://img-blog.csdnimg.cn/73e55f574f2a4051ace48aac195f1ecc.png#pic_center" alt="规划进度管理的ITO" width="500"></p><h3 id="2-定义活动"><a class="header-anchor" href="#2-定义活动"></a>2.定义活动</h3><p>创建WBS过程已经识别出WBS中最低层的可交付成果，即工作包。为了更好的规划项目,工作包通常还应进一步细分为更小的组成部分 ,即”活动”</p><p><mark>活动</mark>,就是为完成工作包所需进行的工作,是实施项目时安排工作的最基本的工作单元。活动与工作包是1对1或多对1的关系,即有可能多个活动完成一个工作包。</p><p>定义活动过程就是识别和记录为完成项目可交付成果而需采取的所有活动。将工作包分解为活动,作为对项目工作进行估算、进度规划、执行、监督和控制的基础。<br><img src="https://img-blog.csdnimg.cn/c030ede366c94d31aa137c0c00f05667.png#pic_center" alt="定义活动的ITO" width="500"></p><h4 id="定义活动工具与技术"><a class="header-anchor" href="#定义活动工具与技术"></a>定义活动工具与技术</h4><p><mark>滚动式规划</mark>是一种迭代式的规划技术,即详细规划近期要完成的工作,同时在较高层级上粗略规划远期工作。</p><p>(项目是渐进明细的,在定义活动和创建WBS的时候,都会用到滚动式规划,对近期要完成的工作做一个详细的规划,对远期的工作就暂时站在WBS比较高的层次做粗略规划,所以项目生命周期的不同阶段,工作分解的详细程度也是不同的)</p><h4 id="定义活动输出"><a class="header-anchor" href="#定义活动输出"></a>定义活动输出</h4><p><mark>活动清单</mark>是一份包含项目所需的全部活动的综合清单。</p><p><mark>活动属性</mark>是活动清单中的活动属性的扩展。活动属性包括活动标识、WBS标识和活动标签或名称;在活动属性编制完成时,可能还包括活动编码、活动描述、紧前活动、紧后活动、逻辑关系、提前量与滞后量、资源需求、强制日期、制约因素和假设条件。</p><p><mark>里程碑</mark>是项目中的重要时点或事件。里程碑清单列出了所有项目里程碑。</p><h3 id="3-排列活动顺序"><a class="header-anchor" href="#3-排列活动顺序"></a>3.排列活动顺序</h3><p>排列活动顺序是识别和记录项目活动之间的关系的过程。定义工作之间的逻辑顺序，以便在既定的所有项目制约因素喜爱获得最高的效率。</p><p><img src="https://img-blog.csdnimg.cn/805595e78b624db1885b79f1c3615c2d.png#pic_center" alt="确定依赖关系" width="500"><br><img src="https://img-blog.csdnimg.cn/3c42132b6d6c4b7b8ab687695f542d7e.png#pic_center" alt="排列活动顺序的ITO" width="500"></p><h4 id="排列活动顺序的工具与技术"><a class="header-anchor" href="#排列活动顺序的工具与技术"></a>排列活动顺序的工具与技术</h4><h5 id="前导图法（紧前关系法）"><a class="header-anchor" href="#前导图法（紧前关系法）"></a>前导图法（紧前关系法）</h5><p><mark>前导图法</mark>( PDM) , 也称<mark>紧前关系绘图法</mark>,是用于编制<mark>项目进度网络图</mark>的一种方法,它使用方框或者长方形(被称作节点)代表活动，节点之间用箭头连接,以显示节点之间的逻辑关系。这种网络图也被称作<mark>单代号网络图</mark>(只有节点需要编号)<br><img src="https://img-blog.csdnimg.cn/35f565f784ea41a58b62b1bd9fd07648.png#pic_center" alt="前导图法（单代号网络图）" width="400"></p><blockquote><p>前导图法( PDM) , 包括活动之间存在的4种类型的依赖关系：</p><ol><li class="lvl-3">结束一开始的关系( F_S型)。前序活动结束后,后续活动才能开始。例如,只有比赛(紧前活动)结束,颁奖典礼(紧后活动)才能开始。</li><li class="lvl-3">结束一结束的关系( F-F型)。前序活动结束后,后续活动才能结束。例如,只有完成文件的编写(紧前活动) , 才能完成文件的编辑(紧后活动)。</li><li class="lvl-3">开始一开始的关系( S-s型)。前序活动开始后,后续活动才能开始。例如,开始地基浇灌(紧前活动)之后,才能开始混凝土的找平(紧后活动)。</li><li class="lvl-3">开始一结束的关系( S-F型)。前序活动开始后,后续活动才能结束。例如，只有第二位保安人员开始值班(紧前活动) , 第一位保安人员才能结束值班(紧后活动)。<br><img src="https://img-blog.csdnimg.cn/668c8d97e7fd4c988dd0a8eede7882d3.png#pic_center" alt="" width="400"></li></ol></blockquote><p>在前导图法中,每个节点的活动会有如下几个时间: ‼️案例分析中的计算题可能会考<br>( 1 )最早开始时间( ES ) :某项活动能够开始的最早时间。<br>( 2)最早完成时间( EF ) :某项活动能够完成的最早时间。<br>( 3 )最迟完成时间(LF ) :为了使项目按时完成,某项工作必须完成的最迟时间<br>( 4 )最迟开始时间( LS) :为了使项目按时完成,某项工作必须开始的最迟时间<br><img src="https://img-blog.csdnimg.cn/af9ba482ee9b4d7d85780a7af552a0bf.png#pic_center" alt="根据英国标准BS6046所标识的节点" width="400"></p><blockquote><p>EF = ES + 工期<br>LS = LF - 工期<br>(Early Start Latest Finish)</p></blockquote><h5 id="箭线图法"><a class="header-anchor" href="#箭线图法"></a>箭线图法</h5><p>箭线图法（ADM）是用<mark>箭线表示活动、节点表示事件</mark>的一种网络图绘制方法，这种网络图也被称作<mark>双代号网网络图</mark><br><img src="https://img-blog.csdnimg.cn/b179852f754847b2881900e44305f3a1.png#pic_center" alt="箭线图法（双代号网络图）" width="400"></p><blockquote><p>在箭线图法中,有如下三个基本原则:<br>①网络图中每一活动和每一事件 都必须有唯一的一 个代号, 即网络图中不会有相同的代号<br>②任意两项活动的紧前事件和紧后事件代号至少有一个不相同,节点代号沿箭线方向越来越大。<br>③流入(流出)同一节点的活动,均有共同的紧后活动(或紧前活动)。</p></blockquote><blockquote><p>虚活动,在网络图中由一个虚箭线表示。虚活动<mark>不消耗时间,也不消耗资源</mark>,只是为了弥补箭线图在表达活动依赖关系方面的不足。活动A和B可以同时进行;只有活动A和B都完成后,活动c才能开始。<br><img src="https://img-blog.csdnimg.cn/36c396e90b6c46e99088ee1fca5e2fb2.png#pic_center" alt="" width="400"></p></blockquote><blockquote><p>提前量与滞后量：（了解）在活动之间加入时间提前量与滞后量，可以更准确地表达活动之间的逻辑关系。提前量是相对于紧前活动,紧后活动可以提前的时间量。例如,对于-一个大型技术文档,技术文件编写小组可以在写完文件初稿(紧前活动)之前15天着手第二稿(紧后活动)。在进度规划软件中,提前量往往表示为负数。滞后量足相对于紧前活动,紧后活动需要推迟的刚间量。例如,为了保证混凝土有10天养护期,可以在两道工序之间加入10天的滞后时间。在进度规划软件中,滞后量往往表示为正数。<br><img src="https://img-blog.csdnimg.cn/93dec6f274064ab58e48903d3a9297b0.png#pic_center" alt="" width="400"></p></blockquote><h3 id="4-估算活动资源"><a class="header-anchor" href="#4-估算活动资源"></a>4. 估算活动资源</h3><p>估算活动资源是估算执行各项活动所需的材料、人员、设备或用品的种类和数量的过程。明确完成活动所需的资源种类、数量和特性,以便做出更准确的成本和持续时间估算。估算活动资源过程与估算成本过程紧密相关。</p><p>资源日历是表明每种具体资源的可用工作日或工作班次的日历。在估算资源需求情况时,需要了解在规划的活动期间,哪些资源(如人力资源、设备和材料)可用。资源日历规定了在项目期间特定的项目资源何时可用，可用多久。</p><p><img src="https://img-blog.csdnimg.cn/76b066a0fb5b4986b8852b1c32645963.png#pic_center" alt="估算活动资源的ITO" width="500"></p><h4 id="估算活动资源输出"><a class="header-anchor" href="#估算活动资源输出"></a>估算活动资源输出</h4><p>活动资源需求明确了工作包中每个活动所需的资源类型和数量。</p><p>资源分解结构( RBS )是资源依类型和类别的层次展现。有助于结合资源的使用情况,组织与报告项目的进展数据。</p><p><img src="https://img-blog.csdnimg.cn/c0d1cf4223504baa8fe17cc79393ba33.png#pic_center" alt="" width="500"></p><h3 id="5-估算活动持续时间"><a class="header-anchor" href="#5-估算活动持续时间"></a>5.估算活动持续时间</h3><p>估算活动持续时间是根据资源估算的结果,估算完成单项活动所需工作时段数的过程。确定完成每个活动所需花费的时间量,为制订进度计划过程提供主要输入。活动持续时间估算是对完成某项活动所需的工作时段数的定量评估。持续时间估算中不包括任何滞后量。在活动持续时间估算中,可以指出一定的变动区间。<br><img src="https://img-blog.csdnimg.cn/68c0b6b23d774279ba6c26a85cd61b8c.png#pic_center" alt="估算活动时间ITO" width="500"></p><h4 id="项目进度管理的技术和工具"><a class="header-anchor" href="#项目进度管理的技术和工具"></a>项目进度管理的技术和工具</h4><p>软件开发项目通常用LOC衡量项目规模, LOC指所有的可执行的源代码行数(大概率不会考）</p><p>例如,某软件公司统计发现该公司每- -万行C语言源代码形成的源文件约250KB。某项目的源文件大小为3.75MB ,则可估计该项目源代码大约为15万行,该项目累计投入工作量为240人月,每人月费用为10000元(包括人均工资、福利、办公费用公摊等) , 则该项目中1LOC的价值为:</p><p>( 240X 10000 ) / 150000=16元/LOC</p><p>该项目的人月均代码行数为:<br>150000/240-625L0C/人月</p><blockquote><p>项目工作量和工期的估计,通常有以下几种方法:<br>( 1 ) Delphi法的特点:专家、多轮、匿名、趋于一致。  德尔菲法<br>( 2 )类比估算法:适合评估一些与<mark>历史项目</mark>在应用领域,环境和复杂度等方面相似的项目,通过新项目与历史项目的比较得到规模估计。由于类比估算法估计结果的精度取决于<mark>历史项目数据的完整性和准确度(精度低)</mark><br>( 3 )参数估算法:是一种基于<mark>历史数据和项目参数</mark>,使用某种算法来计算成本或工期的估算技术。参数估算的准确性取决于<mark>参数模型的成熟度和基础数据的可靠性</mark>。参数估算可以针对整个项目或项目中的某个部分,并可与其他估算方法联合使用。<br>( 4 )储备分析:需考虑应急储备(有时称为时间储备或缓冲时间) ,并将其纳入项目进度计划中,用来应对进度方面的不确定性。</p><ul class="lvl-1"><li class="lvl-3">应急储备是包含在进度基准中的一段持续时间 ,用来应对已经接受的已识别风险,以及已经制定应急或减轻措施的已识别风险。应急储备与“<mark>已知-未知</mark>"风险相关,需要加以合理估算,用于完成未知的工作量。应急储备可取活动持续时间估算值的某一百分比、某一固定的时间段,或者通过定量分析来确定,如蒙特卡洛模拟法。(<mark>已知-未知</mark>:知道存在但不能预测的风险。例如,我们知道股票市场偶尔会崩盘,但没有人能准确地预测它何时发生或会崩到什么程度。)</li><li class="lvl-3">管理储备是为管理控制的目的而特别留出的项目时段,用来应对项目范围中不可预见的工作。管理储备用来应对会影响项目的“<mark>末知-末知</mark>”风险。<mark>管理储备不包括在进度基准中</mark>,但属于项目总持续时间的一部分。使用管理储备可能需要变更进度基准。(<mark>未知-未知</mark>:毫无头绪的风险,我们甚至没有想到它们可能存在。例如，1941年珍珠港遭到日本神风特攻队的袭击时,美国没有做好任何准备,因为它从来没有设想过这样的袭击可能会发生。)<br><img src="https://img-blog.csdnimg.cn/dd26d562a9114314ac0b48771244ad04.png#pic_center" alt="" width="500"></li></ul></blockquote><h4 id="三点估算技术"><a class="header-anchor" href="#三点估算技术"></a>三点估算技术</h4><p>计划评审技术（PERT），又称为三点估算技术（涉及到计算题，放到第二阶段讲解）</p><h3 id="6-制定进度计划"><a class="header-anchor" href="#6-制定进度计划"></a>6. 制定进度计划</h3><p>制订进度计划是分析活动顺序、持续时间、资源需求和进度制约因素,创建项目进度模型的过程。把活动、持续时间、资源、资源可用性和逻辑关系代入进度规划工具,从而形成包含各个项目活动的计划日期的进度模型。</p><p>制订可行的项目进度计划,往往是一个反复进行的过程。经批准的最终进度计划将作为<mark>基准</mark>用于控制进度过程</p><p><img src="https://img-blog.csdnimg.cn/f48687244e294677951cd8c38ccd9d3a.png#pic_center" alt="" width="500"></p><h4 id="关键路径法"><a class="header-anchor" href="#关键路径法"></a>关键路径法</h4><p>最早开始时间和最晚开始时间相等的活动称为关键活动,关键活动串联起来的路径成为关键路径。</p><p>进度网络图中可能有<mark>多条</mark>关键路径。在项目进展过程中,有的活动会提前完成,有的活动会推迟完成,有的活动会中途取消,新的活动可能会被中途加入,网络图在不断变化,关键路径也在<mark>不断变化</mark>之中。</p><p><mark>关键路径</mark>是项目中<mark>时间最长</mark>的活动顺序,决定着可能的项目最短工期。</p><p><img src="https://img-blog.csdnimg.cn/88e4e57313584f16925a76a3cb23f404.png#pic_center" alt="" width="500">)</p><h4 id="关键链法"><a class="header-anchor" href="#关键链法"></a>关键链法</h4><p>关键链法(CCM)是一-种进度规划方法1允许项目团队在任何项目进度路径上设置缓冲，以应对资源限制和项目的不确定性。这种方法建立在<mark>关键路径法</mark>之上,考虑了资源分配、资源优化、资源平衡和活动历时不确定性对关键路径的影响。</p><p>关键链法增加了作为“非工作活动”的持续时间缓冲,用来应对不确定性。</p><blockquote><p><mark>项目缓冲</mark>,放置在关键链末端的缓冲称为项目缓冲,用来保证项目不因关键链的延误而延误。<mark>接驳缓冲</mark>，则放置在非关键链与关键链的接合点,用来保护关键链不受非关键链延误的影响。应该根据相应活动链的持续时间的不确定性,来决定每个缓冲时段的长短。一旦确定了"缓冲活动”, 就可以按可能的最迟开始与最迟完成日期来安排计划活动。这样一来 ,关键链法不再管理网络路径的总浮动时间,而是重点管理剩余的缓冲持续时间与剩余的活动链持续时问之间的匹配关系。<br><img src="https://img-blog.csdnimg.cn/902aef92744c4b2fa131fa8dd7782fa7.png#pic_center" alt="" width="500"></p></blockquote><h4 id="资源优化技术"><a class="header-anchor" href="#资源优化技术"></a>资源优化技术</h4><p>资源优化技术是根据资源供需情况,来调整进度模型的技术,包括:<br><mark>资源平滑是不彻底的资源平衡,因为它的底线是不能改变关键路径</mark></p><ul class="lvl-0"><li class="lvl-2"><p><mark>资源平衡</mark>( Resource Leveling)。为了在资源需求与资源供给之间取得平衡,根据资源制约对开始日期和结束日期进行调整的一种技术。 如果共享资源或关键资源只在特定时间可用,数量有限,或被过度分配,如一个资源在同一时段内被分配至两个或多个活动,就需要进行资源平衡。也可以为保持资源使用量处于均衡水平而进行资源平衡。<mark>资源平衡往往导致关键路径改变,通常是延长。( 能让资源最优化，但可能改变关键路径)！</mark></p></li><li class="lvl-2"><p><mark>资源平滑</mark>(Resource Smoothing)。对进度模型中的活动进行调整,从而使项目资源需求不超过预定的资源限制的一种技术。相对于资源平衡而言,资源平滑不会改变项目关键路径,完工日期也不会延迟。也就是说,活动只在其自由浮动时间和总浮动时间内延迟。因此,资源平滑技术可能无法实现所有资源的优化。(<mark>不会改变关键路径,很多时候无法让资源最优化</mark>)</p></li></ul><h4 id="进度压缩技术"><a class="header-anchor" href="#进度压缩技术"></a>进度压缩技术</h4><p>进度压缩技术是指在<mark>不缩减项目范围</mark>的前提下,缩短进度工期,以满足进度制约因素、强制日期或其他进度目标。进度压缩技术包括(但不限于) :</p><ul class="lvl-0"><li class="lvl-2"><p>赶工。通过增加资源,以最小的成本增加来压缩进度I期的一种技术。赶工的例子包括:批准加班、增加额外资源或支付加急费用,来加快关键路径上的活动。赶工只适用于那些通过增加资源就能缩短持续时间的,且位于关键路径上的活动。赶工并非总是切实可行,它可能导致风险和/或成本的增加。</p></li><li class="lvl-2"><p>快速跟进。一种进度压缩技术,将正常情况下按顺序进行的活动或阶段改为至少是部分并行开展。例如,在火楼的建筑图纸尚未全部完成前就开始建地基。快速跟进可能造成返I和风险增加。它只适用于能够通过并行活动来缩短项目工期的情况。</p></li></ul><h4 id="制定进度计划输出"><a class="header-anchor" href="#制定进度计划输出"></a>制定进度计划输出</h4><p><mark>进度基准</mark>是经过批准的项目进度计划，只有通过正式的变更控制程序才能进行变更,用作与实际结果进行比较的依据。项目进度计划的图形表示方式:横道图(也称为甘特图)、里程碑图、项目进度网络图、时标逻辑图(也叫<mark>时标网络图</mark>)<br><img src="https://img-blog.csdnimg.cn/3851cb951e3f4239bec3ebb6d1bc7b28.png#pic_center" alt="" width="500"></p><h3 id="7-控制进度"><a class="header-anchor" href="#7-控制进度"></a>7. 控制进度</h3><p>控制进度是监督项目活动状态，更新项目进展,管理进度基准变更,以实现计划的过程。本过程的主要作用是,提供发现计划偏离的方法,从而可以及时采取纠正和预防措施,以降低风险。</p><blockquote><p>进度控制关注如下内容:<br>①判断项目进度的当前状态。<br>②对弓起进度变更的因素施加影响,以保证这种变化朝着有利的方向发展。<br>③判断项目进度是否已经发生变更。<br>④当变更实际发生时严格按照变更控制流程对其进行管理。</p></blockquote><p><mark>进度基准的任何变更都必须经过实施整体变更控制过程的审批。控制进度是实施整体变更控制过程的一个组成部分</mark>。</p><p><img src="https://img-blog.csdnimg.cn/dfce003210084a8cbbdac96235618162.png#pic_center" alt="控制进度的ITO" width="500"><br>重缩短活动的工期的方法（背诵)‼️</p><ol><li class="lvl-3"><p>赶工，投入更多的资源或增加工作时间，以缩短关键活动的工期</p></li><li class="lvl-3"><p>快速跟进，并行施工，以缩短关键路径的长度</p></li><li class="lvl-3"><p>使用高素质的资源或经验更丰富的人员</p></li><li class="lvl-3"><p>（<mark>在甲方同意的基础上</mark>）减小活动范围或降低活动要求</p></li><li class="lvl-3"><p>改进方法或技术，以提高生产效率</p></li><li class="lvl-3"><p>加强质量管理，及时发现问题，减少反工，从而缩短工期</p></li></ol><h2 id="三点估算"><a class="header-anchor" href="#三点估算"></a>三点估算</h2><p>首先使用三点估算法分别计算每个活动的期望工期，求出关键路径和工期</p><p>三点估算：</p><p><mark>活动历时均值（期望工期）=（乐观时间+4*最可能时间+悲观时间）/6</mark></p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第五章项目范围管理</title>
      <link href="/2022/08/26/gao-xiang-di-wu-zhang-xiang-mu-fan-wei-guan-li/"/>
      <url>/2022/08/26/gao-xiang-di-wu-zhang-xiang-mu-fan-wei-guan-li/</url>
      
        <content type="html"><![CDATA[<h1>第五章项目范围管理</h1><p>需求是龙头，是做项目管理的基础，没有需求就不能确定项目的范围，没有范围，项目就无从谈起</p><p>上午、案例分析、论文写作都会进行考察。项目范围管理一般上午考察3分</p><h2 id="范围管理ITO（掌握）"><a class="header-anchor" href="#范围管理ITO（掌握）"></a>范围管理ITO（掌握）</h2><p><img src="https://img-blog.csdnimg.cn/653138bb2b1844329b666c3be4c28b6b.png#pic_center" alt="" width="600"><br><img src="https://img-blog.csdnimg.cn/b64469aa7ce54b10bef3f5b5ea983668.png#pic_center" alt="" width="600"></p><h2 id="项目范围管理概述"><a class="header-anchor" href="#项目范围管理概述"></a>项目范围管理概述</h2><p>需要做以下三个方面的工作（了解）<br><img src="https://img-blog.csdnimg.cn/c44a8728666749809266d33271a8e7bf.png#pic_center" alt="" width="600"></p><h3 id="产品范围与项目范围（掌握）"><a class="header-anchor" href="#产品范围与项目范围（掌握）"></a>产品范围与项目范围（掌握）</h3><p>( 1 )产品范围是指产品或者服务所应该包含的功能,项目范围是指为了能够交付产品,项目所必须做的工作。<br>( 2 )产品范围是项目范围的基础,产品范围的定义是产品要求的描述,而项目范围的定义是产生项目管理计划的基础,两种范围在应用上有区别。<br>( 3 )<mark>项目的范围基准是经过批准的项目范围说明书、WBS和WBS词典</mark>。判断项目范围是否完成,要以范围基准来衡量。产品范围是否完成,则根据产品是否满足了产品描述来判断。<br>( 4)产品范围描述是项目范围说明书的重要组成部分,因此,产品范围变更后，首先受到影响的是项目的范围</p><h3 id="范围管理过程（背诵）‼️"><a class="header-anchor" href="#范围管理过程（背诵）‼️"></a>范围管理过程（背诵）‼️</h3><p><img src="https://img-blog.csdnimg.cn/03546a97a59d4a48b91ef31619f21a12.png#pic_center" alt="" width="600"></p><p><img src="https://img-blog.csdnimg.cn/c886114ec24b4ec3965c059dec7df253.png#pic_center" alt="" width="600"></p><h2 id="规划范围管理"><a class="header-anchor" href="#规划范围管理"></a>规划范围管理</h2><p>规划范围管理是编制范围管理计划,书面描述将如何定义、确认和控制项目范围的过程,在整个项目中对如何管理范围提供指南和方向。范围管理计划需要项目管理团队全员参与。项目范围管理计划可能在项目管理计划之中，也可能作为单独的一项。根据不同的项目，可以是<mark>详细的或者概括的</mark>，可以是<mark>正式的或者非正式的</mark></p><h3 id="规划范围管理的ITO"><a class="header-anchor" href="#规划范围管理的ITO"></a>规划范围管理的ITO</h3><p><img src="https://img-blog.csdnimg.cn/1d7572f13620410c89148d790d5c4804.png#pic_center" alt="" width="500"></p><h3 id="范围管理计划的内容（掌握）"><a class="header-anchor" href="#范围管理计划的内容（掌握）"></a>范围管理计划的内容（掌握）</h3><p>范围管理计划的内容:（分析默写）（背诵）‼️</p><blockquote><p>①如何制订项目范围说明书。(<mark>定义范围</mark>)<br>②如何根据范围说明书创建WBS。( <mark>工作分解结构</mark>)<br>③如何维护和批准WBS。 (<mark>工作分解结构</mark>)<br>④如何确认和正式验收已完成的项目可交付成果。( <mark>确认范围</mark>)<br>⑤如何处理项目范围说明书的变更,该工作与实施整体变更控制过程直接相联。(<mark>控制范围</mark>)</p></blockquote><p>例如,对于WBS的编制指南可能有(但不限于)如下内容:（选择题）</p><blockquote><p>①确定WBS满足职能和项目的要求,包括重置和非重置成本。<br>②检查WBS是否为所有的项目工作提供了逻辑细分。<br>③保证每一个特定层的总成本等于下一个层次构成要素的成本和。<br>④从全面适应和连续角度来检查WBS。<br>⑤所有的工作职责需分配到个人或组织单元。</p></blockquote><h3 id="需求管理计划"><a class="header-anchor" href="#需求管理计划"></a>需求管理计划</h3><p><img src="https://img-blog.csdnimg.cn/fbf84107ce434dcdaa8355c6101c19b1.png#pic_center" alt="" width="600"><br><img src="https://img-blog.csdnimg.cn/017b8242def54dd493121c8d1440b17f.png#pic_center" alt="了解即可" width="500"></p><p><img src="https://img-blog.csdnimg.cn/215e4faee6494e7692b83e3fd34343b6.png#pic_center" alt="了解即可" width="500"></p><h2 id="收集需求"><a class="header-anchor" href="#收集需求"></a>收集需求</h2><h3 id="ITO"><a class="header-anchor" href="#ITO"></a>ITO</h3><p><img src="https://img-blog.csdnimg.cn/e6768ff6ef8748f4a587dfb97439d6a0.png#pic_center" alt="" width="500"></p><h3 id="收集需求的工具与技术"><a class="header-anchor" href="#收集需求的工具与技术"></a>收集需求的工具与技术</h3><p>收集需求的工具与技术主要有访谈、焦点小组、引导式研讨会、群体创新技术、群体决策技术、问卷调查、观察、原型法、标杆对照、系统交互图、文件分析等。<br>( 1 )访谈是通过与<mark>干系人直接交谈</mark>来获取信息的正式或非正式的方法,是最基本的一-种收集需求的手段<br>( 2 )<strong>焦点小组</strong>将预先选定的干系人和<strong>主题专家</strong>集中在一起，了解他们对所提议产品、服务或成果的期望和态度。由一位受过训练的<mark>主持人</mark>弓|导大家进行互动式讨论。焦点小组往往比一-对一 的访谈更加热烈。焦点小组是一种群体访谈而非一对- -访谈,可以有6一10个被访谈者参加。针对访谈者提出的问题,被访谈者之间开展互动式讨论,以求得到更有价值的意见。( <mark>主持人,分组讨论</mark>)<br>( 3 )通过邀请主要的跨职能干系人一起参加会议,引导式研讨会对产品需求进行集中讨论与定义。研讨会是快速定义<mark>跨职能</mark>需求和协调干系人差异的重要技术。由于群体互动的特点,被有效|导的研讨会有助于建立信任、促进关系、改善沟通,从而有利于参加者达成一致意见。该技术的另- -个好处是,能够比单项会议<mark>更快</mark>地发现和解决问题。<br>( 4 )群体创新技术是指可以组织- -些群体活动来识别项目和产品需求,群体创新技术包括头脑风暴法、名义小组技术、德尔菲技术、概念/思维导图、亲.和图和多标准决策分析等。</p><ul class="lvl-0"><li class="lvl-2"><p>头脑风暴法:各抒己见、集思广益</p></li><li class="lvl-2"><p>名义小组技术:通过<mark>投票来排列最有用的创意</mark>,<mark>以便进行进一步的头脑风暴</mark>或优先排序。 是头脑风暴法的深化应用，是更加结构化的头脑风暴法;</p></li><li class="lvl-2"><p>德尔菲技术:采用<mark>匿名或背靠背</mark>的方式、预测过程几轮反馈,使专家的意见逐渐趋同、有助于减轻数据的偏倚，防止任何个人对结果产生不恰当的影响。</p></li><li class="lvl-2"><p>思维导图又称为心智图,是将从头脑风暴中获得的创意,<mark>用一张简单的图联系起来</mark> ,以反映这些创意之间的共性与差异,从而引导出新的创意。</p></li><li class="lvl-2"><p>亲和图又称为KJ法,是针对某一问题,充分收集各种经验、知识、想法和意见等语言、文字资料,通过<mark>图解</mark>方式进行汇总,并按其相互亲和性归纳整理这些资料,使问题明确起来,求得统- -认识 ,以利于解决的一种方法。</p></li><li class="lvl-2"><p>多标准决策分析是借助决策矩阵,用系统分析方法建立诸如风险水平、不确定性和价值收益等多种标准,从而对众多方案进行评估和排序的一种技术。</p></li></ul><p>( 5 )群体决策就是为达成某种期望结果而对多个未来行动方案进行评估。群体决策技术可用来开发产品需求,以及对产品需求进行归类和优先排序。达成群体决策的方法有:</p><ul class="lvl-0"><li class="lvl-2"><p>一致同意( Unanimity)。所有人都同意某个行动方案</p></li><li class="lvl-2"><p>大多数原则( Majority )。获得群体中50%以上的人的支持,就能做出决策。</p></li><li class="lvl-2"><p>相对多数原则( Plurality )。根据群体中相对多数者的意见做出决定,即便未能获得一部分人的支持。通常在候选项超过两个时使用该原则</p></li><li class="lvl-2"><p>独裁(Dictatorship )。由某一个人(例如,项目经理)为群体做出决策</p></li></ul><p>( 6 )问卷调查<br>( 7 )观察:是指直接观察个人在各自的环境中如何开展工作和实施流程。<br>( 8 )原型法<br>( 9 )标杆对照将实际或计划的做法与其他类似组织的做法(例如，流程、操作过程等)进行比较，以便识别最佳实践,形成改进意见,并为绩效考核提供依据。<br>( 10 )系统交互图是范围模型的一个例子,它是对产品范围的可视化描述,显示系统(过程、设备、信息系统等)与参与者(用户、独立于本系统之外的其他系统)之间的交互方式。系统交互图显示了业务系统的输入、输入提供者、业务系统的输出和输出接收者。<br>( 11 )文件分析:通过分析现有文档,识别与需求相关的信息来挖掘需求。可供分析的文档很多,包括商业计划、营销文档、协议、招投标文件、建议邀请书、业务流程、逻辑数据模型、业务规则库、应用软件文档、用例文档、其他需求文档、问题日志、政策、程序和法规文件等。</p><h3 id="需求文件（了解）"><a class="header-anchor" href="#需求文件（了解）"></a>需求文件（了解）</h3><p>收集需求过程的主要输出有<mark>需求文件</mark>和<mark>需求跟踪矩阵</mark>。需求文件描述各种单一的需求将如何满足与项目相关的业务需求。需求文件既可以<mark>是一份按干系人和优先级分类列出全部需求的简单文件</mark>,也可以是<mark>一份包括内容提要、细节描述和附件等的详细文件</mark>。</p><blockquote><p>需求文件的内容包括:<br>①业务需求<br>②干系人需求<br>③解决方案需求<br>④项目需求<br>⑤过渡需求<br>⑥与需求有关的假设条件、依赖关系和制约因素。</p></blockquote><h3 id="需求跟踪"><a class="header-anchor" href="#需求跟踪"></a>需求跟踪</h3><p>可跟踪性是项目需求的一个重要特征,需求跟踪是将单个需求和其他元素之间的依赖关系和逻辑联系建立跟踪,这些元素包括各种类型的需求、业务规则、系统组件,以及帮助文件等。<mark>向验证性是需求的最基本特性</mark></p><p>每个配置项的需求到其涉及的产品(或构件)需求都要具有双向可跟踪性。所谓双向跟踪,包括<mark>正向跟踪和反向跟踪</mark></p><ul class="lvl-0"><li class="lvl-2"><p>正向跟踪是指检查需求文件中的<mark>每个需求</mark>是否都能在<mark>后继工作产品</mark>(成果)中找到对应点;</p></li><li class="lvl-2"><p>反向跟踪也称为逆向跟踪,是指<mark>检查设计文档、产品构件、测试文档</mark>等工作成果是否都能在<mark>需求文件</mark>中找到出处。</p></li><li class="lvl-2"><p>具体来说,需求跟踪涉及五种类型,如图,箭头表示<mark>需求跟踪能力联系链</mark>，它能跟踪需求使用的整个周期,即从需求建议到交付的全过程。</p></li></ul><p><img src="https://img-blog.csdnimg.cn/82cbfb0566ac41f0ba7611fe7322cb71.png#pic_center" alt="" width="500"></p><h3 id="需求跟踪矩阵"><a class="header-anchor" href="#需求跟踪矩阵"></a>需求跟踪矩阵</h3><p>表示需求和其他产品元素之间的联系链的最普遍方式是使用<mark>需求跟踪(能力)矩阵</mark>,需求跟踪矩阵是将产品需求从其来源连接到能满足需求的可交付成果的一-种表格。</p><p><img src="https://img-blog.csdnimg.cn/ec6d10b64c934807b642622a5c3c0ee3.png#pic_center" alt="" width="600"></p><blockquote><p>需要跟踪的内容包括以下几个方面。<br>( 1 )业务需求、机会、目的和目标。<br>( 2 )项目目标。<br>( 3 )项目范围(WBS可交付成果)。<br>( 4 )产品设计。<br>( 5 )产品开发。<br>( 6 )<mark>测试策略和测试场景</mark>。<br>( 7 )高层级需求到详细需求。</p></blockquote><p>典型的属性：需求跟踪矩阵中记录的典型属性包括唯一标识、需求的文字描述、收录该需求的理由、所有者、来源、优先级别、版本、当前状态(例如,<mark>进行中、已取消、已推迟、新增加口、已批准、已分配、己完成</mark>等)和状态日期。<br>![](<a href="https://img-blog.csdnimg.cn/c9e9775cb3754a75a166233c4d958787.png#pic_center">https://img-blog.csdnimg.cn/c9e9775cb3754a75a166233c4d958787.png#pic_center</a> =800x#pic_center)</p><h2 id="定义范围"><a class="header-anchor" href="#定义范围"></a>定义范围</h2><h3 id="ITO-2"><a class="header-anchor" href="#ITO-2"></a>ITO</h3><p><img src="https://img-blog.csdnimg.cn/f0533c2890924d3ebdce626936516eda.png#pic_center" alt="" width="500"></p><h3 id="定义范围的工具与技术"><a class="header-anchor" href="#定义范围的工具与技术"></a>定义范围的工具与技术</h3><p>定义范围工具与技术:专家判断、产品分析、备选方案生成和引导式研讨会。</p><p>( 1 )产品分析:通常,针对产品提问并回答,形成对将要开发的产品的用途、特征和其他方面的描述(<mark>项目范围说明书中有验收标准所以要做产品分析</mark>)产品分析技术包括产品分解、系统分析、需求分析、系统工程、价值工程(<mark>产品没做出来之前</mark>)和价值分析(<mark>产品做出来之后</mark>)。</p><p>( 2 )备选方案生成:用来指定尽可能多的潜在可选方案的技术,用于识别执行项目工作的不同方法</p><h3 id="项目范围说明说明书（背诵）‼️"><a class="header-anchor" href="#项目范围说明说明书（背诵）‼️"></a>项目范围说明说明书（背诵）‼️</h3><p>项目范围说明书的内容:<br>①产品范围描述<br>②验收标准<br>③可交付成果<br>④项目的除外责任(<mark>什么不能做</mark>)<br>⑤制约因素<br>⑥假设条件</p><p>项目范围说明书的主要作用:<br>①确定范围<br>②沟通基础<br>③规划和控制依据<br>④<mark>变更基础</mark><br>⑤规划基础</p><h2 id="创建工作分解结构（WBS）"><a class="header-anchor" href="#创建工作分解结构（WBS）"></a>创建工作分解结构（WBS）</h2><p>创建WBS是将项目可交付成果和项目工作分解成较小的、更易于管理的组件的过程，其主要作用是对所要交付的内容提供一个结构化的视图<br><img src="https://img-blog.csdnimg.cn/59763ea15652472b9ddd8430cc934834.png#pic_center" alt=""><br>( 1 )在每个分解单元中都存在可交付成果和里程碑。里程碑标志着某个可交付成果或者阶段的正式完成。</p><p>( 2 )工作包是位于WBS每条分支最底层的可交付成果或项目工作组成部分，应便于完整地分派给不同的人或组织单元,所以要求明确各工作单元直接的界面。工作包应该非常具体,以便承担者能明确自己的任务、努力的目标和承担的责任。作为一-种经验法则, <mark>8/80规则</mark>( 80小时原则)建议工作包的大小应该<mark>至少需要8小时来完成</mark>,而<mark>总完成时间也不应该大于80小时</mark></p><p>( 3 )控制账户是一种管理控制点。在该控制点上,将范围、预算(资源计划) (实际成本和进度加以整合,并将它们与挣值进行比较,以测量绩效。控制账户是WBS某个层次上的要素,既可以是工作包,也可以是比工作包更高层次上的一个要素。如果是后一种情况, <mark>一个控制账户中就包括若干个工作包，但一个工作包仅属于一个控制账户</mark>。项目管理团队在控制账户上考核项目的执行情况,即在控制账户的相应要素下,将项目执行情况与计划情况进行比较,以便评价执行情况好坏，并发现与纠正偏差。<br>( 4 )规划包是指在控制账户之下，工作内容已知但尚缺详细进度活动的WBS组成部分。<mark>规划包是在控制账户之下、工作包之上的WBS要素</mark>。规划包是暂时用来做计划的,随着情况的逐渐清晰,规划包最终将被分解成工作包以及相应的具体活动。<br>( 5 )WBS词典也称为WBS词汇表,它是描述WBS各组成部分的文件。对于WBS的每一组成部分 ，WBS词典可能包括账户编码标识、工作描述、假设条件和制约因素、负责人或组织单元、进度里程碑、相关的进度活动、所需资源、成本估算、质量要求、验收标准、技术参考文献、协议信息等。( WBS字典实际是相当于新华字典,是对WBS中每个元素的描述)</p><h3 id="创建WBS的ITO"><a class="header-anchor" href="#创建WBS的ITO"></a>创建WBS的ITO</h3><p><img src="https://img-blog.csdnimg.cn/cfb24a46a8a64f27bea863fab386c382.png#pic_center" alt="" width="500"></p><h3 id="创建工作分解结构（WBS）（背诵）‼️"><a class="header-anchor" href="#创建工作分解结构（WBS）（背诵）‼️"></a>创建工作分解结构（WBS）（背诵）‼️</h3><p>分解是一种将项目可交付成果和项目工作分解成较小的、更易于管理的组件的技术。</p><blockquote><p>要将整个项目工作分解为工作包,需要开展以下活动:<br>①识别和分析可交付成果及相关工作(<mark>要分解什么</mark>)<br>②确定WBS的结构和编排方法(<mark>怎么分解</mark>)<br>③自.上而下逐层细化分解(<mark>开始分解</mark>)<br>④为WBS组件制定和分配标识编码(<mark>编码</mark>)<br>⑤核实可交付成果分解的程度是恰当的(<mark>检查和确认</mark>)</p></blockquote><p>WBS分解的方法<br>①项目生命周期的各阶段作为分解的第二层,产品和项目可交付成果放在第三层<br>②主要可交付成果作为分解的第二层<br>③整合可能由项目团队以外的组织来实施的各种组件(例如,外包工作)然后作为外包工作的一部分,卖方需编制相应的合同WBS。<br><img src="https://img-blog.csdnimg.cn/fbba2ba224b3478e8875775309357eaf.png#pic_center" alt=""></p><p>‼️WBS不是某个项目团队成员的责任，应该由全体团队成员、用户和项目干系人共同完成和一致确认</p><blockquote><p>WBS分解注意8个方面<br>①WBS必须是面向可交付成果的。<br>②WBS必须符合项目的范围。<br>③WBS的底层应该支持计划和控制<br>④WBS中的元素<mark>必须有人负责,而且只由一个人负责</mark>,尽管实际上可能需要多个人参与。<br>⑤WBS的指导, WBS应控制在<mark>4一6层</mark>。<br>⑥WBS应<mark>包括项目管理工作</mark>(因为管理是项目具体.工作的一部分) ,<mark>也要包括分包出去的工作</mark>。<br>⑦WBS的编制需要所有(主要)项目干系人的参与,需要项目团队成员的参与。<br>⑧WBS并非是一-成不变的。在完成了WBS之后的工作中,仍然有可能需要对WBS进行修改。</p></blockquote><h2 id="确认范围"><a class="header-anchor" href="#确认范围"></a>确认范围</h2><p>确认范围是正式验收项目已完成的可交付成果的过程。确认范围包括与<mark>客户或发起人</mark>一起审查可交付成果,确保可交付成果已圆满完成,并获得<mark>客户或发起人</mark>的正式验收。</p><p>确认范围的主要工具与技术是检查和群体决策技术。</p><p>检查也称为审查、评审、审计、走查、巡检、测试等,是指开展测量、审查与确认等活动,来判断工作和可交付成果是否符合需求和产品验收标准。</p><blockquote><p>评审：正式评估，找不足审计：独立检查</p></blockquote><blockquote><p>步骤：（了解）<br>①确定需要进行范围确认的<mark>时间</mark>。<br>②识别范围确认需要哪些<mark>投入</mark>。<br>③确定范围正式被接受的<mark>标准和要素</mark>。<br>④确定范围确认会议的组织<mark>步骤</mark>。<br>⑤组织范围确认<mark>会议</mark>。</p></blockquote><p>确认范围应该贯穿项目的始终。</p><blockquote><p>确认范围与质量控制的不同之处在于：<br>①自确认范围生要强调可交付成果获得客户或发起人的接受;质量控制强调可交付成果的正确性，并符合为其制定的具体质量要求(质量标准)。<br>②<mark>质量控制一般在确认范围前进行,也可同时进行;确认范围一般在阶段末尾进行</mark>，而质量控制并不一定在阶段未进行。<br>③质量控制属内部检查，由执行组织的相应质量部门实施;确认范围则是由外部干系人(客户或发起人)对项目可交付成果进行检查验收。从检查的详细程度来说，核实产品、确认范围和质量控制是递进的、越来越细的检查过程</p></blockquote><h3 id="范围基准"><a class="header-anchor" href="#范围基准"></a>范围基准</h3><p>项目的范围基准是<mark>经过批准的项目范围说明书、WBS和WBS词典</mark></p><h3 id="ITO-3"><a class="header-anchor" href="#ITO-3"></a>ITO</h3><p><img src="https://img-blog.csdnimg.cn/0dbc41803e9a4b95a24c7da375df2874.png#pic_center" alt="" width="500"></p><h2 id="控制范围"><a class="header-anchor" href="#控制范围"></a>控制范围</h2><p>控制范围是监督项目和产品的范围状态、管理范围基准变更的过程,其主要作用是在整个项目期间保持对范围基准的维护。对项目范围进行控制,就必须确保所有请求的变更、推荐的纠正措施或预防措施都经过实施整体变更控制过程的处理。在变更实际发生时,也要采用范围控制过程来管理这些变更。</p><blockquote><p>范围变更的原因<br>①政府政策的问题。<br>②项目范围的计划编制不周密详细,有一定的错误或遗漏。<br>③市场上出现了或是设计人员提出了新技术、新手段或新方案。<br>④项目执行组织本身发生变化。<br>⑤客户对项目、项目产品或服务的要求发生变化。</p></blockquote><blockquote><p>未经控制的产品或项目范围的扩大(未对时间、成本和资源做相应调整)称为<mark>范围蔓延</mark>。【客户不断提出要求 ,不断去改,最终交付物不满足要求! <mark>镀金</mark>:项目实施人员往往愿意尝试新的技术或者为信息系统项目加上更牛x的功能】变更是不可避免的,控制范围过程依赖于范围变更控制系统,范围变更控制是指对有关项目范围的变更实施控制，审批项目范围变更的一系列过程,包括书面文件、跟踪系统和授权变更所必须的批准级别。</p></blockquote><blockquote><p>范围变更控制的工作（了解）<br>①影响导致范围变更的因素,并尽量使这些因素向有利的方面发展。<br>②判断范围变更是否E 3经发生。<br>③范围变更发生时管理实际的变更,确保所有被请求的变更按照项目整体变更控制过程处理.</p></blockquote><h3 id="ITO-4"><a class="header-anchor" href="#ITO-4"></a>ITO</h3><p><img src="https://img-blog.csdnimg.cn/997a401ed25b4e769bc9338abd992254.png#pic_center" alt="" width="500"></p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第四章项目整体管理</title>
      <link href="/2022/08/23/gao-xiang-di-si-zhang-xiang-mu-zheng-ti-guan-li/"/>
      <url>/2022/08/23/gao-xiang-di-si-zhang-xiang-mu-zheng-ti-guan-li/</url>
      
        <content type="html"><![CDATA[<h1>第四章项目整体管理</h1><p>项目整体管理是10大知识领域的核心地位，其功效是整合项目资源。整体管理是一个全局性、综合性的管理过程，起着总体的协调和把关的作用。</p><p>上午选择、案例分析、论文写作都会进行考察。项目整体管理一般上午考察3-4分左右</p><p>学习路线：</p><ol><li class="lvl-3"><p>每个管理领域都有哪些过程，要求熟练记忆</p></li><li class="lvl-3"><p>每个过程都有哪些输入、输出、工具与技术、最少掌握一个输入、输出、工具与技术（上午选择题、下午案例分析、论文写作）</p></li><li class="lvl-3"><p>每个管理领域都有什么问题，应该怎么解决（下午案例分析）</p></li><li class="lvl-3"><p>每一个管理领域和其他管理领域的关系</p></li></ol><p>整体管理ITO（掌握）</p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9-%E7%AC%AC%E5%9B%9B%E7%AB%A0%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%AE%A1%E7%90%861.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9-%E7%AC%AC%E5%9B%9B%E7%AB%A0%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%AE%A1%E7%90%862.png" alt=""></p><h2 id="整体管理过程（背诵）‼️"><a class="header-anchor" href="#整体管理过程（背诵）‼️"></a>整体管理过程（背诵）‼️</h2><ol><li class="lvl-3"><p>制定项目章程</p></li><li class="lvl-3"><p>制定项目管理计划</p></li><li class="lvl-3"><p>指导与管理项目执行</p></li><li class="lvl-3"><p>监控项目工作</p></li><li class="lvl-3"><p>实施整体变更控制</p></li><li class="lvl-3"><p>结束项目或阶段</p></li></ol><blockquote><ol><li class="lvl-3"><p>在项目前期，需要写一个文件就是项目章程，是正式批复项目启动的，并且任命项目经理的，为项目经理授权的</p></li><li class="lvl-3"><p>和大家一起编制一个项目管理计划，为项目的执行奠定了基础</p></li><li class="lvl-3"><p>按照计划执行</p></li><li class="lvl-3"><p>在执行的过程中做好监控，需要将实际和计划做一个变化，看有没有偏差，如果有偏差，需要纠偏</p></li><li class="lvl-3"><p>变更时不可避免的，如果有变更，要走一个变更流程</p></li><li class="lvl-3"><p>项目通过了验收，交付的产品，履行了相关合同条款，除此之外我们还要召开项目的总结会，进行项目的总结和项目的评估审计工作</p></li></ol></blockquote><h2 id="五大过程组与整体管理（背诵）‼️"><a class="header-anchor" href="#五大过程组与整体管理（背诵）‼️"></a>五大过程组与整体管理（背诵）‼️</h2><table><thead><tr><th>10大管理</th><th>启动过程组</th><th>规划过程组</th><th>执行过程组</th><th>监控过程组</th><th style="text-align:left">收尾过程组</th></tr></thead><tbody><tr><td>项目整体管理</td><td>1.制定项目章程</td><td>2.制定项目管理计划</td><td>3.指导与管理项目工作</td><td>4.监控项目工作 5.实施整体变更控制</td><td style="text-align:left">6.结束项目或阶段</td></tr><tr><td></td><td>设定项目目标</td><td>达到目的的途径、蓝图</td><td>按照既定的计划和批准的变更执行活动达到目标，通过手机数据，形成工作绩效数据</td><td>用计划的和批准的变更的标尺测量实际的项目、启动变更，形成信息，得到工作绩效信息</td><td style="text-align:left">正式结束项目或阶段，总结经验教训形成知识管理</td></tr></tbody></table><h2 id="制定项目章程"><a class="header-anchor" href="#制定项目章程"></a>制定项目章程</h2><p>项目章程是正式批准项目的文件。由于项目章程要<mark>授权项目经理</mark>在项目活动中动用组织的资源,所以,项目经理任何时候都应在<mark>规划开始之前被委派</mark>，最好是在制定项目章程之时。项目章程是由项目实施组织<mark>外部</mark>签发的(<mark>不是项目经理发布的</mark>)</p><blockquote><p>内容（背诵）‼️</p><p>①项目<mark>目的</mark>或批准项目的<mark>原因</mark><br>②可测量的项目目标和相关的<mark>成功标准</mark><br>③项目的<mark>总体要求</mark><br>④概括性的<mark>项目描述</mark><br>⑤项目的<mark>主要风险</mark><br>⑥总体里程碑<mark>进度计划</mark><br>⑦<mark>总体预算</mark><br>⑧项目<mark>审批要求</mark><br>⑨委派的项目经理及其<mark>职责和职权</mark>。<br>⑩发起人或其他批准项目章程的人员的<mark>姓名和职权</mark></p></blockquote><h3 id="制定项目章程的过程："><a class="header-anchor" href="#制定项目章程的过程："></a>制定项目章程的过程：</h3><p>制定项目章程是制定一份正式批准项目或阶段的文件;项目章程的批准,标志着项目的正式启动。在项目中,应尽早确认并任命项目经理，由于<mark>项目章程将授权项目经理</mark>在项目活动中使用组织资源,<mark>项目经理应该参与制定项目章程</mark>。项目章程由<mark>项目以外</mark>的人员批准,如发起人、项目管理办公室或项目组合指导委员会。项目章程经启动者签字,即标志着项目获得批准。</p><h3 id="制定项目章程的ITO"><a class="header-anchor" href="#制定项目章程的ITO"></a>制定项目章程的ITO</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第四章项目整体管理3.png" style="zoom:67%;"><details open=""><summary><span class="pre-summary">&nbsp;</span><strong>输入</strong></summary><p>协议：包括恶童、协议、协议书、意向书、口头协议、电子邮件或其他书面协议</p><p>工作说明书：sow时对应提供产品或服务的文字说明，对于内部，项目发起人或赞助人根据业务需求、产品或服务要求提供一份工作说明书。对于外部，工作说明书属于顾客招标文件的一部分，如建议邀请书、信息请求、招标邀请书或合同中的一部分</p><p>商业论证：经济可行性分析报告</p><p>事业环境因素：只能适应不能改变‼️</p><blockquote><p>事业环境因素:<br>①组织或公司的文化与组成结构<br>②政府或行业标准<br>③基础设施<br>④现有的人力资源<br>⑤人事管理<br>⑥公司工作核准制度<br>⑦市场情况<br>⑧项目干系人风险承受力<br>⑨商业数据库<br>⑩四项目管理信息系统</p></blockquote><p>组织过程资产：内部中的一些经验教训‼️</p><blockquote><p>①组织进行工作的过程与程序</p><p>②组织整体信息存储检索知识库</p></blockquote><p>区分：</p><p>①凡是可裁剪的、可选择的均为组织过程资产;凡是不可选择的、只能适应的均为事业环境因素<br>②凡是带系统的一般均为事业环境因素(比如:工作授权系统、项目管理信息系统)<br>③凡是带程序的一般均为组织过程资产(比如:财务控制程序、变更控制程序、风险控制程序)</p></details><details open=""><summary><span class="pre-summary">&nbsp;</span><strong>工具与技术</strong></summary><p>专家判断：是一个或多个专家一起讨论，做出判断</p><p>引导技术：头脑风暴、冲突处理、问题解决和会议管理等,都是引导者可以用来帮助团队和个人完成项目活动的关键技术。</p><p>会议(项目的例会、项目启动会议（由项目经理负责召开）、项目总结会)</p></details><h2 id="制定项目管理计划"><a class="header-anchor" href="#制定项目管理计划"></a>制定项目管理计划</h2><p>项目管理计划一般包括<mark>项目范围管理计划、进度管理计划、成本管理计划、质量管理计划、过程改进计划、人员配备管理计划、沟通管理计划、风险管理计划、采购管理计划</mark>等分计划。项目管理计划详略均可,可由一个或多个部分计划,以及其他事项组成。每-一个分计划和其他组成部分的详细程度都要满足具体项目的需要。其他组成部分可以包括这些内容:<mark>里程碑清单、资源日历、进度基准、成本基准、质量基准、风险登记册</mark>等。</p><p>项目管理计划可以是正式的也可以是非正式的,可以是详细的,可以是概括的</p><h3 id="项目管理计划的内容（背诵）"><a class="header-anchor" href="#项目管理计划的内容（背诵）"></a>项目管理计划的内容（背诵）</h3><ol><li class="lvl-3"><p>项目管理团队选择的各个<mark>项目管理过程</mark></p></li><li class="lvl-3"><p>每一选定过程的<mark>实施水平</mark></p></li><li class="lvl-3"><p>对实施这些过程时使用的<mark>工具与技术所做的说明</mark></p></li><li class="lvl-3"><p>在管理具体项目中使用<mark>选定过程的方式和方法</mark>，包括过程之间的依赖关系和相互作用，以及重要的依据和成果</p></li><li class="lvl-3"><p>为了实现项目目标所执行<mark>工作的方式、方法</mark></p></li><li class="lvl-3"><p>监控<strong>变</strong>更的<mark>方式、方法</mark></p></li><li class="lvl-3"><p>实施配置管理的<mark>方式、方法</mark></p></li><li class="lvl-3"><p>使用实施效果测量基准并使之保持完整的<mark>方式、方法</mark></p></li><li class="lvl-3"><p>项目干系人之间的<mark>沟通需要与技术</mark></p></li><li class="lvl-4"><p>选定的项目<mark>生命期和多阶段项目的项目阶段</mark></p></li><li class="lvl-4"><p>高层管理人员为了加快解决未解决的问题和处理未作出的决策，对内容、范围和时间安排的关键<strong>审</strong>查</p></li></ol><blockquote><p>四过程，一生命，三方法，变狗瓶</p></blockquote><h3 id="制定项目管理计划过程"><a class="header-anchor" href="#制定项目管理计划过程"></a>制定项目管理计划过程</h3><p>需要<mark>干系人的参与（全员参与）；逐步精确（迭代）</mark></p><p>制订项目管理计划过程是确定、编制所有部分计划并将其综合和协调为项目管理计划所必需的过程。项目管理计划是有关项目如何计划、执行、监控及结束的基本信息来源。</p><h3 id="制定项目管理计划ITO"><a class="header-anchor" href="#制定项目管理计划ITO"></a>制定项目管理计划ITO</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第四章项目整体管理4.png" style="zoom:67%;"><p>项目管理计划和子计划互为输入，项目管理计划就是整体管理计划</p><h3 id="项目管理信息系统"><a class="header-anchor" href="#项目管理信息系统"></a>项目管理信息系统</h3><p>项目管理信息系统是由用于归纳、综合和传播项目管理程序输出的工具和技术组成。一个项目管理信息系统主要由两部分组成的一计划系统和控制系统。</p><p>配置管理系统和变更控制系统是整个项目管理信息系统的一个子系统。该系统包括的过程用于提交变更建议,追踪变更建议的审查与批准制度,确定变更的批准级别,以及确认批准的变更方法。</p><p>变更控制系统:变更控制系统是正式形成文件的过程的全体,用于确定控制,改变和批准项目可交付成果和文件的方式、方法。变更控制系统是配置管理系统的一个子系统。</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第四章项目整体管理5.png" style="zoom:67%;"><h2 id="指导与管理项目执行"><a class="header-anchor" href="#指导与管理项目执行"></a>指导与管理项目执行</h2><p>要求实施：（<mark>以下都是批准的变更请求</mark>）</p><ol><li class="lvl-3"><p><mark>批准的</mark>纠正措施（是针对实际已经出现的偏差）</p></li><li class="lvl-3"><p><mark>批准的</mark>预防措施（针对将来可能出现的偏差）</p></li><li class="lvl-3"><p><mark>批准的</mark>缺陷补救（产品或产品组件，缺陷补救措施只针对项目质量问题）</p></li></ol><h3 id="ITO-6"><a class="header-anchor" href="#ITO-6"></a>ITO</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第四章项目整体管理6.png" style="zoom:67%;"><h3 id="项目绩效"><a class="header-anchor" href="#项目绩效"></a>项目绩效</h3><p>工作绩效数据：【<mark>执行的输出</mark>】工作绩效数据是执行过程中收集到的原始观察结果和数值，如：已完成的工作、关键绩效指标</p><p>工作绩效信息：【<mark>各控制过程输出</mark>】从各个控制过程收集并进行整合分析而得到的绩效数据，如：可交付成果状态，变更落实情况和预测的尚需完工估算</p><p>工作绩效报告：【<mark>监控的输出</mark>】为了制定决策或行动而汇编工作绩效信息所形成的文件，如：状态报告、备忘录等</p><h2 id="监控项目工作"><a class="header-anchor" href="#监控项目工作"></a>监控项目工作</h2><h3 id="ITO-7"><a class="header-anchor" href="#ITO-7"></a>ITO</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第四章项目整体管理7.png" style="zoom:67%;"><p>凡是监控过程输入肯定有<mark>计划和绩效</mark>，输出肯定有<mark>变更和更新</mark></p><h2 id="实施整体变更控制"><a class="header-anchor" href="#实施整体变更控制"></a>实施整体变更控制</h2><p>整体变更控制过程贯穿于项目的始终。由于项目很少会准确地按照项目管理计划进行,因而变更控制必不可少。</p><p>许多时候,整体变更控制过程包括一个负责批准或否决变更请求的变更控制委员会( CCB )。变更请求由项目经理审查、评价, CCB批准或否决。</p><p>变更控制委员会( CCB )最好由各方参加甲方、乙方、监理方,也可以是一个人就是甲方领导,可以是兼职人员,可以临时组建</p><h3 id="变更流程（背诵）‼️‼️"><a class="header-anchor" href="#变更流程（背诵）‼️‼️"></a>变更流程（背诵）‼️‼️</h3><p>1、提出与接受变更申请<br>2、对变更的初审<br>3、变更方案论证<br>4、项目变更控制委员会审查<br>5、发出变更通知并开始实施<br>6、变更实施的监控<br>7、变更效果的评估<br>8、判断发生变更后的项目是否已纳入正常轨道</p><h3 id="ITO-8"><a class="header-anchor" href="#ITO-8"></a>ITO</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第四章项目整体管理8.png" style="zoom:67%;"><h2 id="结束项目或阶段"><a class="header-anchor" href="#结束项目或阶段"></a>结束项目或阶段</h2><p>结束项目或阶段是完结所有项目管理过程组的所有活动,以正式结束项目或阶段的过程。总结经验教训,正式结束项目工作,为开展新工作而释放组织资源。</p><p>项目收尾分为:合同收尾和行政管理收尾</p><p>合同收尾:履行了相关合同条款,该验收的需要验收,该付款的需要付款。该交付的需要交付</p><p>行政管理收尾:要召开项目的总结会,进行项目的总结和项目的评估审计工作,需要找到经验和教训,需要更新组织过程资产</p><h3 id="ITO-9"><a class="header-anchor" href="#ITO-9"></a>ITO</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第四章项目整体管理9.png" style="zoom:67%;"><h2 id="总结"><a class="header-anchor" href="#总结"></a>总结</h2><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9-%E7%AC%AC%E5%9B%9B%E7%AB%A0%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%AE%A1%E7%90%8610.png" alt=""></p><h2 id="项目管理计划与项目文件的区别"><a class="header-anchor" href="#项目管理计划与项目文件的区别"></a>项目管理计划与项目文件的区别</h2><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9-%E7%AC%AC%E5%9B%9B%E7%AB%A0%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%AE%A1%E7%90%8611.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第三章项目立项管理</title>
      <link href="/2022/08/23/gao-xiang-di-san-zhang-xiang-mu-li-xiang-guan-li/"/>
      <url>/2022/08/23/gao-xiang-di-san-zhang-xiang-mu-li-xiang-guan-li/</url>
      
        <content type="html"><![CDATA[<h1>第三章项目立项管理</h1><p>根据历年的考试情况来看, 项目可行性研究和评估一般上午大概考2分左右。上午、案例分析、论文写作都可能进行考查。此章节内容<mark>需要记的比较多,理论性比较强</mark>,对大家来说应该算是个难点,因为很多人没有接触过本块的工作,比如论证、评估的区别,方法、内容、作用等。<mark>此部分论文比较难,不需要大家去准备,案例分析可以稍微去想想,可能会考哪些点。</mark></p><h2 id="甲方立项流程（掌握）"><a class="header-anchor" href="#甲方立项流程（掌握）"></a>甲方立项流程（掌握）</h2><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理1.png" style="zoom:67%;"><h2 id="乙方立项流程（掌握）"><a class="header-anchor" href="#乙方立项流程（掌握）"></a>乙方立项流程（掌握）</h2><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理2.png" style="zoom:67%;"><h2 id="立项管理内容（掌握）"><a class="header-anchor" href="#立项管理内容（掌握）"></a>立项管理内容（掌握）</h2><p>项目立项一般包括提交<mark>项目建议书、项目可行性研究、项目招标与投标</mark>等内容</p><h3 id="项目建议书（立项申请）"><a class="header-anchor" href="#项目建议书（立项申请）"></a>项目建议书（立项申请）</h3><p>是项目<mark>建设单位</mark>向上级主管部门提交项目申请时必须的文件，是对拟建项目提出的框架性的总体设想。</p><blockquote><p>核心内容：</p><ol><li class="lvl-3">项目的必要性</li><li class="lvl-3">项目的市场预测</li><li class="lvl-3">产品方案或服务的市场预测</li><li class="lvl-3">项目建设必需的条件</li></ol></blockquote><h3 id="项目可行性研究报告"><a class="header-anchor" href="#项目可行性研究报告"></a>项目可行性研究报告</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9-%E7%AC%AC%E4%B8%89%E7%AB%A0%E9%A1%B9%E7%9B%AE%E7%AB%8B%E9%A1%B9%E7%AE%A1%E7%90%863.png" alt=""></p><h3 id="项目招投标"><a class="header-anchor" href="#项目招投标"></a>项目招投标</h3><h4 id="招标：公开招标、邀请招标、议标"><a class="header-anchor" href="#招标：公开招标、邀请招标、议标"></a>招标：公开招标、邀请招标、议标</h4><ul class="lvl-0"><li class="lvl-2"><p>公开招标：招标人以<mark>招标公告</mark> 的方式邀请<mark>不特定</mark>的法人或者其他组织投标</p></li><li class="lvl-2"><p>邀请投标：招标人以招标邀请书的方式邀请<mark>特定</mark>的法人或者其他组织投标</p></li></ul><p>招标代理：招标人有权自行选择招标代理机构，委托其办理招标事宜，招标代理机构是依法设立从事招标大力业务并提供服务的社会中介组织。<mark>任何单位和个人不得以任何方式为招标人指定招标代理机构</mark></p><h4 id="投标：编织标书-递交标书-标书的签收"><a class="header-anchor" href="#投标：编织标书-递交标书-标书的签收"></a>投标：编织标书-&gt;递交标书-&gt;标书的签收</h4><ol><li class="lvl-3"><p>编制标书：要求投标人提供一定比例或金额的投标保证金。</p></li><li class="lvl-3"><p>递交标书：按照规定的地点时间送达，直接送达/代理人送达直接获得回执。若按邮寄的方式，则在截止日期前送达，<mark>而不是以“邮戳为准”</mark>。</p><blockquote><p>应注意的问题，投标人在截止日期前，将投标文件送至投标地点。招标人收到后，不得开启。投标人少于三个时，重新招标。</p></blockquote></li><li class="lvl-3"><p>标书的签收：签收后不得开启，必需旅行完备的签收、登记和备案的手续。</p></li></ol><h4 id="评标"><a class="header-anchor" href="#评标"></a>评标</h4><p>由高级委员会负责。</p><blockquote><p>评标委员会由具有高级职称或同等专业水平的技术、经济等相关领域专家、招标人和招标机构代表等<mark>5人以上单数</mark>组成，其中技术、经济等方面，专家人数<mark>不得少于成员总数的2/3</mark>。开标前，评标委员会名单在评标结果公示前必需保密。</p></blockquote><h4 id="选定项目承建方（掌握）"><a class="header-anchor" href="#选定项目承建方（掌握）"></a>选定项目承建方（掌握）</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理4.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理5.png" style="zoom:67%;"><p>同时要通知未中标人，30日内签合同，15日内向有关部门提交报告</p><h2 id="可行性研究"><a class="header-anchor" href="#可行性研究"></a>可行性研究</h2><h3 id="可行性研究的内容"><a class="header-anchor" href="#可行性研究的内容"></a>可行性研究的内容</h3><ol><li class="lvl-3"><p>技术可行性分析</p></li><li class="lvl-3"><p>经济可行性分析</p></li><li class="lvl-3"><p>运行环境可行性分析</p></li><li class="lvl-3"><p>其他方面的可行性分析</p></li></ol><p>技术可行性分析</p><ol><li class="lvl-3"><p>进行项目开发的风险：再给定的限制范围和时间期限内，能否设计出预期的系统并实现必需的功能和性能</p></li><li class="lvl-3"><p><mark>人力资源的有效性</mark>：可以用于项目开发的技术人员队伍是否可以简历，是否存在人力资源不足、技术能力欠缺等问题，是否可以在市场上或者通过培训获得所需要的熟练技术人员</p></li><li class="lvl-3"><p>技术能力的可能性：相关技术的发展趋势和当前所掌握的技术是否支持该项目的开发，市场上是否存在支持该技术的开发环境、平台和工具</p></li><li class="lvl-3"><p>物资（产品）的可用性：是否存在可以用于建立系统的其他资源，如一些设备以及可行的代替产品等</p></li></ol><h4 id="经济可行性分析"><a class="header-anchor" href="#经济可行性分析"></a>经济可行性分析</h4><ol><li class="lvl-3"><p>支出分析：一次性支出/非一次性支出</p></li><li class="lvl-3"><p>收益分析：直接受益、间接受益等</p></li><li class="lvl-3"><p>收益投资话、投资回收期分析：对投入产出进行对比分析，以确定项目的收益率和投资回收率等经济指标</p></li><li class="lvl-3"><p><mark>敏感性分析</mark>：当注入设备和软件配置、处理速度要求、系统的工作负荷类型和负荷量等关键性因素变化时，对支出和收益产生影响的估计</p></li></ol><h4 id="运行环境可行性"><a class="header-anchor" href="#运行环境可行性"></a>运行环境可行性</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理6.png" style="zoom:67%;"><h4 id="其他方面的可行性分析"><a class="header-anchor" href="#其他方面的可行性分析"></a>其他方面的可行性分析</h4><p>法律可行性、社会可行性等方面的可行性分析</p><h3 id="可行性研究的步骤"><a class="header-anchor" href="#可行性研究的步骤"></a>可行性研究的步骤</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9-%E7%AC%AC%E4%B8%89%E7%AB%A0%E9%A1%B9%E7%9B%AE%E7%AB%8B%E9%A1%B9%E7%AE%A1%E7%90%867.png" alt=""></p><h4 id="初步可行性研究"><a class="header-anchor" href="#初步可行性研究"></a>初步可行性研究</h4><p>可以形成<mark>初步可行性研究报告</mark></p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理8.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理9.png" style="zoom:67%;"><p>在这之前可进行项目<mark>机会研究</mark>，如果投资可能性已进行，那么可以省去</p><h4 id="辅助（功能）研究"><a class="header-anchor" href="#辅助（功能）研究"></a>辅助（功能）研究</h4><ol><li class="lvl-3"><p>包括项目的<mark>一个或几个方面</mark>，但不是<mark>所有方面</mark>，并且职能作为<mark>初步项目可行性研究、项目可行性研究和大规模投资建议</mark>的前提或辅助</p></li><li class="lvl-3"><p>辅助研究的内容是研究的性质和打算研究的项目各有不同，但由于其关系到<mark>项目的关键方面</mark>因此其结论应为随后的项目阶段指明方向</p></li></ol><h3 id="详细可行性研究"><a class="header-anchor" href="#详细可行性研究"></a>详细可行性研究</h3><p>机会研究、初步可行性研究、详细可行性研究、评估与决策是投资前期的四个阶段。其中前三个可以合并,但是<mark>详细可行性研究</mark>是不可或缺的。</p><p>最终提交的<mark>可行性研究报告</mark>将成为进行项目评估和决策的依据。</p><p>详细可行性研究的方法:经济评价法、市场预测法、投资估算法和增量净效益法</p><p>‼️开发总成本一般划分为四大类 :<mark>研发成本、行政管理费、销售和分销费用、财务费用和折旧</mark>。前三类成本的总和称为<mark>经营成本</mark>。</p><blockquote><p>所涉及到的内容（了解）</p><p>(1)概述<br>(2)需求确定<br>(3)现有资源、设施情况分析<br>(4)设计(初步)技术方案<br>(5)项目实施进度计划建议<br>(6)投资估算和资金筹措计划<br>(7)项目组织、人力资源、技术培训计划<br>(8 )经济和社会效益分析(效果评价)<br>(9 )合作/协作方式。</p></blockquote><h2 id="项目的评估与论证"><a class="header-anchor" href="#项目的评估与论证"></a>项目的评估与论证</h2><h3 id="项目论证"><a class="header-anchor" href="#项目论证"></a>项目论证</h3><p>“<mark>先论证，后决策</mark>”是现代项目管理的基本原则</p><blockquote><p>作用主要体现在：</p><p>( 1 )项目论证是确定项目是否实施的依据。<br>( 2 )项目论证是筹措资金、向银行贷款的依据。<br>( 3 )项目论证是编制计划、设计、采购、施工以及机构设备、资源配置的依据。<br>( 4 )项目论证是防范风险、提高项目效率的重要保证。</p></blockquote><p>项目论证应该是围绕着<mark>市场需求、开发技术、财务经济</mark>三个房main展开调查和分析，<mark>市场是前提、技术是手段、财务经济是核心</mark></p><h5 id="项目论证的阶段划分"><a class="header-anchor" href="#项目论证的阶段划分"></a>项目论证的阶段划分</h5><p>分为：机会研究、初步可行性研究和详细可行性研究</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项-第三章项目立项管理10.png"><p>分为两种：内部论证和外部论证</p><h5 id="项目论证的一般程序"><a class="header-anchor" href="#项目论证的一般程序"></a>项目论证的一般程序</h5><p>项目论证是一个<mark>连续的过程</mark></p><blockquote><p>七个步骤</p><p>( 1 )<mark>明确</mark>项目范围和业主目标<br>( 2 )<mark>收集</mark>并分析相关资料<br>( 3 )<mark>拟定</mark>多种可行的能够相互替代的实施方案<br>( 4)<mark>多方案分析</mark>、比较。方案分析与比较阶段包括分析各个可行方案在技术上、经济上的优缺点<br>( 5 )<mark>选择最优</mark>方案进一 步详细全面地论证<br>( 6 )<mark>编制项目论证报告</mark>、环境影响报告书和采购方式审批报告。<br>( 7 )编制资金筹措计划和项目实施进度计划。</p></blockquote><h3 id="项目评估"><a class="header-anchor" href="#项目评估"></a>项目评估</h3><p>项目评估指在项目可行性研究的基础上，由<mark>第三方</mark>(国家、银行或有关机构)根据国家颁布的政策、法规、方法、参数和条例等,从项目( 或企业)、国民经济、社会角度出发,对拟建项目建设的必要性、建设条件、生产条件、产品市场需求、工程技术、经济效益和社会效益等进行评价、分析和论证，进而判断其是否可行的一个评估过程。项目评估是项目投资前期进行决策管理的重要环节一其目的是审查项目可行性研究的可靠性、真实性和客观性，为银行的贷款决策或行政主管部i ]的审批决策提供科学依据。</p><p>项目评估的最终成果是<mark>项目评估报告</mark></p><p>论证时着重于<mark>听取各方专家意见</mark>，评估更强调得出<mark>权威的结论。</mark></p><blockquote><p>依据包括以下项目</p><p>(1)项目建议书及其批准文件<br>(2)项目可行性研究报告<br>(3)报送单位的申请报告及主管部门的初审意见<br>(4)有关资源、配件、燃料、水、电、交通、通信、资金(包括外汇)等方面的协议文件<br>(5)必需的其他文件和资料</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第二章信息系统项目管理基础</title>
      <link href="/2022/08/19/gao-xiang-di-er-zhang-xin-xi-xi-tong-xiang-mu-guan-li-ji-chu/"/>
      <url>/2022/08/19/gao-xiang-di-er-zhang-xin-xi-xi-tong-xiang-mu-guan-li-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1>信息系统项目管理基础</h1><h2 id="项目管理基础"><a class="header-anchor" href="#项目管理基础"></a>项目管理基础</h2><h3 id="项目的概念和特点（掌握）"><a class="header-anchor" href="#项目的概念和特点（掌握）"></a>项目的概念和特点（掌握）</h3><p>定义：项目是为提供一种<u>独特产品</u>、<u>服务</u>或<u>成果</u>所做的<u>临时性</u>努力</p><p>特点：</p><ol><li class="lvl-3"><p>临时性（一次性）：是指每一个项目都有确定的开始和结束日期</p></li><li class="lvl-3"><p>独特的产品、服务或成果：创造独特的可交付成果,如产品、服务或成果。</p></li><li class="lvl-3"><p>逐步完善：逐步完善味着分步、连续的积累。例如,在项目的早期,项目范围的说明是粗略的,随着项目团队对目标和可交付成果的理解更完整和深时,项目的范围也就更具体和详细</p></li><li class="lvl-3"><p>资源约束：每一-个项目都需要具备各种资源来作为实施的保证,而资源是有限的。所以,资源成本是项目成功实施的一个约束条件。</p></li><li class="lvl-3"><p>目的性:项目工作的目的在于得到特定的结果，即项目是面向目标的。</p></li></ol><blockquote><p>项目的目标特性:多目标性、优先性、层次性</p></blockquote><h3 id="项目的特点（掌握）"><a class="header-anchor" href="#项目的特点（掌握）"></a>项目的特点（掌握）</h3><p>成功的三个约束：<mark>时间、成本、质量</mark>。但经常存在冲突</p><p>另一个主要的约束就是<mark>范围</mark>（哪些要做，哪些不做）</p><p>项目经理的责任就是在四个要素之间进行权衡以保证项目的成功。</p><h3 id="项目与日常运作的关系（了解）"><a class="header-anchor" href="#项目与日常运作的关系（了解）"></a>项目与日常运作的关系（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础1.png" style="zoom: 67%;"><h3 id="信息系统项目的特点（掌握）"><a class="header-anchor" href="#信息系统项目的特点（掌握）"></a>信息系统项目的特点（掌握）</h3><p>典型的信息系统项目的特点：</p><ol><li class="lvl-3"><p>目标不明确</p></li><li class="lvl-3"><p>需求变化频繁</p></li><li class="lvl-3"><p>智力密集型</p></li><li class="lvl-3"><p>设计队伍庞大</p></li><li class="lvl-3"><p>设计人员高度专业化</p></li><li class="lvl-3"><p>涉及的承包商多</p></li><li class="lvl-3"><p>各级承包商分布在各地，相互联系复杂</p></li><li class="lvl-3"><p>系统集成项目中需要研制开发大量的软硬件系统</p></li><li class="lvl-3"><p>项目生命期通常较短</p></li><li class="lvl-4"><p>通常要采用大量的新技术</p></li><li class="lvl-4"><p>使用与维护的要求非常复杂</p></li></ol><h3 id="项目管理的定义（了解）"><a class="header-anchor" href="#项目管理的定义（了解）"></a>项目管理的定义（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础2.png" style="zoom:67%;"><h2 id="项目管理知识体系（了解）"><a class="header-anchor" href="#项目管理知识体系（了解）"></a>项目管理知识体系（了解）</h2><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础3.png" style="zoom:67%;"><h2 id="PRINCE2（了解）"><a class="header-anchor" href="#PRINCE2（了解）"></a>PRINCE2（了解）</h2><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础4.png" style="zoom:67%;"><h2 id="项目组织结构（掌握）‼️"><a class="header-anchor" href="#项目组织结构（掌握）‼️"></a>项目组织结构（掌握）‼️</h2><p>组织机构分类</p><ul class="lvl-0"><li class="lvl-2"><p>职能型组织</p></li><li class="lvl-2"><p>矩阵型组织（弱矩阵型组织、平衡矩阵型组织、强矩阵型组织）</p></li><li class="lvl-2"><p>项目型组织</p></li></ul><h3 id="组织结构对项目的影响（掌握）"><a class="header-anchor" href="#组织结构对项目的影响（掌握）"></a>组织结构对项目的影响（掌握）</h3><p>一端为职能型、另一端为项目型，中间是形形色色的矩阵型</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础5.png" style="zoom:67%;"><h3 id="职能型组织（掌握）‼️"><a class="header-anchor" href="#职能型组织（掌握）‼️"></a>职能型组织（掌握）‼️</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础6.png" style="zoom:67%;"><p>注：黑框代表了参与项目活动的员工、黄色框代表协调区间</p><p><mark>项目经理权利 &lt; 职能经理</mark></p><blockquote><p>优点：</p><ol><li class="lvl-3">强大的技术支持，便于知识、技能和经验的交流</li><li class="lvl-3">清晰的职业生涯晋升路线</li><li class="lvl-3">直线沟通、交流简单、责任和权限很清晰</li><li class="lvl-3">有利于重复性工作为主的过程管理</li></ol><p>缺点：</p><ol><li class="lvl-3"><p>职能利益优先于项目，具有狭隘性</p></li><li class="lvl-3"><p>组织横向之间的联系薄弱、部门间沟通、协调难度大</p></li><li class="lvl-3"><p>项目经理极小或缺少权利、权威</p></li><li class="lvl-3"><p>项目管理发屏方向不明，缺少项目基准等</p></li></ol></blockquote><h3 id="项目型组织（掌握）"><a class="header-anchor" href="#项目型组织（掌握）"></a>项目型组织（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础7.png" style="zoom:67%;"><p><mark>项目经理权利 &gt; 职能经理</mark></p><blockquote><p>优点：</p><ol><li class="lvl-3">结构单一、责权分明，利于统一指挥</li><li class="lvl-3">目标明确单一</li><li class="lvl-3">沟通快捷、方便</li><li class="lvl-3">决策快</li></ol><p>缺点：</p><ol><li class="lvl-3"><p>管理成本高，如项目肚饿工作量不足则资源配置效率低</p></li><li class="lvl-3"><p>项目环境比较封闭，不利于沟通、技术知识等共享</p></li><li class="lvl-3"><p>员工缺乏事业上的连续性和保障等</p></li></ol></blockquote><h3 id="弱矩阵型组织（掌握）"><a class="header-anchor" href="#弱矩阵型组织（掌握）"></a>弱矩阵型组织（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础8.png" style="zoom:67%;"><p><mark>项目经理权利 &lt; 职能经理</mark></p><h3 id="平衡矩阵型组织（掌握）"><a class="header-anchor" href="#平衡矩阵型组织（掌握）"></a>平衡矩阵型组织（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础9.png" style="zoom:67%;"><p><mark>项目经理权利 = 职能经理</mark></p><h3 id="强矩阵型组织（掌握）"><a class="header-anchor" href="#强矩阵型组织（掌握）"></a>强矩阵型组织（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础10.png" style="zoom:67%;"><p><mark>项目经理权限 &gt; 职能经理</mark></p><h3 id="复合型组织（了解）"><a class="header-anchor" href="#复合型组织（了解）"></a>复合型组织（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础11.png" style="zoom:67%;"><p>项目成员尽量在物理上被安置于一处，集中办公</p><h3 id="优点和缺点（了解）"><a class="header-anchor" href="#优点和缺点（了解）"></a>优点和缺点（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础12.png" style="zoom:67%;"><h3 id="PMO项目管理办公室（了解）"><a class="header-anchor" href="#PMO项目管理办公室（了解）"></a>PMO项目管理办公室（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础13.png" style="zoom:67%;"><h2 id="信息系统项目的生命周期（了解）"><a class="header-anchor" href="#信息系统项目的生命周期（了解）"></a>信息系统项目的生命周期（了解）</h2><ol><li class="lvl-3"><p>项目的成本与人力投入在开始时较低，在工作执行期间达到最高，并在项目快要结束时迅速回落。</p></li></ol><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础14.png" style="zoom:80%;"><ol start="2"><li class="lvl-3"><p>风险与不确定性在项目最开始最大，并在项目的整个生命周期中随着决策的制定与可交付成果的验证而逐步降低</p></li></ol><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础15.png" style="zoom:80%;"><h3 id="瀑布模型（掌握）"><a class="header-anchor" href="#瀑布模型（掌握）"></a>瀑布模型（掌握）</h3><p>瀑布模型是一个经典的软件生命周期模型，一般将软件开发分为：可行性分析（计划）、需求分析、软件设计（该要设计、详细设计）、编码（含单元测试）、测试、运行维护等几个阶段</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础16.png" style="zoom:80%;"><blockquote><p>特点：</p><ol><li class="lvl-3">从上一项开发活动接受该项活动的工作对象作为输入</li><li class="lvl-3">利用这一输入，实施该项活动应完成的工作内容</li><li class="lvl-3">给出该项活动的工作成果，作为输出传给下一项开发活动</li><li class="lvl-3">对该项活动的实施工作成果进行评审</li></ol></blockquote><p><mark>瀑布模型适用于需求明确或很少变更的项目，如二次开发或者升级项目</mark></p><h3 id="螺旋模型（掌握）"><a class="header-anchor" href="#螺旋模型（掌握）"></a>螺旋模型（掌握）</h3><p>螺旋模型是一个演化软件过程模型，将原型实现的迭代特征与线性顺序（瀑布）模型中控制的和系统化的方面结合起来。使得软件的增量版本的快速开发成为可能。</p><p>在螺旋模型中，软件开发是一系列的增量发布。在早起的迭代中，发布的增量可能是一个纸上的模型或圆形；在以后的迭代中，被开发系统的更加完善的版本逐步产生</p><p>四个象限分别标志每个周期所划分的四个阶段：</p><ul class="lvl-0"><li class="lvl-2"><p>制定计划</p></li><li class="lvl-2"><p>风险分析</p></li><li class="lvl-2"><p>实施工程和客户评估</p></li></ul><p>螺旋模型强调了风险分析，特别适用于<mark>庞大而复杂</mark>的、<mark>高风险</mark>的系统。</p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9_%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%8017.png" alt=""></p><h3 id="迭代模型（掌握）"><a class="header-anchor" href="#迭代模型（掌握）"></a>迭代模型（掌握）</h3><p>迭代式开发模型水平方向为时间维，分四个阶段：‼️</p><ul class="lvl-0"><li class="lvl-2"><p>初始</p></li><li class="lvl-2"><p>细化</p></li><li class="lvl-2"><p>构造</p></li><li class="lvl-2"><p>移交</p></li></ul><p>核心工作流从技术角度描述迭代模型的静态组成部分，包括：</p><p>业务建模、需求获取、分析与设计、实现、测试、部署</p><p>图中阴影部分描述了不同的工作流，在不同的时间段内工作量的不同，几乎所有的工作流在所有的时间段内均有工作量，只是大小不同而已。各阶段的主要任务如下：</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础18.png" style="zoom:80%;"><p>了解一下：</p><ol><li class="lvl-3"><p>初始阶段：系统地阐述项目的范围，选择可行的系统架构，计划和准备业务案例</p></li><li class="lvl-3"><p>细化阶段：细化构想，细化过程和基础设施，细化构架并选择构件</p></li><li class="lvl-3"><p>构造阶段：资源管理、控制和过程最优化，完成构件的开发并依评价标准进行测试可，依构想的验收标准评估产品的发布</p></li><li class="lvl-3"><p>移交阶段：同步并使并发的构造增量集成到一致的实施基线中，与实施有关的工程活动根据完整的构想和需求集的验收标准评估实施基线</p></li></ol><h3 id="V模型（掌握）"><a class="header-anchor" href="#V模型（掌握）"></a>V模型（掌握）</h3><p>以测试为中心的开发模型，对应关系：</p><p>编码-单元测试、详细设计-集成测试、概要设计-系统测试、需求分析-验收测试</p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9_%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%8019.png" alt=""></p><blockquote><ol><li class="lvl-3"><p>V模型体现的主要思想是开发和测试同等重要，左侧代表的是开发活动，而右侧代表的是测试活动</p></li><li class="lvl-3"><p>V模型针对每个开发阶段，都有一个测试级别与之相对应</p></li><li class="lvl-3"><p>测试依旧是开发生命周期中的阶段，与瀑布模型不同的是，有多个测试级别与开发阶段对应</p></li><li class="lvl-3"><p>V模型适用于需求明确和需求变更不频繁的情形</p></li></ol></blockquote><h3 id="原型化模型（掌握）"><a class="header-anchor" href="#原型化模型（掌握）"></a>原型化模型（掌握）</h3><p>原型法认为在很难一下子 全面准确地提出用户需求的情况下,首先不要求一定要对系统做全面、详细的调查、分析,而是本着开发人员对用户需求的初步理解,先快速开发一个原型系统,然后通过反复修改来实现用户的最终系统需求</p><blockquote><p>原型应当具备的特点如下：</p><ol><li class="lvl-3">实际可行</li><li class="lvl-3">具有最终系统的基本特征</li><li class="lvl-3">构造方便、快速，造价低</li></ol></blockquote><p>原型罚的特点在于原型罚对用户的需求是<mark>动态响应、逐步纳入</mark>的，系统分析、设计与实现都是随着对一个工作模型的不断修改而同时完成的，相互之间并无明显界限，也没有明确分工。系统开发阶段就是一个反复修改的过程。适于用户需求开始时定义不清、管理决策方法结构化程度不高的系统开发，开发方法更易被用户接受；但如果用户配合不好，盲目修改，就会延迟开发过程。</p><blockquote><p>可以将原型分类如下：</p><ol><li class="lvl-3">抛弃型原型</li><li class="lvl-3">进化型原型</li></ol></blockquote><h3 id="敏捷开发模型（掌握）"><a class="header-anchor" href="#敏捷开发模型（掌握）"></a>敏捷开发模型（掌握）</h3><p>以<mark>人为为核心</mark>、迭代、循序渐进的开发方法，相对于传统软件开发方法的“非敏捷”，更强调程序员团队与业务专家之间的紧密协作、面对面的沟通（认为比书面的文档更有效）、频繁交付新的软件版本、紧凑而自我组织型的团队，能够很好地适应需求变化的代码编写和团队组织方法，页更注重软件开发中人的作用。</p><p>Scrum是一种迭代式增量软件开发过程，通常用于敏捷软件开发。</p><h2 id="单个项目的管理过程组"><a class="header-anchor" href="#单个项目的管理过程组"></a>单个项目的管理过程组</h2><p>项目管理各过程组成的5个过程组可以对应到PDCA，即戴明坏：</p><p>“计划(Plan) - 执行(Do) - 检查(Check) - 行动(Act)“</p><p>循环。该循环各环节以结果相连，该循环一部分的结果变成了另一部分的依据。</p><ul class="lvl-0"><li class="lvl-2"><p>计划（Plan）：包括方针的目标的确定，以及活动规划的制定。</p></li><li class="lvl-2"><p>执行（Do）：根据已知的信息设置具体的方法、方案和计划布局、根据设计和布局，进行具体运作，实现计划中的内容</p></li><li class="lvl-2"><p>检查（Check）：总结执行计划的结果，愤青哪些是对的那些是错的，明确效果，找出问题</p></li><li class="lvl-2"><p>行动（Act）：对检查的结果进行处理，对成功的经验加以肯定，并予以标准化，对于失败的教训也要总结引起重视。</p></li></ul><p>计划-规划过程、执行过程-执行、监控过程-检查/行动</p><h3 id="项目管理过程组（掌握）"><a class="header-anchor" href="#项目管理过程组（掌握）"></a>项目管理过程组（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高项_第二章信息系统项目管理基础20.png" style="zoom:67%;"><h3 id="五大过程（掌握）"><a class="header-anchor" href="#五大过程（掌握）"></a>五大过程（掌握）</h3><ol><li class="lvl-3"><p>启动过程：设定项目目标，让项目团队有事儿可做</p></li><li class="lvl-3"><p>规划过程：制定工作路线，让项目团队“有法可依”</p></li><li class="lvl-3"><p>执行过程：“按图索骥”，让项目团队“有法必依”</p></li><li class="lvl-3"><p>监控过程：测量项目绩效，让项目团队“违法必究”，并且尽量做到“防患于未然”</p></li><li class="lvl-3"><p>收尾过程：了结项目（阶段）“恩怨”，让一切圆满。</p></li></ol><h3 id="十大知识领域（掌握）"><a class="header-anchor" href="#十大知识领域（掌握）"></a>十大知识领域（掌握）</h3><ol><li class="lvl-3"><p>整体管理：犹如项链中的那根线</p></li><li class="lvl-3"><p>范围管理：做且只做该做的事儿</p></li><li class="lvl-3"><p>时间管理：让一切按既定的进度进行</p></li><li class="lvl-3"><p>成本管理：算准钱和花好钱</p></li><li class="lvl-3"><p>质量管理：目的是满足需求</p></li></ol><h3 id="47个过程（掌握）"><a class="header-anchor" href="#47个过程（掌握）"></a>47个过程（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E9%AB%98%E9%A1%B9_%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%8021.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第一章课后习题第一章</title>
      <link href="/2022/08/16/gao-xiang-di-yi-zhang-ke-hou-xi-ti/"/>
      <url>/2022/08/16/gao-xiang-di-yi-zhang-ke-hou-xi-ti/</url>
      
        <content type="html"><![CDATA[<h1>高级软考项目管理课第一章后习题</h1><h2 id="第一章-信息化和信息系统"><a class="header-anchor" href="#第一章-信息化和信息系统"></a>第一章 信息化和信息系统</h2><h3 id="1-1-信息系统与信息化"><a class="header-anchor" href="#1-1-信息系统与信息化"></a>1.1 信息系统与信息化</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题1.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题2.png" style="zoom:67%;"><p>C 没有金土</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题3.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题4.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题5.png" style="zoom:67%;"><p>A.全体社会成员</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题6.png" style="zoom:67%;"><p>D 系统规划：写报告｜｜系统分析：逻辑模型｜｜系统设计：物理模型</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题7.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题8.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题9.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题10.png" style="zoom:67%;"><p>A  开发：分析、设计、实施、运行和维护、消亡</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题11.png" style="zoom:67%;"><p>A 组织战略管理中的事儿</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题12.png" style="zoom:67%;"><p>B：鹰头</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题13.png" style="zoom:67%;"><p>B</p><h3 id="1-2-信息系统开发方法"><a class="header-anchor" href="#1-2-信息系统开发方法"></a>1.2 信息系统开发方法</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题14.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题15.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题16.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题17.png" style="zoom:67%;"><p>A 程序流图与数据流图属于结构化方法中的工具</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题18.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题19.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题20.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题21.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题22.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题23.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题24.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题25.png" style="zoom:67%;"><p>D</p><h3 id="1-3-常规信息系统集成技术"><a class="header-anchor" href="#1-3-常规信息系统集成技术"></a>1.3 常规信息系统集成技术</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题26.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题27.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题28.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题29.png" style="zoom:67%;"><p>D、A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题30.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题31.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题32.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题33.png" style="zoom:67%;"><p>B 层次化网络设计方案：核心层、汇聚层、接入层</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题34.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题35.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题36.png" style="zoom:67%;"><p>B A:DAS C:NAS D:SAN</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题37.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题38.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题39.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题40.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题41.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题42.png" style="zoom:67%;"><p>D LAN局域网 MAN城域网 WAN广域网</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题43.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题44.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题45.png" style="zoom:67%;"><p>B 让两个保持会话</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题46.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题47.png" style="zoom:67%;"><p>B， C是有线</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题48.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题49.png" style="zoom:67%;"><p>B 通过网线</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题50.png" style="zoom:67%;"><p>C 数据链路层</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题51.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题52.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题53.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题54.png" style="zoom:67%;"><p>A 核心层高速的转发通信</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题55.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题56.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题57.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题58.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题59.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题60.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题61.png" style="zoom:67%;"><p>A B:ISDN、DDN C:交换机、网桥 D:交换机、网桥</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题62.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题63.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题64.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题65.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题66.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题67.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题68.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题69.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题70.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题71.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题72.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题73.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题74.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题75.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题76.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题77.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题78.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题79.png" style="zoom:67%;"><p>B</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题80.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题81.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题82.png" style="zoom:67%;"><p>A 可用性公式： 10000 / (10000+1) * 100%</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题83.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题84.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题85.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题86.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题87.png" style="zoom:67%;"><p>A</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题88.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题89.png" style="zoom:67%;"><p>D</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题90.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题91.png" style="zoom:67%;"><p>C</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/高级软考项目管理课后习题92.png" style="zoom:67%;"><p>C</p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高项_第一章信息化和信息系统</title>
      <link href="/2022/08/15/gao-xiang-di-yi-zhang-xin-xi-hua-he-xin-xi-xi-tong/"/>
      <url>/2022/08/15/gao-xiang-di-yi-zhang-xin-xi-hua-he-xin-xi-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1>高项_第一章信息化和信息系统</h1><h2 id="信息系统与信息化"><a class="header-anchor" href="#信息系统与信息化"></a>信息系统与信息化</h2><h3 id="信息的特性（掌握）"><a class="header-anchor" href="#信息的特性（掌握）"></a>信息的特性（掌握）</h3><p>其中只需掌握</p><ol><li class="lvl-3"><p>动态性：随时时间变化而变化</p></li><li class="lvl-3"><p>依附性：一方面，信息是客观世界的反应，由客观事物产生，不存在无源的信息。另一方面，信息都要衣服一定载体，需要物质的承担者，信息不能完全脱离物质而独立存在。</p></li><li class="lvl-3"><p>传递性：在<mark>时间</mark>上的传递就是<mark>存储</mark>，在<mark>空间</mark>上的传递就是<mark>转移或扩散</mark></p></li></ol><h3 id="信息的质量属性（掌握）"><a class="header-anchor" href="#信息的质量属性（掌握）"></a>信息的质量属性（掌握）</h3><ol><li class="lvl-3"><p>精确性：对事物状态描述的<mark>精细</mark>程度</p></li><li class="lvl-3"><p>完整性：描述的全面程度，完整的信息应该包括所有重要事实</p></li><li class="lvl-3"><p>可靠性：来源、采集方法、传输过程都是<mark>可信任的</mark>，符合预期</p></li><li class="lvl-3"><p>及时性：获得时刻与发生时刻的<mark>间隔长短</mark></p></li><li class="lvl-3"><p>经济型：获取、传输带来的<mark>成本</mark>在可以接受的范围内</p></li><li class="lvl-3"><p>可验证性：主要质量属性可以被证实或者证伪的策划高难度</p></li><li class="lvl-3"><p>安全性：在信息的生命周期中，信息可以背飞授权访问的可能性，越低越安全</p></li></ol><h3 id="信息传输模型"><a class="header-anchor" href="#信息传输模型"></a>信息传输模型</h3><p><mark>信息的传输技术</mark>是信息技术的<mark>核心</mark>。</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统1.png" style="zoom:67%;"><ol><li class="lvl-3"><p>信源：产生信息的尸体，由它向外传播，如qq使用者</p></li><li class="lvl-3"><p>信宿：信息的归宿或接收者，如使用qq的另一方</p></li><li class="lvl-3"><p>信道：传输信息的通道，如<mark>TCP/IP网络</mark></p></li><li class="lvl-3"><p>编码器：对编码信息进行加密再编码，如<mark>量化器、压缩编码器、调制器</mark>等</p></li><li class="lvl-3"><p>译码器，把信道上送来的信号（原始信息与噪声的叠加）转换成信宿能接受的信号，可包括<mark>解调器、译码器、数模转换器</mark>等</p></li><li class="lvl-3"><p>噪声：干扰可以来自于信息系统分层结构中的任何一层，一定大时，传输的信息可以背噪声掩盖导致传输失败</p></li></ol><h3 id="信息化的五个层次（掌握）"><a class="header-anchor" href="#信息化的五个层次（掌握）"></a>信息化的五个层次（掌握）</h3><p>由小到大</p><ol><li class="lvl-3"><p>产品信息化：是信息化的基础</p></li><li class="lvl-3"><p>企业信息化：企业在产品的设计、开发、生产、管理、经营等多个环节中广泛应用信息技术，如：生产制造系统、ERP、CRM、SCM等</p></li><li class="lvl-3"><p>产业信息化</p></li><li class="lvl-3"><p>国民经济信息化</p></li><li class="lvl-3"><p><mark>社会生活信息化</mark>，如智慧城市、互联网金融</p></li></ol><h3 id="信息化（了解）"><a class="header-anchor" href="#信息化（了解）"></a>信息化（了解）</h3><p>信息化的：</p><ul class="lvl-0"><li class="lvl-2"><p>主体：全社会成员</p></li><li class="lvl-2"><p>手段：基于现代信息技术的先进社会生产工具</p></li><li class="lvl-2"><p>途径：创建时代的社会生产力，推动社会生产关系及社会上层建筑的改革</p></li><li class="lvl-2"><p>目标：使国家的综合实力，社会文明素质和人民生活质量全面提升</p></li></ul><h3 id="两网、一站、四库、十二金（了解）"><a class="header-anchor" href="#两网、一站、四库、十二金（了解）"></a>两网、一站、四库、十二金（了解）</h3><ul class="lvl-0"><li class="lvl-2"><p>”两网“：政务内网、政务外网</p></li><li class="lvl-2"><p>”一站“：政府门口网站</p></li><li class="lvl-2"><p>”四库“：建立人口、法人单位、空间地理和自然资源、宏观经济 等四个基础数据库</p></li><li class="lvl-2"><p>”十二金”：重点推进办公业务资源系统等十二个业务系统：</p><blockquote><p>金宏工程、金税工程、金关工程、金财工程、金融监管工程、金卡工程、金审工程、金盾工程、金保工程、金农工程、金水工程、金质工程</p></blockquote></li></ul><h3 id="信息化体系六要素（掌握）"><a class="header-anchor" href="#信息化体系六要素（掌握）"></a>信息化体系六要素（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统2.png" style="zoom:67%;"><ol><li class="lvl-3"><p>信息资源：其开发和应用是国家信息化的<mark>核心任务</mark></p></li><li class="lvl-3"><p>信息网络：是信息资源开发和利用的<mark>基础设施</mark></p></li><li class="lvl-3"><p>信息技术应用：是指把信息技术广泛应用于经济和社会各个领域，他直接反应了效率、效果、效益。信息技术应用是信息化体系六要素中的<mark>龙头</mark>,是国家信息化建设的<mark>主阵地</mark></p></li><li class="lvl-3"><p>信息技术与产业：是信息化的<mark>物质基础</mark></p></li><li class="lvl-3"><p>信息化人才：是信息化的<mark>成功之本</mark></p></li><li class="lvl-3"><p>信息化政策法规和标准规范：信息化政策和法规、标准、规范用于规范和协调信息化体系要素之间的关系,是国家信息化快速,有序,健康和持续发展的<mark>保障</mark>。</p></li></ol><h3 id="信息系统的生命周期（掌握）"><a class="header-anchor" href="#信息系统的生命周期（掌握）"></a>信息系统的生命周期（掌握）</h3><p>四大五小</p><p>4大：立项、开发、运维、消亡</p><p>5小：系统规划、系统分析、系统设计、系统实施、运行维护</p><ol><li class="lvl-3"><p>立项（系统规划）：确定信息系统的发展战略，对建设信息系统的要求做出分析和预测，写成可行性报告</p></li><li class="lvl-3"><p>开发</p><ul class="lvl-2"><li class="lvl-5">系统分析：确定信系统的基本目标和逻辑功能要求，即提出<mark>逻辑模型</mark></li><li class="lvl-5">系统设计：具体设计实现逻辑模型的技术方案，即设计新系统的<mark>物理模型</mark></li><li class="lvl-5">系统实施：将设计的系统付诸实施的阶段，买东西</li><li class="lvl-5">系统运行和维护阶段：需要经常进行维护和评价，记录系统运行的情况</li><li class="lvl-5">消亡阶段</li></ul></li></ol><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统3.png" style="zoom:67%;"><h2 id="信息化系统的开发方法"><a class="header-anchor" href="#信息化系统的开发方法"></a>信息化系统的开发方法</h2><blockquote><ul class="lvl-1"><li class="lvl-2"><p>结构化开发方法</p></li><li class="lvl-2"><p>面向对象方法</p></li><li class="lvl-2"><p>原型化方法</p></li><li class="lvl-2"><p>面向服务的开发方法</p></li></ul></blockquote><h3 id="结构化方法（掌握）"><a class="header-anchor" href="#结构化方法（掌握）"></a>结构化方法（掌握）</h3><p>精髓：<mark>自顶向下，逐步求精和模块化设计</mark>，社和鱼数据处理领域，不适合规模大、复杂的系统开发</p><blockquote><p>特点是：</p><ul class="lvl-1"><li class="lvl-2">开发目标清晰化</li><li class="lvl-2">开发工作阶段话</li><li class="lvl-2">开发文档规范化</li><li class="lvl-2">设计方法结构化</li></ul><p>缺点是：</p><ul class="lvl-1"><li class="lvl-2"><p>开发周期长</p></li><li class="lvl-2"><p>难以适应需求变化</p></li><li class="lvl-2"><p>很少考虑数据结构</p></li></ul></blockquote><h3 id="面向对象方法（掌握）"><a class="header-anchor" href="#面向对象方法（掌握）"></a>面向对象方法（掌握）</h3><p>当前一些大型信息系统的开发，将结构化和oo方法相结合（面向对象）</p><p>首先，使用结构化方法进行自顶向下的整体划分</p><p>然后，自底向上地采用oo方法进行开发</p><blockquote><p>优点：</p><ul class="lvl-1"><li class="lvl-2">符合人类思维</li><li class="lvl-2">普遍适用于各类信息系统的开发</li><li class="lvl-2">构造的系统复用性好</li></ul></blockquote><h3 id="原型化方法（了解）"><a class="header-anchor" href="#原型化方法（了解）"></a>原型化方法（了解）</h3><p>实现用户需求的信息系统快速的开发方法。优点在缺有效地确认用户需求，<mark>适用于那些需求不明确的系统开发</mark></p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统4.png" style="zoom:67%;"><blockquote><p>特点：</p><ul class="lvl-1"><li class="lvl-2">使周期缩短，成本和风险降低，速度加快，获得较高的综合开发收益</li><li class="lvl-2">以用户为中西开发，提高了系统开发的成功率</li><li class="lvl-2">用户对系统的功能和结构容易理解和接受，有利于系统的移交及运行维护</li></ul><p>缺点：</p><ul class="lvl-1"><li class="lvl-2"><p>开发环境要求高</p></li><li class="lvl-2"><p>管理水平要求高</p></li></ul></blockquote><h3 id="面向服务的方法（掌握）"><a class="header-anchor" href="#面向服务的方法（掌握）"></a>面向服务的方法（掌握）</h3><p>进一步将接口的定义与实现进行解耦，催生了服务和面向服务的开发方法</p><p><mark>提高系统可服用行、信息资源共享、系统之间的互操作性</mark></p><p>oo的应用构建在类和对象之.上,随后发展起来的建模技术将相关对象按照<mark>业务</mark>功能进行分组,就形成了<mark>构件</mark>(Component)的概念。对于跨构件的功能调用则采用接口的形式暴露出来。</p><p>进一步将接口的定义与实现行解耦，催生了<mark>服务和面向服务</mark>的开发方法</p><h2 id="常规信息系统集成技术"><a class="header-anchor" href="#常规信息系统集成技术"></a>常规信息系统集成技术</h2><h3 id="OSI-Open-System-Interconnection-Model-七层网络模型（掌握）"><a class="header-anchor" href="#OSI-Open-System-Interconnection-Model-七层网络模型（掌握）"></a>OSI(Open System Interconnection Model)七层网络模型（掌握）</h3><table><thead><tr><th style="text-align:center">层</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">应用层</td><td style="text-align:left">负责对软件提供接口以使程序能使用网络服务,如事务处理程序、文件传送协议和网络管理等</td></tr><tr><td style="text-align:center">表示层</td><td style="text-align:left">如同应用程序和网络之间的<mark>翻译官</mark>，在表示层，数据将按照网络能理解的方案进行格式化。表示层管理数据的<mark>解密加密数据转换、格式化和文本压缩</mark></td></tr><tr><td style="text-align:center">会话层</td><td style="text-align:left"><mark>负责在网络中的两节点之间建立和维持通信，以及提供交互会话的管理功能</mark>,如三种数据流方向的控制，即一路交互、两路交替和两路同时会话模式</td></tr><tr><td style="text-align:center">传输层</td><td style="text-align:left">负责确保数据可靠、顺序、无错地从A点传输到B点。如<mark>提供建立、维护和拆除传送连接的功能;选择网络层提供最合适的服务;在系统之间提供可靠的透明的数据传送,提供端到端的错误恢复和流量控制</mark></td></tr><tr><td style="text-align:center">网络层</td><td style="text-align:left">主要功能是将<mark>网络地址(例如，IP地址)翻译成对应的物理地址(例如,网卡地址)并决定如何将数据从发送方路由到接收方</mark>;网络层还可以实现<mark>拥塞控制、网际互连</mark>等功能</td></tr><tr><td style="text-align:center">数据链路层</td><td style="text-align:left">它控制网络层与物理层之间的通信。它的主要功能是将从网络层接收到的数据分割成特定的可被物理层传输的帧。该层的作用包括:<mark>物理地址寻址、数据的成帧、流量控制、数据的检错、重发</mark>等纠错功能</td></tr><tr><td style="text-align:center">物理层</td><td style="text-align:left">该层包括<mark>物理连网媒介</mark>，如电缆连线连接器。该层的协议产生并检测电压以便发送和接收携带数据的信号</td></tr></tbody></table><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统5.png" style="zoom:67%;"><blockquote><p>助记：</p><p>物理层：不大于F8的数字</p><p>链路层：让老婆去ATM取802块钱，回家打老婆屁屁，混蛋老婆</p><p>网络层：都有4个都包括IP，ARP，RARP例外</p><p>传输层：都有P</p><p>会话层：RSN 认识你</p><p>表示层：主要都是一些图片/视频的格式</p><p>应用层：都带T，TP</p></blockquote><h4 id="IEEE802规范（掌握）"><a class="header-anchor" href="#IEEE802规范（掌握）"></a>IEEE802规范（掌握）</h4><ul class="lvl-0"><li class="lvl-2"><p>IEEE 802.3 以太网的CSMA/CD载波监听多路访问/冲突检测协议，<mark>（有线）局域网协议</mark></p></li></ul><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统6.png" style="zoom:67%;"><ul class="lvl-0"><li class="lvl-2"><p>IEEE 802.11 <mark>无线局域网协议</mark></p></li></ul><h4 id="应用层协议（掌握）"><a class="header-anchor" href="#应用层协议（掌握）"></a>应用层协议（掌握）</h4><p>TCP/IP中包括4层，与OSI有对应关系</p><blockquote><ol><li class="lvl-3"><p>应用层：应用层、表示层、会话层</p></li><li class="lvl-3"><p>传输层</p></li><li class="lvl-3"><p>网络层</p></li><li class="lvl-3"><p>网络接口层：数据链路层、物理层</p></li></ol></blockquote><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统7.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统8.png" style="zoom:67%;"><h4 id="传输层协议（掌握）"><a class="header-anchor" href="#传输层协议（掌握）"></a>传输层协议（掌握）</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统9.png" style="zoom:67%;"><h4 id="网络层协议（掌握）"><a class="header-anchor" href="#网络层协议（掌握）"></a>网络层协议（掌握）</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统10.png" style="zoom:67%;"><h3 id="网络设备（了解）"><a class="header-anchor" href="#网络设备（了解）"></a>网络设备（了解）</h3><p>根据交换层次不同，网络交互可分为</p><p>物理交互（电话网）</p><p>链路层交互（二次交换、对MAC地址进行变更）</p><p>网络层交换（三层交换、对IP地址进行变更）</p><p>传输层交换（四层交换、对端口进行变更，比较少见）和应用层变更。</p><hr><p>网络互联设备中有</p><p>中继器（实现物理层协议转换，在电缆间转换二进制信号）</p><p>网桥（实现物理层和数据链路层协议转换）</p><p>路由器（实现网络层协议和以下各层协议的转换）</p><p>网关（提供从最底层到传输层或以上各层的协议转换）</p><p>交换机</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统11.png" style="zoom:67%;"><h3 id="网络存储技术（掌握）"><a class="header-anchor" href="#网络存储技术（掌握）"></a>网络存储技术（掌握）</h3><p>主流的存储技术主要有</p><ul class="lvl-0"><li class="lvl-2"><p>直接DAS（Direct Attached Storage,DAS)，存储设备通过SCSI电缆连接到服务器</p></li><li class="lvl-2"><p>网络附加存储（Network Attached Storage,NAS）存储，通过网络接口与网络直接链接，用户通过网络访问，支持<mark>即插即用</mark>，NAS技术支持多种<mark>TCP/IP</mark>网络协议，主要是<mark>NFS</mark>(网络文件存储系统)和<mark>CIFS</mark>(通用Internet文件)来进行文件访问。</p></li><li class="lvl-2"><p>存储区域网络（Storage Area Network,SAN），SAN是通过专用交换机将磁盘阵列与服务器连接起来的高速专用子网，没有采取文件共享的存取方式，而是<mark>采用块（block）级别</mark>存储。根据传输过程采用的协议，技术划分为。</p><ul class="lvl-2"><li class="lvl-4">SC SAN，光纤通道的主要特性有：热插拔、高速贷款、远程连接、连接数量大、成本高</li><li class="lvl-4">IP SAN，基于IP网络实现数据块级别存储方式的存储网络，成本低，实现技术比较低</li><li class="lvl-4">IB SAN，是一种交换结构I/O技术，其设计思路是通过一套中心机构，在远程存储器、网络以及服务器等设备之间建立一个单一的连接链路，并由IB交换机来指挥流量。</li></ul></li></ul><h3 id="网络接入技术（了解）"><a class="header-anchor" href="#网络接入技术（了解）"></a>网络接入技术（了解）</h3><p>两大类别：有线、无限</p><p>有线：PSTN、ISDN、ADSL、FTTX+LAN、HFC</p><p>无线：GPRS、3G、4G，无线电波为信息传输媒介，主要技术有4g、WIFI</p><p>5G速率10Gbps</p><h3 id="网络规划与设计（掌握）"><a class="header-anchor" href="#网络规划与设计（掌握）"></a>网络规划与设计（掌握）</h3><p>信息安全的基本要素：机密性、完整性、可用性、可控性、可审查性</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统12.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统13.png" style="zoom:67%;"><h3 id="数据库（了解）"><a class="header-anchor" href="#数据库（了解）"></a>数据库（了解）</h3><ul class="lvl-0"><li class="lvl-2"><p>关系型数据库：</p><ul class="lvl-2"><li class="lvl-4">Oracle</li><li class="lvl-4">MySql</li><li class="lvl-4">SQLServer</li></ul></li><li class="lvl-2"><p>非关系型数据库：</p><ul class="lvl-2"><li class="lvl-4">MongDB</li></ul></li></ul><h3 id="数据仓库（掌握）"><a class="header-anchor" href="#数据仓库（掌握）"></a>数据仓库（掌握）</h3><p>面向主题的、集成的、非易失的、且随时间变化的数据集合，<mark>用于支持管理决策</mark>。</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统14.png" style="zoom:67%;"><ul class="lvl-0"><li class="lvl-2"><p>数据源：数据仓库的基础，是数据源泉</p></li><li class="lvl-2"><p>数据的存储与管理：是整个系统数据仓库系统的核心</p></li><li class="lvl-2"><p>OLAP（Online analytical processing，联机分析处理）服务器：对分析需要的数据进行有效集成，按多位模型予以组织，以便进行多角度、多层次的分析，并发现趋势。</p></li><li class="lvl-2"><p>前端工具：主要包括各种查询工具，报表工具，分析工具，数据挖掘工具以及各种机遇数据仓库或者数据集的应用开发工具。其中数据分析工具主要针对OLAP，报表工具，数据挖掘工具主要针对数据仓库。</p></li></ul><h3 id="中间件（了解）"><a class="header-anchor" href="#中间件（了解）"></a>中间件（了解）</h3><h4 id="中间件的定义"><a class="header-anchor" href="#中间件的定义"></a>中间件的定义</h4><p>一个分布式系统环境中处于操作系统与应用之间的软件</p><blockquote><p>中间件是一个独立的系统软件或服务程序，分布式应用软件借助这种软件在不同的技术之间共享资源。中间件位于客户机服务的操作系统之上，管理计算机资源和网络通信。</p></blockquote><h4 id="中间件分类"><a class="header-anchor" href="#中间件分类"></a>中间件分类</h4><p>中间件分类有很多方式和很多种类型。从底向.上从中间件的层次来划分,可分为底层型中间件、通用型中间件和集成型中间件三个大的层次。</p><ol><li class="lvl-3"><p>底层型中间件的主流技术有JVM(Java虚拟机)、CLR(公共语言运行库)、ACE(自适配通信环境)、JDBC(Java 数据库连接)和ODBC(开发数据库互连)等,代表产品主要有sUN JVM和Microsoft CLR等。</p></li><li class="lvl-3"><p>通用型中间件的主流技术有CORBA(公共对象请求代理体系结构)、J2EE、MOM(面向消息的中间件)和COM等,代表产品主要有I0NAOrbk、BEAWebLogic和IBM MQSeries等。</p></li><li class="lvl-3"><p>集成型中间件的主流技术有WorkFlow和EAI(企业应用集成)等, 代表作品主要有BEA WebLogic和IBM WebSphere等。</p></li></ol><h3 id="可用性和可靠性（了解）"><a class="header-anchor" href="#可用性和可靠性（了解）"></a>可用性和可靠性（了解）</h3><p>可用性：系统能够正常运行的时间比例，经常用两次故障之间的时间长度或在出现故障时系统能够恢复正常的速度来表示</p><p>可靠性：软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力，即容错性，健壮性</p><hr><p>可用性度量：无故障时间/(无故障时间+故障恢复时间)*100%。</p><p>所以提高一个系统的可用性，要么提高系统的单词正常工作时长，要么减少故障修复时间，常用的可用方法如下：</p><ol><li class="lvl-3"><p><mark>错误检测</mark>：用于错误检测的战术包括<mark>命令/响应、心跳和异常</mark></p></li><li class="lvl-3"><p><mark>错误恢复</mark>：用于错误恢复的战术包括<mark>表决、主动冗余、被动冗余</mark></p></li><li class="lvl-3"><p><mark>错误预防</mark>：用于错误防范的战术包括<mark>把可能出错的组件从服务中删除，引入进程监控器</mark></p></li></ol><h2 id="软件工程"><a class="header-anchor" href="#软件工程"></a>软件工程</h2><h3 id="需求分析（掌握）"><a class="header-anchor" href="#需求分析（掌握）"></a>需求分析（掌握）</h3><ul class="lvl-0"><li class="lvl-2"><p>业务需求：反映企业或客户对系统高层次的一个目标追求。通常来自于项目投资人、购买产品的客户、客户单位的管理人员、市场营销部门或产品策划部门等。</p></li><li class="lvl-2"><p>用户需求：用户的具体的目标。或者用户要求系统必须能完成的任务，用户需求描述了用户能让系统做什么。</p></li><li class="lvl-2"><p>系统需求：从系统的角度来说明软件的需求，包括功能需求，非功能需求和设计约束</p></li></ul><h3 id="质量功能部署（了解）"><a class="header-anchor" href="#质量功能部署（了解）"></a>质量功能部署（了解）</h3><p>质量功能部署( QFD)是一种将用户需求转化成软件需求的技术,其目的是最大限度地提升软件工程过程中用户的满意度。QFD将软件需求分为三类:<mark>常规需求、期望需求、意外需求。</mark></p><ol><li class="lvl-3"><p>常规需求,用户认为系统应该实现的功能或性能,实现越多用户会越满意。</p></li><li class="lvl-3"><p>期望需求，用户想当然以为系统应用具备的功能或性能,但并不能正确描述自己想要得到的这些功能或性能需求。如果期望需求没有得到实现,会让用户感到不满意。</p></li><li class="lvl-3"><p>意外需求,也称为兴奋需求,是用户要求范围外的功能或性能。</p></li></ol><h3 id="需求分析（了解）"><a class="header-anchor" href="#需求分析（了解）"></a>需求分析（了解）</h3><p>常用的需求获取方法包括:用户访谈、调查问卷、采样、情节串联板、联合需求计划等。一个好的需求应该具有无二义性，完整性，一致性，可测试性，确定性，可跟踪性，正确性，必要性等特性。因此，需要分析人员把杂乱无章的用户要求和期望转换为用户需求,这就是需求分析的工作。</p><h3 id="SA方法进行需求分析（掌握）"><a class="header-anchor" href="#SA方法进行需求分析（掌握）"></a>SA方法进行需求分析（掌握）</h3><p>结构化分析SA（System Analysis）方法进行需求分析的核心是<mark>数据字典</mark></p><p>模型：</p><ul class="lvl-0"><li class="lvl-2"><p>数据模型：<mark>实体联系图</mark>（E-R图）描述实体、属性、以及实体之间的关系</p></li><li class="lvl-2"><p>功能模型：<mark>数据流图</mark>（DFD）从数据传递和加工的角度，利用图形符号通过逐层 细分描述系统内各个部件的功能和数据在它们之间传递的情况，来说明系统所完成的功能</p></li><li class="lvl-2"><p>行为模型：<mark>状态转换图</mark>（STD）通过描述系统的状态 和引起系统状态转换的时间，来表示系统的行为，指出作为特定时间的结果将执行那些动作（例如，处理数据等）</p></li></ul><h3 id="需求规格说明书（SRS）（掌握）"><a class="header-anchor" href="#需求规格说明书（SRS）（掌握）"></a>需求规格说明书（SRS）（掌握）</h3><p>SRS（Software Requirement Specification）是需求开发活动的产物，其中规定SRS应该包含以下内容：</p><ol><li class="lvl-3"><p>范围</p></li><li class="lvl-3"><p>引用文件</p></li><li class="lvl-3"><p>需求</p></li><li class="lvl-3"><p>合格性规定</p></li><li class="lvl-3"><p>需求可追踪性</p></li><li class="lvl-3"><p>尚未解决的问题</p></li><li class="lvl-3"><p>注解</p></li><li class="lvl-3"><p>附录</p></li></ol><h3 id="需求验证（了解）"><a class="header-anchor" href="#需求验证（了解）"></a>需求验证（了解）</h3><p>需求验证也称为需求确认,其活动是为了确认以下几个方面的内容:</p><ol><li class="lvl-3"><p>SRS正确描述了预期的、满足项目干系人需求的系统行为与特征。</p></li><li class="lvl-3"><p>SRS中的软件需求是从系统需求、业务规格和其他来源中正确推导而来的。</p></li><li class="lvl-3"><p>需求是完整和高质量的</p></li><li class="lvl-3"><p>需求的表示在所有地方都是一致的</p></li><li class="lvl-3"><p>需求为继续进行系统设计、实现和测试提供了足够的基础。</p></li></ol><p>在实际工作中, -般通过需求评审和需求测试工作来对需求进行验证。需求评审就是对SRS进行技术评审。</p><h3 id="UML（掌握）"><a class="header-anchor" href="#UML（掌握）"></a>UML（掌握）</h3><ol><li class="lvl-3"><p>UML是一种定义良好，易于表达、功能强大且普遍适用的建模语言。从总体来看，UML的结构包括造块、规则和公共机制三个部分。</p></li><li class="lvl-3"><p>UML用关系把事物集合在一起，主要有四个关系</p><ul class="lvl-2"><li class="lvl-5">依赖，一个事物发生改变会影响到另外一个事物的语义</li><li class="lvl-5">关联，关联描述一组对象之间连接的结构关系</li><li class="lvl-5">泛化，泛化是一般化和特殊化的关系，描述特殊元素的对象可替换的一般元素的对象</li><li class="lvl-5">实现，实现时类与类之间的语义定义关系，其中一个类指定了由另外一个类保证执行的契约。</li></ul></li></ol><h4 id="依赖（掌握）"><a class="header-anchor" href="#依赖（掌握）"></a>依赖（掌握）</h4><p>表现为函数中的参数(use a) ,是类与类之间的连接,表示一个类依赖于另一个类的定义,其中一个类的变化将影响另外一个类。例如如果A依赖于B ,则B体现为局部变量,方法的参数、或静态方法的调用。如电视(TV)依赖于频道(channel)常见的依赖关系如下:</p><ol><li class="lvl-3"><p>类B以参数的形式传入类A的方法中</p></li><li class="lvl-3"><p>类B以局部变量的形式存在于类A的方法中</p></li><li class="lvl-3"><p>类A调用类B的静态方法。</p></li></ol><p>UML图中实现使用一条带有箭头的虚线指向被依赖的类，如下：</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统15.png" style="zoom:67%;"><h4 id="关联（掌握）"><a class="header-anchor" href="#关联（掌握）"></a>关联（掌握）</h4><p>表现为变量(has a)，类与类之间的联接，它使一个类知道另一个类的属性和方法。例如如果A依赖于B，则B体现为A的全局变量，如person类company类</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统16.png" style="zoom:67%;"><h4 id="泛化（掌握）"><a class="header-anchor" href="#泛化（掌握）"></a>泛化（掌握）</h4><p>表示类与类之间的集成关系、接口与接口之间的继承关系。</p><p>UML使用一条带有空心三角箭头的实线指向基类，如下：</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统17.png" style="zoom:67%;"><h4 id="实现（掌握）"><a class="header-anchor" href="#实现（掌握）"></a>实现（掌握）</h4><p>表示类对接口的实现。UML图中实现使用一条带有空心三角箭头的虚线指向接口，如下：</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统18.png" style="zoom: 50%;"><h3 id="UML2-0-14种图（掌握）"><a class="header-anchor" href="#UML2-0-14种图（掌握）"></a>UML2.0-14种图（掌握）</h3><ol><li class="lvl-3"><p>类图:类图描述一组类、接口、协作、和它们之间的关系,类图给出系统静态设计视图,活动类的类图给出了系统的静态进程视图。</p></li><li class="lvl-3"><p>对象图:对象图描述一组对象及他们之间的关系。</p></li><li class="lvl-3"><p>构件图:构件图描述一个封装的类和它的接口、 端口、以及由内嵌的构件和连接件构成的内部结构。</p></li><li class="lvl-3"><p>组合结构图:组合结构图描述结构化类(例如,构件或类)的内部结构,包括结构化类与系统其余部分的交互点。</p></li><li class="lvl-3"><p>用例图:用例图描述一组用例、参与者及它们之间的关系</p></li><li class="lvl-3"><p>顺序图(也称序列图) : 顺序图是一种<mark>交互图</mark> ,交互图展示了一种交互，它由一组对象或参与者以及它们之间可能发送的消息构成。交互图关注于系统的动态视图。顺序图是强调消息的时间次序的交互图。</p></li><li class="lvl-3"><p>通信图:通信图也是一种<mark>交互图</mark> ,它强调收发消息的对象或参与者的结构组织。顺序图强调的时序,通信图强调的对象之间的组织机构关系。</p></li><li class="lvl-3"><p>定时图(也称计时图) :定时图也是一种<mark>交互图</mark> ,他强调消息跨越不同对象或参与者的实际时间,而不仅仅只是关心消息的相对顺序。</p></li><li class="lvl-3"><p>状态图:状态图描述一个状态机,它由状态、转移、事件和活动组成,状态图给出了对象的动态视图。</p></li><li class="lvl-4"><p>活动图:活动图讲进程或其他计算机结构展示为计算内部-步步的控制流和数据流。活动图专注于系统的动态视图,它强调对象间的控制流程。</p></li><li class="lvl-4"><p>部署图:部署图描述对运行时的处理节点及在其中生存的构件配置。部署图给出了架构的静态部署视图,通常一个节点包含一个或多个部署图。</p></li><li class="lvl-4"><p>制品图:制品图描述计算机中一-个系统的物理结构,制品包括文件、数据库和类似的物理比特集合。制品图通常与部署图在一起使用。 制品也给出了他们的实现的类和构件。</p></li><li class="lvl-4"><p>包图:包图描述由模型本身分解而成的组织单元,以及它们之间的依赖关系。</p></li><li class="lvl-4"><p>交互概览图:交互概览图是互动图和顺序图的混合物。</p></li></ol><h3 id="UML视图（掌握）"><a class="header-anchor" href="#UML视图（掌握）"></a>UML视图（掌握）</h3><ul class="lvl-0"><li class="lvl-2"><p>逻辑视图：逻辑视图也称为<mark>设计视图</mark>，它表示设计模型中在架构方面具有重要意义的部分，即类、子系统、包和用例实现的子集。</p></li><li class="lvl-2"><p>进程视图：进程视图是可执行线程与进程作为活动类的建模，它是逻辑视图的一次执行实例,描述了并发与同步结构。</p></li><li class="lvl-2"><p>实现视图：实现视图对组成基于系统的物理代码的文件和构件进行建模。</p></li><li class="lvl-2"><p>部署视图：:部署视图把构件部署到一组物理节点上,表示软件到硬件的映射和分布结构。</p></li><li class="lvl-2"><p>用例视图：用例视图是最基本上的需求分析模型。</p></li></ul><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统19.png" style="zoom:67%;"><h3 id="OOA与OOD（了解）"><a class="header-anchor" href="#OOA与OOD（了解）"></a>OOA与OOD（了解）</h3><p>OOA：Object-Oriented Analysis（面向对象分析方法）</p><p>OOD：Object-Oriented Design（面向对象设计）</p><p>OOA模型独立于具体实现，即不考虑具体实现有关的因素，这也是OOA与OOD的区别所在，OOA的任务是”做什么“，OOD的任务是”怎么做“。<mark>面对对象分析阶段</mark>的核心工作是<mark>建立系统用例模型与分析模型</mark>。</p><h3 id="软件架构风格（掌握）‼️"><a class="header-anchor" href="#软件架构风格（掌握）‼️"></a>软件架构风格（掌握）‼️</h3><p>解决好软件的复用、质量和维护问题，是研究软件架构的根本目的。软件架构设计的一个核心问题是能否达到架构级的软件复用，在这一活动中，评估人员关注的是系统质量属性。</p><ol><li class="lvl-3"><p>数据流风格：包括<mark>批处理序列</mark>（顺序执行）和<mark>管道/过滤器</mark>（输入输出数据流）两种风格。</p></li><li class="lvl-3"><p>调用/返回风格：包括<mark>主程序/子程序</mark>（过程调用）、<mark>数据抽象和面向对象</mark>（对象及封装）以及<mark>层次结构</mark>（分层调用）</p></li><li class="lvl-3"><p>独立构件风格：包括<mark>进程通信</mark>（消息传递、远程调用）和<mark>事件驱动</mark>（时间触发调用）的系统</p></li><li class="lvl-3"><p>虚拟机风格：包括<mark>解释器</mark>（解释引擎）和<mark>基于规则</mark>（规则集）的系统</p></li><li class="lvl-3"><p>仓库风格：包括<mark>数据库系统</mark>（中央共享数据源）、<mark>黑板系统</mark>（知识源、黑板以及共享数据和控制）和<mark>超文本系统</mark>（非线性交叉引用）</p></li></ol><h3 id="软件架构评估（了解）"><a class="header-anchor" href="#软件架构评估（了解）"></a>软件架构评估（了解）</h3><p>所关注的是质量属性</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统20.png" style="zoom:67%;"><h3 id="软件设计（掌握）"><a class="header-anchor" href="#软件设计（掌握）"></a>软件设计（掌握）</h3><ol><li class="lvl-3"><p>软件设计分为<u>结构化设计</u>与面对对象设计。</p></li><li class="lvl-3"><p>结构化设计SD是一种面向数据流的方法,它以SRS和SA阶段所产生的DFD和数据字段等文档为基础,是一个自顶向下、逐步求精和模块化的过程。SD分为概要设计和详细设计两个阶段。</p></li><li class="lvl-3"><p>在SD中,需要遵循一个基本原则:<u>高内聚,低耦合</u>,模块内部高度内聚,模块与模块之间需要降低耦合度。</p></li></ol><h3 id="软件工程的过程管理（掌握）"><a class="header-anchor" href="#软件工程的过程管理（掌握）"></a>软件工程的过程管理（掌握）</h3><p>CMMI V1.2版本</p><p>阶段式：CMM 连续式：EIAIS。逻辑等价，但是分类方法不同，结果应该是相通的</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统21.png" style="zoom:67%;"><hr><p>口诀：</p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F22.png" alt=""></p><blockquote><p>这两种各有优缺点，均采用统一的24个过程域，在逻辑上是等价的，<u>对统一组织采用阶段时模型和连续式模型分别进行CMMI评估得到的结论应该是相同的</u></p></blockquote><h3 id="测试（掌握）"><a class="header-anchor" href="#测试（掌握）"></a>测试（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统23.png" style="zoom:67%;"><h4 id="白盒测试（掌握）"><a class="header-anchor" href="#白盒测试（掌握）"></a>白盒测试（掌握）</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统24.png" style="zoom:67%;"><h4 id="软件测试（掌握）"><a class="header-anchor" href="#软件测试（掌握）"></a>软件测试（掌握）</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统25.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统26.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统27.png" style="zoom:67%;"><h3 id="企业应用集成EAI（掌握）‼️"><a class="header-anchor" href="#企业应用集成EAI（掌握）‼️"></a>企业应用集成EAI（掌握）‼️</h3><p>EAI（Enterprise Application Integration）可以包括<mark>表示集成、数据集成、控制集成和业务流程集成</mark>等多个层次和方面。也可以在<mark>多个企业之间进行应用集成</mark></p><h4 id="表示集成（界面集成）："><a class="header-anchor" href="#表示集成（界面集成）："></a>表示集成（界面集成）：</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统28.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统29.png" style="zoom:67%;"><h4 id="数据集成（是白盒集成）："><a class="header-anchor" href="#数据集成（是白盒集成）："></a>数据集成（是白盒集成）：</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统30.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统31.png" style="zoom:67%;"><h4 id="控制集成（功能集成-应用集成）："><a class="header-anchor" href="#控制集成（功能集成-应用集成）："></a>控制集成（功能集成/应用集成）：</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统32.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统33.png" style="zoom:67%;"><h4 id="业务流程集成（过程集成）："><a class="header-anchor" href="#业务流程集成（过程集成）："></a>业务流程集成（过程集成）：</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统34.png" style="zoom:67%;"><h4 id="企业之间的应用集成："><a class="header-anchor" href="#企业之间的应用集成："></a>企业之间的应用集成：</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统35.png" style="zoom:67%;"><h2 id="新一代信息技术"><a class="header-anchor" href="#新一代信息技术"></a>新一代信息技术</h2><p>物联网、云计算、大数据、移动互联网、互联网+、AI人工智能、区块链</p><h3 id="物联网（掌握）"><a class="header-anchor" href="#物联网（掌握）"></a>物联网（掌握）</h3><p>The Internet of Things</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统36.png" style="zoom:67%;"><p>架构：</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统37.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统38.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统39.png" style="zoom:77%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统40.png"><h3 id="云计算（掌握）"><a class="header-anchor" href="#云计算（掌握）"></a>云计算（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F41.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F42.png" alt=""></p><h3 id="大数据（掌握）"><a class="header-anchor" href="#大数据（掌握）"></a>大数据（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F43.png" alt=""></p><h3 id="移动互联网（掌握）"><a class="header-anchor" href="#移动互联网（掌握）"></a>移动互联网（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F44.png" alt=""></p><h3 id="互联网-（掌握）"><a class="header-anchor" href="#互联网-（掌握）"></a>互联网+（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F45.png" alt=""></p><h3 id="AI（人工智能）（掌握）"><a class="header-anchor" href="#AI（人工智能）（掌握）"></a>AI（人工智能）（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F46.png" alt=""></p><h3 id="区块链（掌握）"><a class="header-anchor" href="#区块链（掌握）"></a>区块链（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F47.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F48.png" alt=""></p><h3 id="智能制造2025（掌握）"><a class="header-anchor" href="#智能制造2025（掌握）"></a>智能制造2025（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F49.png" alt=""></p><h2 id="信息系统安全技术"><a class="header-anchor" href="#信息系统安全技术"></a>信息系统安全技术</h2><h3 id="信息安全的有关概念（掌握）"><a class="header-anchor" href="#信息安全的有关概念（掌握）"></a>信息安全的有关概念（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F50.png" alt=""></p><h4 id="稳定性、可用性和可靠性（了解）"><a class="header-anchor" href="#稳定性、可用性和可靠性（了解）"></a>稳定性、可用性和可靠性（了解）</h4><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统51.png" style="zoom:67%;"><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F52.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F53.png" alt=""></p><h3 id="信息加密、解密与常用算法（掌握）"><a class="header-anchor" href="#信息加密、解密与常用算法（掌握）"></a>信息加密、解密与常用算法（掌握）</h3><h4 id="加密技术（掌握）"><a class="header-anchor" href="#加密技术（掌握）"></a>加密技术（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F54.png" alt=""></p><h4 id="数字签名（掌握）"><a class="header-anchor" href="#数字签名（掌握）"></a>数字签名（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F55.png" alt=""></p><h4 id="认证（掌握）"><a class="header-anchor" href="#认证（掌握）"></a>认证（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F56.png" alt=""></p><h4 id="计算机设备安全（了解）"><a class="header-anchor" href="#计算机设备安全（了解）"></a>计算机设备安全（了解）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F57.png" alt=""></p><h4 id="防火墙（掌握）"><a class="header-anchor" href="#防火墙（掌握）"></a>防火墙（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F58.png" alt=""></p><h4 id="入侵检测与防护（掌握）"><a class="header-anchor" href="#入侵检测与防护（掌握）"></a>入侵检测与防护（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F59.png" alt=""></p><h4 id="VPN虚拟专用网络（掌握）"><a class="header-anchor" href="#VPN虚拟专用网络（掌握）"></a>VPN虚拟专用网络（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F60.png" alt=""></p><h4 id="安全扫描、蜜罐技术（了解）"><a class="header-anchor" href="#安全扫描、蜜罐技术（了解）"></a>安全扫描、蜜罐技术（了解）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F61.png" alt=""></p><h3 id="信息系统安全（掌握）"><a class="header-anchor" href="#信息系统安全（掌握）"></a>信息系统安全（掌握）</h3><h4 id="操作系统安全（掌握）"><a class="header-anchor" href="#操作系统安全（掌握）"></a>操作系统安全（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F62.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F63.png" alt=""></p><h4 id="数据库安全（掌握）"><a class="header-anchor" href="#数据库安全（掌握）"></a>数据库安全（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F64.png" alt=""></p><h4 id="应用系统安全（掌握）"><a class="header-anchor" href="#应用系统安全（掌握）"></a>应用系统安全（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F65.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F66.png" alt=""></p><h2 id="信息化和信息系统"><a class="header-anchor" href="#信息化和信息系统"></a>信息化和信息系统</h2><h3 id="“十三五”规划纲要（了解）"><a class="header-anchor" href="#“十三五”规划纲要（了解）"></a>“十三五”规划纲要（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统67.png" style="zoom:67%;"><h3 id="信息化发展的9个特点（了解）"><a class="header-anchor" href="#信息化发展的9个特点（了解）"></a>信息化发展的9个特点（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统68.png" style="zoom:67%;"><h3 id="电子政务（掌握）"><a class="header-anchor" href="#电子政务（掌握）"></a>电子政务（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统69.png" style="zoom:67%;"><h3 id="电子商务（了解-掌握）"><a class="header-anchor" href="#电子商务（了解-掌握）"></a>电子商务（了解/掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统70.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统71.png" style="zoom:67%;"><p>对象需掌握</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统72.png" style="zoom:67%;"><h3 id="工业和信息化融合（掌握）"><a class="header-anchor" href="#工业和信息化融合（掌握）"></a>工业和信息化融合（掌握）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统73.png" style="zoom:67%;"><h3 id="信息系统服务管理（了解）"><a class="header-anchor" href="#信息系统服务管理（了解）"></a>信息系统服务管理（了解）</h3><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统74.png"><h3 id="工程监理（掌握）"><a class="header-anchor" href="#工程监理（掌握）"></a>工程监理（掌握）</h3><p>定义：依法设立且具备相应资质的监理单位,受业主单位(建设单位)委托,依据国家有关法律法规、技术标准和信息系统I程监理合同，对信息系统工程项目实施的监督管理</p><p>工作内容：‼️</p><ul class="lvl-0"><li class="lvl-2"><p>四控：</p><ul class="lvl-2"><li class="lvl-4">投资控制</li><li class="lvl-4">进度控制</li><li class="lvl-4">质量控制</li><li class="lvl-4">变更控制</li></ul></li><li class="lvl-2"><p>三管：</p><ul class="lvl-2"><li class="lvl-4">合同管理</li><li class="lvl-4">信息管理</li><li class="lvl-4">安全管理</li></ul></li><li class="lvl-2"><p>一协调：</p><ul class="lvl-2"><li class="lvl-4">沟通协调</li></ul></li></ul><p>需要实施监理的项目：<img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F75.png" alt=""></p><h3 id="系统运行维护（掌握）"><a class="header-anchor" href="#系统运行维护（掌握）"></a>系统运行维护（掌握）</h3><p>运行维护是信息系统生命周期中最重要的，也是最长的一个阶段</p><h4 id="IT服务管理（ITSM-："><a class="header-anchor" href="#IT服务管理（ITSM-："></a>IT服务管理（ITSM)：</h4><p><mark>需要知道，是个方法论，以服务为中心</mark></p><p>定义：是一套帮助组织对IT系统的规划、研发、实施和运营进行有效管理的方法，是一套方法论</p><p>核心思想</p><ul class="lvl-0"><li class="lvl-2"><p>提供低成本、高质量的IT服务</p></li><li class="lvl-2"><p>IT服务的质量和成本则需从IT服务的客户（购买IT服务）方和用户（使用IT服务）方加以判断</p></li><li class="lvl-2"><p>以服务为中心的IT管理</p></li></ul><p>TSSS体系框架内容</p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/第一章信息化和信息系统76.png"><h4 id="信息系统规划（掌握）"><a class="header-anchor" href="#信息系统规划（掌握）"></a>信息系统规划（掌握）</h4><p>定义：</p><p>信息系统规划（也称为信息系统战略规划）是一个组织有关信息系统建设与应用的全局性谋划，主要包括战略目标、策略和部署内容。</p><p><mark>信息系统规划</mark>是企业信息化建设的<mark>首要纲领</mark>，是信息系统建设的<mark>前提和依据</mark></p><p>大型信息系统的特点：‼️</p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F77.png" alt=""></p><h2 id="信息系统规划"><a class="header-anchor" href="#信息系统规划"></a>信息系统规划</h2><h3 id="规划原则（了解）："><a class="header-anchor" href="#规划原则（了解）："></a>规划原则（了解）：</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F78.png" alt=""></p><h3 id="规划流程（掌握）：‼️"><a class="header-anchor" href="#规划流程（掌握）：‼️"></a>规划流程（掌握）：‼️</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F79.png" alt=""></p><h3 id="信息系统规划（ISP）（掌握）（不怎么考）"><a class="header-anchor" href="#信息系统规划（ISP）（掌握）（不怎么考）"></a>信息系统规划（ISP）（掌握）（不怎么考）</h3><p>第一阶段：</p><ul class="lvl-0"><li class="lvl-2"><p>主要以数据处理为核心,围绕职能部门需求的信息系统规划。</p></li><li class="lvl-2"><p>主要的方法包括企业系统规划法、关键成功因素法和战略集合转化法。</p></li></ul><p>第二阶段：</p><ul class="lvl-0"><li class="lvl-2"><p>主要以企业内部管理信息系统为核心,围绕企业整体需求进行的信息系统规划</p></li><li class="lvl-2"><p>主要的方法包括战略数据规划法、信息工程法和战略栅格法</p></li></ul><p>第三阶段：</p><ul class="lvl-0"><li class="lvl-2"><p>在综合考虑企业内外环境的情况下,以集成为核心，围绕企业战略需求进行的信息系统规划</p></li><li class="lvl-2"><p>主要的方法包括价值链分析法和战略一致性模型</p></li></ul><h3 id="企业系统规划（BSP）（掌握）‼️"><a class="header-anchor" href="#企业系统规划（BSP）（掌握）‼️"></a>企业系统规划（BSP）（掌握）‼️</h3><p>BSP主要方法用于<mark>大型系统</mark>的开发</p><p>步骤‼️：</p><ol><li class="lvl-3"><p>项目确定</p></li><li class="lvl-3"><p>准备工作</p></li><li class="lvl-3"><p>定义企业过程</p></li><li class="lvl-3"><p>识别定义数据类</p></li><li class="lvl-3"><p>分析现有系统</p></li><li class="lvl-3"><p>确定管理部门对系统的要求</p></li><li class="lvl-3"><p>指定建议书和开发计划</p></li><li class="lvl-3"><p>成果报告</p></li></ol><h3 id="信息系统的规划工具（掌握）"><a class="header-anchor" href="#信息系统的规划工具（掌握）"></a>信息系统的规划工具（掌握）</h3><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F80.png" alt=""></p><h4 id="PERT工程网络图（掌握）"><a class="header-anchor" href="#PERT工程网络图（掌握）"></a>PERT工程网络图（掌握）</h4><p>PERT图特点:不仅给出了每个任务的<u>开始时间</u>、<u>结束时间</u>和<u>完成该任务所需的时间,</u>还给出了任务之间<u>的关系</u>。</p><p>在PERT图中,关键路径是图中最长的一条路径。 而松弛时间则反映了完成某些任务时可以推迟其开始时间或延长其所需完成的事件。但是PERT图不能反 应任务之间的并行关系。</p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F81.png" alt=""></p><h4 id="甘特图（掌握）"><a class="header-anchor" href="#甘特图（掌握）"></a>甘特图（掌握）</h4><p>特点：能清晰的描述每个任务从何时开始，到何时结束，以及任务之间的并行关系。但是他不能清晰的反映出各任务的依赖关系</p><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F82.png" alt=""></p><h4 id="过程-组织（P-O）矩阵（掌握）"><a class="header-anchor" href="#过程-组织（P-O）矩阵（掌握）"></a>过程/组织（P/O）矩阵（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F83.png" alt=""></p><p>√：决策人员。*：主要参与人员。+：参与了</p><h4 id="资源-数据（R-D）矩阵（掌握）"><a class="header-anchor" href="#资源-数据（R-D）矩阵（掌握）"></a>资源/数据（R/D）矩阵（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F84.png" alt=""></p><h4 id="C-U矩阵（掌握）"><a class="header-anchor" href="#C-U矩阵（掌握）"></a>C/U矩阵（掌握）</h4><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F85.png" alt=""></p><p>U:  User 顾客</p><p>C:  Creat 创建数据类</p><h2 id="企业首席信息官及其职责（了解）"><a class="header-anchor" href="#企业首席信息官及其职责（了解）"></a>企业首席信息官及其职责（了解）</h2><p><img src="https://cdn.jsdelivr.net/gh/DreamUnity/typoraImage/%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%BF%A1%E6%81%AF%E5%8C%96%E5%92%8C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F86.png" alt=""></p><h2 id="商业智能（BI）（掌握）"><a class="header-anchor" href="#商业智能（BI）（掌握）"></a>商业智能（BI）（掌握）</h2><p>定义：将组织中现有的数据转化为知识，帮助组织作出明智的业务经营决策</p><p>主要功能：</p><ul class="lvl-0"><li class="lvl-2"><p>数据仓库</p></li><li class="lvl-2"><p>数据ETL（数据抽取、转换和加载）</p></li><li class="lvl-2"><p>数据统计输出（报表）</p></li><li class="lvl-2"><p>分析功能</p></li></ul><p>组成部分：</p><ul class="lvl-0"><li class="lvl-2"><p>数据仓库</p></li><li class="lvl-2"><p>联机分析处理（OLAP）</p></li><li class="lvl-2"><p>数据挖掘</p></li><li class="lvl-2"><p>数据分析</p></li><li class="lvl-2"><p>数据备份和恢复</p></li></ul><p>基本体系结构：</p><ul class="lvl-0"><li class="lvl-2"><p>数据仓库</p></li><li class="lvl-2"><p>联机分析处理（OLAP）</p></li><li class="lvl-2"><p>数据挖掘</p></li></ul><p>⚠️：OLTP是属于数据库的，联机业务处理</p>]]></content>
      
      
      <categories>
          
          <category> 高级软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级软考 </tag>
            
            <tag> 信息系统项目管理师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL_表空间</title>
      <link href="/2022/08/12/mysql-biao-kong-jian/"/>
      <url>/2022/08/12/mysql-biao-kong-jian/</url>
      
        <content type="html"><![CDATA[<h1>表在文件系统中的表示</h1><p>InnoDB存储表数据的方式：</p><ul class="lvl-0"><li class="lvl-2">每个索引对应一个b+树，每个节点都是一个数据页，用双链表连接</li><li class="lvl-2">叶子节点存储了完整的用户记录</li></ul><p>管理这些页：表空间（系统表空间、独立表空间[为每个表建立一个]、其他类型表空间[通用表\undo\临时表]）</p><p>MyISAM存储表数据的方式：没有表空间一说，表的数据和索引数据都存放在数据库子目录下</p><h1>InnoDB的表空间</h1><h2 id="独立表空间结构"><a class="header-anchor" href="#独立表空间结构"></a>独立表空间结构</h2><h3 id="区的概念"><a class="header-anchor" href="#区的概念"></a>区的概念</h3><p><mark>64页-1区   256区-1组</mark></p><ul class="lvl-0"><li class="lvl-2"><p>第一个组的最开始的3个页面类型是固定的</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">FSP_HDR记录表空间整体属性以及所有区的属性，整个表空间只有过一个FSP_HDR类型页面</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">IBUF_BITMAP存储有关Change Buffer的一些信息</li></ul></li><li class="lvl-3"><ul class="lvl-2"><li class="lvl-5">INODE存储INODE Entry的数据结构</li></ul></li><li class="lvl-2"><p>其余的各组的两个页面的类型是固定的</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">XDES（extent descriptor）用来登记本组256个区的属性，与FSP_HDR作用类似但是FSP_HDR会额外存储一些表空间的属性</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">IBUF_BITMAP存储有关Change Buffer的一些信息</li></ul></li></ul><h3 id="段的概念"><a class="header-anchor" href="#段的概念"></a>段的概念</h3><p><code>索引-&gt;叶子段、非叶子段</code><br>碎片区：碎片区的页可以用于不同目的，其中可以有的页属段A，有的页属段B，有的直接属表空间。</p><ul class="lvl-0"><li class="lvl-2"><p>刚插入数据时，段从某个碎片区以单个页来分配空间</p></li><li class="lvl-2"><p>段占用32个碎片区页面之后，以完整的区为单位分配存储空间<mark>段是某些零散的页面以及一些完整的区的集合</mark></p></li></ul><h3 id="区的分类-XDES-Entry"><a class="header-anchor" href="#区的分类-XDES-Entry"></a>区的分类 XDES Entry</h3><ul class="lvl-0"><li class="lvl-2"><p>FREE 区的分类</p></li><li class="lvl-2"><p>FREE_FRAG 有剩余空闲页面的碎片区</p></li><li class="lvl-2"><p>FULL_FRAG 没有剩余空闲页面的碎片区</p></li><li class="lvl-2"><p>FSEG 附属于某个段的区</p></li></ul><p>FREE 、FREE_FRAG 、FULL_FRAG属于表空间</p><p>XDES Entry 管理以上的<mark>区</mark><br><img src="https://img-blog.csdnimg.cn/78c208b593ae4416815744bc9757ae62.png" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>Segment ID 该区所在的段的ID</p></li><li class="lvl-2"><p>List Node 将若干个XDES Entry连成一个链表</p></li><li class="lvl-2"><p>State 区的状态，即以上四个</p></li><li class="lvl-2"><p>Page State Bitmap 16字节-128位。一个区有64的页，这128位分为64个部分，每部分的第一位表示对应的表是否空闲，第二位还没用到</p></li></ul><p>通过XDES Entry结构中的List Node建成链表，将状态对应的区对应的XDES Entry结构连接成一个链表，<mark>直属于表空间</mark></p><ul class="lvl-0"><li class="lvl-2"><p>FREE链表</p></li><li class="lvl-2"><p>FREE_FRAG链表</p></li><li class="lvl-2"><p>FULL_FRAG链表</p></li></ul><p>根据段号建立链表，为每个段中的区的XDES Entry结构建立了3个链表，<mark>属于段</mark></p><ul class="lvl-0"><li class="lvl-2"><p>FREE链表</p></li><li class="lvl-2"><p>NOT_FULL链表</p></li><li class="lvl-2"><p>FULL链表</p></li></ul><p>List Base Node（链表及节点）结构，包含了链表的头节点和尾节点等<br><img src="https://img-blog.csdnimg.cn/02a0a03ea0c54fdaa9750cc2c94266b7.png" alt=""></p><h3 id="段的结构-INODE-Entry"><a class="header-anchor" href="#段的结构-INODE-Entry"></a>段的结构 INODE Entry</h3><p><mark>段是一个逻辑上的概念</mark></p><ul class="lvl-0"><li class="lvl-2"><p>NOT_FULL_N_USED 在NOT_FULL链表中使用了多少个页面</p></li><li class="lvl-2"><p>MagicNumber 标记INODE Entry是否被初始化</p></li><li class="lvl-2"><p>Fragment Array Entry 每个对应着一个零散的页面，表页号</p></li></ul><p><img src="https://img-blog.csdnimg.cn/e5e8fbfe83d543508a17c181cd18b0c0.png" alt=""></p><h3 id="各类型页面"><a class="header-anchor" href="#各类型页面"></a>各类型页面</h3><ul class="lvl-0"><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">FSP_HDR类型：第一个组的第一个页面，即表空间的第一个页面，存储表空间的整体属性及其第一个组的256个XDES Entry结构<br><img src="https://img-blog.csdnimg.cn/df76a34bdfca434daaa788eea6959cc7.png" alt=""></li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">XDES类型：只是不记录表空间的整体属性 <img src="https://img-blog.csdnimg.cn/fce8506ad3874b0da0ca214f154d57a6.png" alt=""></li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">IBUF_BITMAP了类型：记录了有关Change Buffer的东西</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">INODE类型：为了存储INODE Entry结构，其中，List Node For INODE Page List通用链表节点，存储上一个和下一个INODE页面的指针，当段超过85个时，需要额外的INODE类型的页面存储。讲这些INODE类型的页面串成两个不同链表</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4"><ul class="lvl-4"><li class="lvl-6">SEG_INODES_FULL</li></ul></li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4"><ul class="lvl-4"><li class="lvl-6">SEG_INODES_FREE<br><img src="https://img-blog.csdnimg.cn/910931f96e304d858e7d2b871427c4d9.png" alt=""></li></ul></li></ul></li></ul><h3 id="Segment-Header-结构的运用"><a class="header-anchor" href="#Segment-Header-结构的运用"></a>Segment Header 结构的运用</h3><p><mark>如何知道哪个段对应哪个INODE Entry结构</mark></p><ul class="lvl-0"><li class="lvl-2"><p>Space ID 表空间ID</p></li><li class="lvl-2"><p>Page Number 所在的页面页号</p></li><li class="lvl-2"><p>Byte Offset 偏移量<br><img src="https://img-blog.csdnimg.cn/c5874ad637604f7e853e2faad760c5fc.png" alt=""></p></li></ul><h2 id="系统表空间"><a class="header-anchor" href="#系统表空间"></a>系统表空间</h2><p><mark>开头有许多记录整个系统属性的页面</mark>前1-3页面的类型是与独立表空间  一致的，但后3-7是系统表特有的</p><ul class="lvl-0"><li class="lvl-2"><p>SYS：存储Change Buffer的头部信息</p></li><li class="lvl-2"><p>INDEX：存储Change Buffer的根页面</p></li><li class="lvl-2"><p>TRX_SYS： 事务系统的相关信息</p></li><li class="lvl-2"><p>SYS：第一个回滚段的信息</p></li><li class="lvl-2"><p>SYS：数据字典头部信息</p></li></ul><p>其中extent 1和extent 2成为双写缓冲区。</p><p><img src="https://img-blog.csdnimg.cn/64075a08ef5843599fb86c24347498ba.png" alt=""></p><h3 id="InnoDB数据字典"><a class="header-anchor" href="#InnoDB数据字典"></a>InnoDB数据字典</h3><p>每当向一个表插入一条数据时，需要进行一系列的校验。使用的信息不是使用INSERT语句插入的用户数据，需要引入一些额外数据—<mark>元数据</mark>其中有4个表尤其重要，如下‼️</p><ul class="lvl-0"><li class="lvl-2"><p>SYS_TABLES 所有表信息</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">以NAME列为主键的聚簇索引</li></ul></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">以ID为列建立的二级索引</li></ul></li><li class="lvl-2"><p>SYS_COLUMNS 所有列信息</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">只有一个以(TABLE_ID, POS)建立的聚簇索引</li></ul></li><li class="lvl-2"><p>SYS_INDEXES 所有索引信息</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">只有一个以(TABLE_ID, ID)列为主键的聚簇索引</li></ul></li><li class="lvl-2"><p>SYS_FIELDS 所有索引对应的列的信息</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-4">只有一个以（INDEX_ID, POS)列为主键的聚簇索引</li></ul></li></ul><p>Data Dictionary Header页面：有了上述的4张表，可以获取其他系统表以及用户定义的表的所有元数据。</p><ol><li class="lvl-3"><p>根据表名到SYS_TABLES表中定位到<code>表的TABLE_ID</code></p></li><li class="lvl-3"><p>使用TABLE_ID到SYS_CCOLUMNS表中获取<code>所有列</code>的信息</p></li><li class="lvl-3"><p>使用TABLE_ID到SYS_INDEXES表中获取<code>所有索引</code>的信息</p></li><li class="lvl-3"><p>使用TABLE_ID到SYS_FIELDS表中获取所有索引列的信息</p></li></ol><p><mark>使用类型为SYS的页面记录上述4张表</mark></p>]]></content>
      
      
      <categories>
          
          <category> MySql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题笔记_第二周</title>
      <link href="/2022/08/12/leetcode-shua-ti-bi-ji-di-er-zhou/"/>
      <url>/2022/08/12/leetcode-shua-ti-bi-ji-di-er-zhou/</url>
      
        <content type="html"><![CDATA[<h1>二叉树搜索一条边/整个树的写法</h1><p>搜索一条边的写法:</p><pre class="line-numbers language-language-java"><code class="language-language-java">if (递归函数(root->left)) return ;if (递归函数(root->right)) return ;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>搜索整个树的写法</p><pre class="line-numbers language-language-java"><code class="language-language-java">left = 递归函数(root->left);right = 递归函数(root->right);left与right的逻辑处理;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1>二叉树</h1><h2 id="100-相同的树"><a class="header-anchor" href="#100-相同的树"></a>100. 相同的树</h2><p>给你两棵二叉树的根节点 p 和 q ，编写一个函数来检验这两棵树是否相同。</p><p>如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。</p><blockquote><p>输入：p = [1,2,3], q = [1,2,3]<br>输出：true</p></blockquote><p>迭代法</p><pre class="line-numbers language-language-java"><code class="language-language-java">public boolean isSameTree(TreeNode p, TreeNode q) {return compare(p, q);}public boolean compare(TreeNode left, TreeNode right){    if(left == null && right == null) return true;    else if(left != null && right == null) return false;    else if(left == null && right != null) return false;    else if(left.val != right.val) return false;    boolean leftIsSame = compare(left.left, right.left);    boolean rightIsSame = compare(left.right, right.right);    return leftIsSame && rightIsSame;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="404-左叶子之和"><a class="header-anchor" href="#404-左叶子之和"></a>404. 左叶子之和</h2><p>给定二叉树的根节点 root ，返回所有左叶子之和。</p><p>递归法：</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int sumOfLeftLeaves(TreeNode root){    if (root == null) return 0;    int midValue = 0;    if (root.left != null && root.left.left == null && root.left.right == null){        midValue = root.left.val;    }    return midValue + sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>迭代：</p><pre class="line-numbers language-language-java"><code class="language-language-java"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="513-找树左下角的值"><a class="header-anchor" href="#513-找树左下角的值"></a>513. 找树左下角的值</h2><p>给定一个二叉树的 根节点 root，请找出该二叉树的 最底层 最左边 节点的值。</p><p>假设二叉树中至少有一个节点。</p><blockquote><p>输入: root = [2,1,3]<br>输出: 1</p></blockquote><pre class="line-numbers language-language-java"><code class="language-language-java">public int findBottomLeftValue(TreeNode root) {    Queue<TreeNode> queue = new LinkedList<>();    queue.offer(root);    int res = 0;    while (!queue.isEmpty()) {        int size = queue.size();        for (int i = 0; i < size; i++) {            TreeNode poll = queue.poll();            if (i == 0) {                res = poll.val;            }            if (poll.left != null) {                queue.offer(poll.left);            }            if (poll.right != null) {                queue.offer(poll.right);            }        }    }    return res;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="112-路径总和（简单）-返回值判断"><a class="header-anchor" href="#112-路径总和（简单）-返回值判断"></a>112. 路径总和（简单） 返回值判断</h2><p>给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。</p><blockquote><p>输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22<br>输出：true<br>解释：等于目标和的根节点到叶节点路径如上图所示。</p></blockquote><ul class="lvl-0"><li class="lvl-3"><p>如果需要搜索整棵二叉树且不用处理递归返回值，递归函数就不要返回值。（这种情况就是本文下半部分介绍的113.路径总和ii）</p></li><li class="lvl-3"><p>如果需要搜索整棵二叉树且需要处理递归返回值，递归函数就需要返回值。 （这种情况我们在236. 二叉树的最近公共祖先 (opens new window)中介绍）</p></li><li class="lvl-3"><p>如果要搜索其中一条符合条件的路径，那么递归一定需要返回值，因为遇到符合条件的路径了就要及时返回。（本题的情况）</p></li></ul><pre class="line-numbers language-language-java"><code class="language-language-java">public boolean hasPathSum(TreeNode root, int targetSum) {    if(root == null) return false;    return traversal(root, targetSum - root.val);}public boolean traversal(TreeNode node, int count){    if(node.left == null && node.right == null && count == 0) return true;    if(node.left == null && node.right == null) return false;    if(node.left != null){        count -= node.left.val;        if(traversal(node.left, count)) return true;        count += node.left.val;    }    if(node.right != null){        count -= node.right.val;        if(traversal(node.right, count)) return true;        count += node.right.val;    }    return false;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="113-路径总和-II（中等）"><a class="header-anchor" href="#113-路径总和-II（中等）"></a>113. 路径总和 II（中等）</h2><p>给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径</p><pre class="line-numbers language-language-java"><code class="language-language-java">List<List<Integer>> resList = new ArrayList<>();public List<List<Integer>> pathSum(TreeNode root, int targetSum) {    if(root == null) return resList;    List<Integer> list = new ArrayList<>();    traversal(root, list, targetSum - root.val);    return resList;}public void traversal(TreeNode node ,List<Integer> list, int count){    list.add(node.val);    if(node.left == null && node.right == null && count == 0){        resList.add(new ArrayList<>(list));        return;    }    if(node.left == null && node.right == null){        return;    }    if(node.left != null){        count -= node.left.val;        traversal(node.left, list, count);        list.remove(list.size() - 1);        count += node.left.val;    }    if(node.right != null){        count -= node.right.val;        traversal(node.right, list, count);        list.remove(list.size() - 1);        count += node.right.val;    }    return;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="106-从中序与后序遍历序列构造二叉树-中等"><a class="header-anchor" href="#106-从中序与后序遍历序列构造二叉树-中等"></a>106.从中序与后序遍历序列构造二叉树(中等)</h2><p>给定两个整数数组 inorder 和 postorder ，其中 inorder 是二叉树的中序遍历， postorder 是同一棵树的后序遍历，请你构造并返回这颗 二叉树 。</p><blockquote><p>输入：inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]<br>输出：[3,9,20,null,null,15,7]</p></blockquote><p>迭代思路：</p><ol><li class="lvl-3"><p>若数组为0则为空节点</p></li><li class="lvl-3"><p>不为空，则取后序最后一个节点作为根节点</p></li><li class="lvl-3"><p>找到根节点在中序数组中的位置，作为切割点</p></li><li class="lvl-3"><p>切割中序数组，切成中序左数组和中序后数组</p></li><li class="lvl-3"><p>切割后序数组，切成后序左数组和后序右数组</p></li><li class="lvl-3"><p>递归处理左区间和右区间</p></li></ol><p>重点：坚持循环不变量首先切割中序数组（因为后序最后一个元素就是切割点，好找，坚持左闭右开）左闭右开区间[0, delimiterIndex), [delimiterIndex,end)</p><p>然后切割后序数组，按照中序数组的大小来切割，切割成左数组和右数组<br>[0, leftInorder.size),[leftInorder.size, end)</p><p>递归：<br>root.left = traversal(leftInoreder, leftPostorder);<br>root.right = traversal(rightInorder, rightPostorder);</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode buildTree(int[] inorder, int[] postorder) {    return buildTree1(inorder, 0, inorder.length, postorder, 0, postorder.length);}private TreeNode buildTree1(int[] inorder, int inLeft, int inRight,                            int[] postorder, int postLeft, int postRight){    //没有元素了    if (inRight - inLeft < 1) return null;    if (inRight - inLeft == 1) return new TreeNode(inorder[inLeft]);    int rootVal = postorder[postRight - 1];    TreeNode root = new TreeNode(rootVal);    int rootIndex = 0;    for (int i = inLeft; i < inRight; i++) {        if (inorder[i] == rootVal){            rootIndex = i;            break;        }    }        System.out.println();    root.left = buildTree1(inorder, inLeft, rootIndex,            postorder, postLeft, postLeft + (rootIndex - inLeft));    root.right = buildTree1(inorder, rootIndex + 1, inRight,            postorder, postLeft + (rootIndex - inLeft), postRight - 1);    return root;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="105-从前序与中序遍历序列构造二叉树（中等）"><a class="header-anchor" href="#105-从前序与中序遍历序列构造二叉树（中等）"></a>105. 从前序与中序遍历序列构造二叉树（中等）</h2><p>给定两个整数数组 preorder 和 inorder ，其中 preorder 是二叉树的先序遍历， inorder 是同一棵树的中序遍历，请构造二叉树并返回其根节点。</p><blockquote><p>输入: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]<br>输出: [3,9,20,null,null,15,7]</p></blockquote><p>思路：与后序+中序的思路一样，范围同样是左包右闭</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode buildTree(int[] preorder, int[] inorder) {    return buildTree2(preorder, 0, preorder.length, inorder, 0, inorder.length);}public TreeNode buildTree2(int[] preorder, int preLeft, int preRight,int[] inorder, int inLeft, int inRight){    if(inRight - inLeft < 1) return null;    if(inRight - inLeft == 1) return new TreeNode(inorder[inLeft]);    int rootVal = preorder[preLeft];    TreeNode root = new TreeNode(rootVal);    int rootIndex = 0;    for(int i = inLeft; i < inRight; i++){        if(inorder[i] == rootVal){            rootIndex = i;            break;        }     }    root.left = buildTree2(preorder, preLeft + 1, preLeft + rootIndex - inLeft + 1, inorder, inLeft, rootIndex);    root.right = buildTree2(preorder, preLeft + rootIndex - inLeft + 1, preRight, inorder, rootIndex + 1, inRight);    return root;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="654-最大二叉树-简单"><a class="header-anchor" href="#654-最大二叉树-简单"></a>654. 最大二叉树(简单)</h2><p>给定一个不含重复元素的整数数组。一个以此数组构建的最大二叉树定义如下：</p><ul class="lvl-0"><li class="lvl-3"><p>二叉树的根是数组中的最大元素。</p></li><li class="lvl-3"><p>左子树是通过数组中最大值左边部分构造出的最大二叉树</p></li><li class="lvl-3"><p>右子树是通过数组中最大值右边部分构造出的最大二叉树。</p></li></ul><p>通过给定的数组构建最大二叉树，并且输出这个树的根节点。</p><p><img src="https://img-blog.csdnimg.cn/99cb93871ac64f9a95ac40c414a3ecdd.png" alt="请添加图片描述"></p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode constructMaximumBinaryTree(int[] nums) {return travel(nums, 0, nums.length);}public TreeNode travel(int[] elems, int left, int right){    if(right - left < 1) return null;    if(right - left == 1) return new TreeNode(elems[left]);    int rootVal = Integer.MIN_VALUE;    int rootIndex = 0;    for(int i = left; i < right; i++){        if(elems[i] > rootVal){            rootVal = elems[i];            rootIndex = i;        }    }    TreeNode root = new TreeNode(rootVal);    root.left = travel(elems, left, rootIndex);    root.right = travel(elems, rootIndex + 1, right);    return root;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="617-合并二叉树"><a class="header-anchor" href="#617-合并二叉树"></a>617. 合并二叉树</h2><p>给定两个二叉树，想象当你将它们中的一个覆盖到另一个上时，两个二叉树的一些节点便会重叠。</p><p>你需要将他们合并为一个新的二叉树。合并的规则是如果两个节点重叠，那么将他们的值相加作为节点合并后的新值，否则不为 NULL 的节点将直接作为新二叉树的节点。</p><p><img src="https://img-blog.csdnimg.cn/e695282650d642a8b959830144b47d9b.png" alt="请添加图片描述"><br>思路:<br>使用前序</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {    if(root1 == null) return root2;    if(root2 == null) return root1;    root1.val += root2.val;    root1.left = mergeTrees(root1.left, root2.left);    root1.right = mergeTrees(root1.right, root2.right);    return root1;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="700-二叉搜索树中的搜索"><a class="header-anchor" href="#700-二叉搜索树中的搜索"></a>700. 二叉搜索树中的搜索</h2><p>给定二叉搜索树（BST）的根节点和一个值。 你需要在BST中找到节点值等于给定值的节点。 返回以该节点为根的子树。 如果节点不存在，则返回 NULL。<br><img src="https://img-blog.csdnimg.cn/3040c259706f448cb7058740f29ac41a.png" alt="请添加图片描述"></p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode searchBST(TreeNode root, int val) {    Deque<TreeNode> deque = new LinkedList<>();    deque.offerLast(root);    while(!deque.isEmpty()){        int len = deque.size();        while(len > 0){            TreeNode tmp = deque.pollFirst();            if(tmp.val == val) return tmp;            if(tmp.left != null) deque.offerLast(tmp.left);            if(tmp.right != null) deque.offerLast(tmp.right);            len--;        }    }    return null;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="98-验证二叉搜索树-中等"><a class="header-anchor" href="#98-验证二叉搜索树-中等"></a>98. 验证二叉搜索树(中等)</h2><p>给定一个二叉树，判断其是否是一个有效的二叉搜索树。</p><p>假设一个二叉搜索树具有如下特征：</p><ul class="lvl-0"><li class="lvl-3"><p>节点的左子树只包含小于当前节点的数。</p></li><li class="lvl-3"><p>节点的右子树只包含大于当前节点的数。</p></li><li class="lvl-3"><p>所有左子树和右子树自身必须也是二叉搜索树。</p></li></ul><p>思路:<br>要知道中序遍历下，输出的二叉搜索树节点的数值是有序序列。有了这个特性，验证二叉搜索树，就相当于变成了判断一个序列是不是递增的了。</p><pre class="line-numbers language-language-java"><code class="language-language-java">TreeNode max;public boolean isValidBST(TreeNode root) {     if(root == null) return true;     //左     boolean left = isValidBST(root.left);     if(!left) return false;     //中     if(max != null && root.val <= max.val){         return false;     }     max = root;     //右     boolean right = isValidBST(root.right);     return right; }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="530-二叉搜索树的最小绝对差-简单"><a class="header-anchor" href="#530-二叉搜索树的最小绝对差-简单"></a>530. 二叉搜索树的最小绝对差(简单)</h2><p>给你一个二叉搜索树的根节点 root ，返回 树中任意两不同节点值之间的最小差值 。</p><p>差值是一个正数，其数值等于两值之差的绝对值。</p><p>递归:</p><pre class="line-numbers language-language-java"><code class="language-language-java">TreeNode pre;int res = Integer.MAX_VALUE;public int getMinimumDifference(TreeNode root) {    if(root == null) return 0;    inOrder(root);    return res;}public void inOrder(TreeNode root){    if(root == null) return;    inOrder(root.left);    if(pre != null) res = Math.min(res, root.val - pre.val);    pre = root;    inOrder(root.right);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>迭代:</p><pre class="line-numbers language-language-java"><code class="language-language-java">TreeNode pre;Stack<TreeNode> stack;public int getMinimumDifference(TreeNode root) {   if (root == null) return 0;   stack = new Stack<>();   TreeNode cur = root;   int result = Integer.MAX_VALUE;   while (cur != null || !stack.isEmpty()) {       if (cur != null) {           stack.push(cur); // 将访问的节点放进栈           cur = cur.left; // 左       }else {           cur = stack.pop();            if (pre != null) { // 中               result = Math.min(result, cur.val - pre.val);           }           pre = cur;           cur = cur.right; // 右       }   }   return result;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="501-二叉搜索树中的众数"><a class="header-anchor" href="#501-二叉搜索树中的众数"></a>501. 二叉搜索树中的众数</h2><p>给你一个含重复值的二叉搜索树（BST）的根节点 root ，找出并返回 BST 中的所有 众数（即，出现频率最高的元素）。</p><p>如果树中有不止一个众数，可以按 任意顺序 返回。</p><p>假定 BST 满足如下定义：</p><ul class="lvl-0"><li class="lvl-3"><p>结点左子树中所含节点的值 小于等于 当前节点的值</p></li><li class="lvl-3"><p>结点右子树中所含节点的值 大于等于 当前节点的值</p></li><li class="lvl-3"><p>左子树和右子树都是二叉搜索树</p></li></ul><pre class="line-numbers language-language-java"><code class="language-language-java">ArrayList<Integer> resList;int maxCount;int count;TreeNode pre;public int[] findMode(TreeNode root) {    resList = new ArrayList<>();    maxCount = 0;    count = 0;    pre = null;    findMode1(root);    int[] res = new int[resList.size()];    for(int i = 0; i < res.length; i++){        res[i] = resList.get(i);    }    return res;}public void findMode1(TreeNode root){    if(root == null) return;    findMode1(root.left);    int rootValue = root.val;    if(pre == null || rootValue != pre.val){        count = 1;    }else{        count++;    }    if(count > maxCount){        resList.clear();        resList.add(rootValue);        maxCount = count;    }else if(count == maxCount){        resList.add(rootValue);    }    pre = root;    findMode1(root.right);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="236-二叉树的最近公共祖先"><a class="header-anchor" href="#236-二叉树的最近公共祖先"></a>236. 二叉树的最近公共祖先</h2><p>给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。</p><p>百度百科中最近公共祖先的定义为：“对于有根树 T 的两个节点 p、q，最近公共祖先表示为一个节点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”</p><p>思路总结:</p><ul class="lvl-0"><li class="lvl-3"><p>求最小公共祖先，需要从底向上遍历，那么二叉树，只能通过后序遍历（即：回溯）实现从低向上的遍历方式。</p></li><li class="lvl-3"><p>在回溯的过程中，必然要遍历整棵二叉树，即使已经找到结果了，依然要把其他节点遍历完，因为要使用递归函数的返回值（也就是代码中的left和right）做逻辑判断。</p></li><li class="lvl-3"><p>要理解如果返回值left为空，right不为空为什么要返回right，为什么可以用返回right传给上一层结果。</p></li></ul><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {    if(root == q || root == p || root == null) return root;    TreeNode left = lowestCommonAncestor(root.left, p, q);    TreeNode right = lowestCommonAncestor(root.right, p, q);    if(left != null && right != null) return root;    if(left != null && right == null) return left;        else if(left == null && right != null){return right;    }else{        return null;    } }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="235-二叉搜索树的最近公共祖先"><a class="header-anchor" href="#235-二叉搜索树的最近公共祖先"></a>235. 二叉搜索树的最近公共祖先</h2><p>给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。</p><p>思路:其实只要从上到下遍历的时候，cur节点是数值在[p, q]区间中则说明该节点cur就是最近公共祖先了。</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {    if(root == null) return root;    if(root.val > p.val && root.val > q.val){        TreeNode left = lowestCommonAncestor(root.left, p, q);        if(left != null) return left;    }    if(root.val < p.val && root.val < q.val){        TreeNode right = lowestCommonAncestor(root.right, p, q);        if(right != null) return right;    }    return root;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="701-二叉搜索树中的插入操作"><a class="header-anchor" href="#701-二叉搜索树中的插入操作"></a>701. 二叉搜索树中的插入操作</h2><p>给定二叉搜索树（BST）的根节点 root 和要插入树中的值 value ，将值插入二叉搜索树。 返回插入后二叉搜索树的根节点。 输入数据 保证 ，新值和原始二叉搜索树中的任意节点值都不同。</p><p>注意，可能存在多种有效的插入方式，只要树在插入后仍保持为二叉搜索树即可。 你可以返回 任意有效的结果 。</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode insertIntoBST(TreeNode root, int val) {    if(root == null) return new TreeNode(val);    travel(root, val);    return root;}public void travel(TreeNode root, int val){    if(root.val >= val){        if(root.left != null){            travel(root.left, val);         }else{            root.left = new TreeNode(val);            return;        }    }else{        if(root.right != null){            travel(root.right, val);        }else{            root.right = new TreeNode(val);            return;        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="450-删除二叉搜索树中的节点"><a class="header-anchor" href="#450-删除二叉搜索树中的节点"></a>450. 删除二叉搜索树中的节点</h2><p>给定一个二叉搜索树的根节点 root 和一个值 key，删除二叉搜索树中的 key 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。</p><p>一般来说，删除节点可分为两个步骤：</p><p>首先找到需要删除的节点；如果找到了，删除它。</p><pre class="line-numbers language-language-java"><code class="language-language-java"> public TreeNode deleteNode(TreeNode root, int key) {  if (root == null) return root;  if (root.val == key) {    if (root.left == null) {      return root.right;    } else if (root.right == null) {      return root.left;    } else {      TreeNode cur = root.right;      while (cur.left != null) {        cur = cur.left;      }      cur.left = root.left;      root = root.right;      return root;    }  }  if (root.val > key) root.left = deleteNode(root.left, key);  if (root.val < key) root.right = deleteNode(root.right, key);  return root;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="669-修剪二叉搜索树"><a class="header-anchor" href="#669-修剪二叉搜索树"></a>669. 修剪二叉搜索树</h2><p>给你二叉搜索树的根节点 root ，同时给定最小边界low 和最大边界 high。通过修剪二叉搜索树，使得所有节点的值在[low, high]中。修剪树 不应该 改变保留在树中的元素的相对结构 (即，如果没有被移除，原有的父代子代关系都应当保留)。 可以证明，存在 唯一的答案 。</p><p>所以结果应当返回修剪好的二叉搜索树的新的根节点。注意，根节点可能会根据给定的边界发生改变。</p><p>思路:<br>若当前节点小于范围内的最小值,则递归右子树,并返回右子树符合范围的节点对于大于同理</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode trimBST(TreeNode root, int low, int high) {    if(root == null) return root;    if(root.val < low){        return trimBST(root.right, low, high);    }    if(root.val > high){        return trimBST(root.left, low, high);    }    root.left = trimBST(root.left, low, high);    root.right = trimBST(root.right, low, high);    return root;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="108-将有序数组转换为二叉搜索树-简单"><a class="header-anchor" href="#108-将有序数组转换为二叉搜索树-简单"></a>108. 将有序数组转换为二叉搜索树(简单)</h2><p>给你一个整数数组 nums ，其中元素已经按 升序 排列，请你将其转换为一棵 高度平衡 二叉搜索树。</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode sortedArrayToBST(int[] nums) {    return travel(nums, 0, nums.length - 1);}public TreeNode travel(int[] nums, int left, int right){    if(left > right) return null;    int mid = left + ((right - left) / 2);    TreeNode root = new TreeNode(nums[mid]);    root.left = travel(nums, left , mid - 1);    root.right = travel(nums, mid + 1, right);    return root;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="538-把二叉搜索树转换为累加树"><a class="header-anchor" href="#538-把二叉搜索树转换为累加树"></a>538. 把二叉搜索树转换为累加树</h2><p>给出二叉 搜索 树的根节点，该树的节点值各不相同，请你将其转换为累加树（Greater Sum Tree），使每个节点 node 的新值等于原树中大于或等于 node.val 的值之和。</p><pre class="line-numbers language-language-java"><code class="language-language-java">//反中序遍历    int pre;    public TreeNode convertBST(TreeNode root) {        pre = 0;        travel(root);        return root;    }    public void travel(TreeNode cur){        if(cur == null) return;        travel(cur.right);        cur.val += pre;        pre = cur.val;        travel(cur.left);    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题笔记_第一周</title>
      <link href="/2022/08/04/leetcode-shua-ti-bi-ji-di-yi-zhou/"/>
      <url>/2022/08/04/leetcode-shua-ti-bi-ji-di-yi-zhou/</url>
      
        <content type="html"><![CDATA[<h1>栈与队列</h1><h2 id="1047-删除字符串中所有相邻重复项（简单）"><a class="header-anchor" href="#1047-删除字符串中所有相邻重复项（简单）"></a>1047.删除字符串中所有相邻重复项（简单）</h2><p>给出由小写字母组成的字符串 S，重复项删除操作会选择两个相邻且相同的字母，并删除它们。</p><blockquote><p>输入：“abbaca”<br>输出：“ca”<br>解释：例如，在 “abbaca” 中，我们可以删除 “bb” 由于两字母相邻且相同，这是此时唯一可以执行删除操作的重复项。之后我们得到字符串 “aaca”，其中又只有 “aa” 可以执行重复项删除操作，所以最后的字符串为 “ca”。</p></blockquote><p>使用deque栈/双指针，推荐使用双指针</p><p>思路：用top模拟栈顶指针，用res串模拟栈</p><pre class="line-numbers language-language-java"><code class="language-language-java">public String removeDuplicates(String s){StringBuffer res = new StringBuffer();int top = -1;for (int i = 0; i < s.length(); i++) {    if (top >= 0 && res.charAt(top) == s.charAt(i)){        res.deleteCharAt(top);        top--;    }else {        res.append(s.charAt(i));        top++;    }}return res.toString();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="150-逆波兰表达式求值（中等）"><a class="header-anchor" href="#150-逆波兰表达式求值（中等）"></a>150.逆波兰表达式求值（中等）</h2><p>有效的算符包括 +、-、*、/ 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。</p><blockquote><p>输入：tokens = [“2”,“1”,“+”,“3”,“*”]<br>输出：9<br>解释：该算式转化为常见的中缀算术表达式为：((2 + 1) * 3) = 9</p></blockquote><p>使用Deque</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int evalRPN(String[] tokens) {      Deque<Integer> deque = new LinkedList<>();      for (String i : tokens) {          if("+".equals(i)){              deque.addFirst(deque.removeFirst() + deque.removeFirst());          }else if ("-".equals(i)){              deque.addFirst((-deque.removeFirst()) + deque.removeFirst());          }else if ("*".equals(i)){              deque.addFirst(deque.removeFirst() * deque.removeFirst());          }else if ("/".equals(i)){              int after = deque.removeFirst();              int before = deque.removeFirst();              deque.addFirst(before / after);          }else{              deque.addFirst(Integer.parseInt(i));          }      }      return deque.removeFirst();  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="239-滑动窗口最大值（困难）"><a class="header-anchor" href="#239-滑动窗口最大值（困难）"></a>239.滑动窗口最大值（困难）</h2><p>给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。</p><p>返回 滑动窗口中的最大值 。</p><blockquote><p>输入：nums = [1,3,-1,-3,5,3,6,7], k = 3<br>输出：[3,3,5,5,6,7]</p></blockquote><p>思路：创建一个自己的队列类，其中使用双端队列实现poll、add、peek。在每次poll(num[i - k])时，判断是否是上一个窗口的最大值，若是，则弹出。在每次add(num[i])时，判断入队的元素是否比队尾元素大，若是则队尾元素删除，直到不比他小或到队头。</p><pre class="line-numbers language-language-java"><code class="language-language-java">class MyQueue{    Deque<Integer> deque = new LinkedList<>();    public void poll(int val){        if(!deque.isEmpty() && deque.peekFirst() == val){            deque.removeFirst();        }    }    public void add(int val){        while(!deque.isEmpty() && deque.peekLast() < val){            deque.removeLast();        }        deque.addLast(val);    }    public int peek(){        return deque.peekFirst();    }}public int[] maxSlidingWindow(int[] nums, int k) {    if(nums.length == 1) return nums;    int[] res = new int[nums.length - k + 1];    int num = 0;    MyQueue myQueue = new MyQueue();    for (int i = 0; i < k; i++) {        myQueue.add(nums[i]);    }    res[num++] = myQueue.peek();    for (int i = k; i < nums.length; i++) {        myQueue.poll(nums[i - k]);        myQueue.add(nums[i]);        res[num++] = myQueue.peek();    }    return res;}    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="347-前-K-个高频元素（中等）"><a class="header-anchor" href="#347-前-K-个高频元素（中等）"></a>347.前 K 个高频元素（中等）</h2><p>给你一个整数数组 nums 和一个整数 k ，请你返回其中出现频率前 k 高的元素。你可以按 任意顺序 返回答案。</p><blockquote><p>输入: nums = [1,1,1,2,2,3], k = 2<br>输出: [1,2]</p></blockquote><p>思路：<br>1.使用map统计各个元素的出现频率</p><p><code>map.put(num, map.getOrDefault(num, 0) + 1)</code></p><p>2.使用PriorityQueue类型队列模拟小根堆<br><code>new PriorityQueue&lt;&gt;((o1, o2) -&gt;  o1.getValue() - o2.getValue())</code></p><p>用于统计频率前k高的元素，队列中一直保持size不超过k。</p><pre class="line-numbers language-language-java"><code class="language-language-java"> public int[] topKFrequent(int[] nums, int k) {   int[] res = new int[k];   HashMap<Integer, Integer> map = new HashMap<>();   for (int num : nums) {       map.put(num, map.getOrDefault(num, 0) + 1);   }   PriorityQueue<Map.Entry<Integer, Integer>> queue= new PriorityQueue<>(((o1, o2) -> o1.getValue() - o2.getValue()));   for (Map.Entry<Integer, Integer> entry :           queue) {       queue.offer(entry);       if(queue.size() > k){           queue.poll();       }   }   for (int i = k - 1; i >= 0; i--) {       res[i] = queue.poll().getValue();   }   return res;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1>二叉树</h1><p>递归算法的三要素</p><ol><li class="lvl-3"><p>确认递归函数的参数和返回值</p></li><li class="lvl-3"><p>确定终止条件</p></li><li class="lvl-3"><p>确定单层递归的逻辑</p></li></ol><h2 id="144-二叉树的前序遍历（简单）"><a class="header-anchor" href="#144-二叉树的前序遍历（简单）"></a>144.二叉树的前序遍历（简单）</h2><p>给你二叉树的根节点 root ，返回它节点值的 前序 遍历。</p><blockquote><p>输入：root = [1,null,2,3]<br>输出：[1,2,3]</p></blockquote><p>递归法:<br>思路：</p><ol><li class="lvl-3"><p>参数为root、res，无返回值</p></li><li class="lvl-3"><p>终止条件为节点为空</p></li><li class="lvl-3"><p>单层递归逻辑为根左右入队列</p></li></ol><pre class="line-numbers language-language-java"><code class="language-language-java"> public List<Integer> preorderTraversal(TreeNode root) {    ArrayList<Integer> res = new ArrayList<>();    preorder(root, res);    return res;}public void  preorder(TreeNode root, List<Integer> res){    if(root == null) return;    res.add(root.val);    preorder(root.left, res);    preorder(root.right, res);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>迭代法:<br>前序遍历顺序：中-左-右，入栈顺序：中-右-左</p><pre class="line-numbers language-language-java"><code class="language-language-java">public List<Integer> preorderTravelsal(TreeNode root){    ArrayList<Integer> res = new ArrayList<>();    if(root == null) return res;    Stack<TreeNode> stack = new Stack<>();    stack.push(root);    while(!stack.isEmpty()){        TreeNode node = stack.pop();        res.add(node.val);        if(node.right != null) stack.push(node.right);        if(node.left != null) stack.push(node.left);    }    return res;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="145-二叉树的中序遍历（简单）"><a class="header-anchor" href="#145-二叉树的中序遍历（简单）"></a>145.二叉树的中序遍历（简单）</h2><p>递归法:<br>递归逻辑为左根右，其他与前序相同。迭代法:<br>中序遍历顺序: 左-中-右 入栈顺序： 左-右</p><pre class="line-numbers language-language-java"><code class="language-language-java">public List<Integer> inorderTravelsal(TreeNode root){   List<Integer> res = new ArrayList<>();   if (root == null) {       return res;   }   Stack<TreeNode> stack = new Stack<>();   TreeNode cur = root;   while (cur != null || !stack.isEmpty()) {       if (cur != null){           stack.push(cur);           cur = cur.left;       }else {           cur = stack.pop();           res.add(cur.val);           cur = cur.right;       }   }   return res;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="94-二叉树的后序遍历（简单）"><a class="header-anchor" href="#94-二叉树的后序遍历（简单）"></a>94.二叉树的后序遍历（简单）</h2><p>递归：逻辑为左右根，其他与前序相同。迭代：后序遍历顺序 左-右-中 入栈顺序：中-左-右 出栈顺序：中-右-左， 最后翻转结果</p><pre class="line-numbers language-language-java"><code class="language-language-java">public List<Integer> postorderTraversal(TreeNode root) {    List<Integer> result = new ArrayList<>();    if (root == null){        return result;    }    Stack<TreeNode> stack = new Stack<>();    stack.push(root);    while (!stack.isEmpty()){        TreeNode node = stack.pop();        result.add(node.val);        if (node.left != null){            stack.push(node.left);        }        if (node.right != null){            stack.push(node.right);        }    }    Collections.reverse(result);    return result;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="102-二叉树的层序遍历（中等）"><a class="header-anchor" href="#102-二叉树的层序遍历（中等）"></a>102. 二叉树的层序遍历（中等）</h2><p>给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。</p><blockquote><p>输入：root = [3,9,20,null,null,15,7]<br>输出：[[3],[9,20],[15,7]]</p></blockquote><p>递归思路：每当传入checkDeep一个值的时候，则将增加本层数，并且，将值传回上一层的list的个体之中。与之同时，要对比res队列的大小是否比deep小，若小，则增加一个list个体。</p><pre class="line-numbers language-language-java"><code class="language-language-java">//存储每一层的ListList<List<Integer>> levelRes = new ArrayList<>();public List<List<Integer>> levelOrder(TreeNode root) {    checkDeep(root, 0);    return levelRes;}public void checkDeep(TreeNode node, Integer deep){    if(node == null) return;    deep++;    if (levelRes.size() < deep){        //层级增加时，list的Item也增加        List<Integer> item = new ArrayList<>();        levelRes.add(item);    }    levelRes.get(deep - 1).add(node.val);    checkDeep(node.left, deep);    checkDeep(node.right, deep);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>迭代思路：首先往队列中放入当前节点，将当前所有节点的子节点放入队列中，然后排出，则为一层</p><pre class="line-numbers language-language-java"><code class="language-language-java">List<List<Integer>> levelRes = new ArrayList<>();public void checkDeep(TreeNode node){    if(node == null) return;    Deque<TreeNode> deque = new LinkedList<>();    deque.offerLast(node);    while(!deque.isEmpty()){        List<Integer> itemList = new ArrayList<>();        int len = deque.size();        //将deque中的值一个一个取出来        while (len > 0){            TreeNode tmpNode = deque.pollFirst();            itemList.add(tmpNode.val);            if (tmpNode.left != null) deque.offerLast(tmpNode.left);            if (tmpNode.right != null) deque.offerLast(tmpNode.right);            len--;        }        levelRes.add(itemList);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="226-翻转二叉树（简单）"><a class="header-anchor" href="#226-翻转二叉树（简单）"></a>226.翻转二叉树（简单）</h2><p>给你一棵二叉树的根节点 root ，翻转这棵二叉树，并返回其根节点。</p><p><img src="https://img-blog.csdnimg.cn/a00f3013f1c64f0a8d74f0ba94971534.png" alt=""></p><blockquote><p>输入：root = [4,2,7,1,3,6,9]<br>输出：[4,7,2,9,6,3,1]</p></blockquote><p>思路：把每个节点的孩子左右翻转一下（可用前序遍历/后序遍历）</p><pre class="line-numbers language-language-java"><code class="language-language-java">public TreeNode invertTree(TreeNode root) {    if (root == null) return null;    invertTree(root.left);    invertTree(root.right);    swapChildren(root);    return root;}public void swapChildren(TreeNode root){    TreeNode temp = root.left;    root.left = root.right;    root.right = temp;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="101-对称二叉树（简单）"><a class="header-anchor" href="#101-对称二叉树（简单）"></a>101. 对称二叉树（简单）</h2><p>给你一个二叉树的根节点 root ， 检查它是否轴对称</p><blockquote><p>输入：root = [1,2,2,3,4,4,3]<br>输出：true</p></blockquote><p>迭代法：使用双端队列，入栈顺序为左节点的左右孩子，右节点的左右孩子。可用单端队列代替</p><pre class="line-numbers language-language-java"><code class="language-language-java">Deque<TreeNode> deque = new LinkedList<>();    deque.offerFirst(root.left);    deque.offerLast(root.right);    while (!deque.isEmpty()) {        TreeNode leftNode = deque.pollFirst();        TreeNode rightNode = deque.pollLast();        if (leftNode == null && rightNode == null) {            continue;        }        if (leftNode == null || rightNode == null || leftNode.val != rightNode.val){            return false;        }        deque.offerFirst(leftNode.left);        deque.offerFirst(leftNode.right);        deque.offerLast(rightNode.right);        deque.offerLast(rightNode.left);    }    return true;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>递归法：</p><pre class="line-numbers language-language-java"><code class="language-language-java">public boolean isSymmetric(TreeNode root) {    if(root == null) return false;    return compare(root.left, root.right);}public boolean compare(TreeNode left, TreeNode right){    if(left == null && right==null){        return true;    }else if(left == null && right != null){        return false;    }else if (left != null && right == null) {        return false;    }else if (left.val != right.val){        return false;    }    boolean outside = compare(left.left, right.right);    boolean inside = compare(left.right, right.left);    return outside && inside;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="104-二叉树的最大深度（简单）"><a class="header-anchor" href="#104-二叉树的最大深度（简单）"></a>104. 二叉树的最大深度（简单）</h2><p>给定一个二叉树，找出其最大深度。二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。</p><blockquote><p>给定二叉树 [3,9,20,null,null,15,7]</p></blockquote><p>因为二叉树的最大深度是根节点的高度，所以求根节点的高度即可递归法：类似于前序遍历</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int getDeepRecursion(TreeNode node){     if (node == null) return 0;     int leftDepth = getDeep(node.left);     int rightDepth = getDeep(node.right);     int deepth = 1 + Math.max(leftDepth, rightDepth);     return deepth;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>迭代法：使用队列，复现层次遍历的迭代实现的方法。将节点放入队头，并每次</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int getDeepIteration(TreeNode node){if(node == null) return 0;int depth = 0;Deque<TreeNode> deque = new LinkedList<>();deque.offerFirst(node);while(!deque.isEmpty()){int len = deque.size();depth++;for(int i = 0; i < len; i++){TreeNode tmp = deque.pollFirst();if(tmp.left != null) deque.add(tmp.left);if(tmp.right != null) deque.add(tmp.right);}}return depth;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实际上求二叉树的最大深度应为：</p><pre class="line-numbers language-language-java"><code class="language-language-java">int res;public void getDepth(TreeNode node, int depth){res = depth > res ? depth : res;if(node.left == null && node.right == null) return;if(node.left != null){depth++;getDepth(node.left, depth);depth--;}if(node.right != null){depth++;getDepth(node.right, depth);depth--;}return;}int maxDepth(TreeNode ){res = 0;if(root == null) return res;getDepth(root, 1);return res;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="559-N-叉树的最大深度（简单）"><a class="header-anchor" href="#559-N-叉树的最大深度（简单）"></a>559. N 叉树的最大深度（简单）</h2><p>给定一个 N 叉树，找到其最大深度。最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。N 叉树输入按层序遍历序列化表示，每组子节点由空值分隔（请参见示例）。</p><blockquote><p>输入：root = [1,null,3,2,4,null,5,6]<br>输出：3</p></blockquote><p>递归法：将每个</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int maxDepthNtreeRecursion(Node root) {if(root == null) return 0;int depth = 0;if(root.children != null){for(Node child : root.children){depth = Math.max(depth, maxDepth(child);}}return depth++;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>迭代法：使用层序遍历的思想</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int maxDepthNtreeIteration(Node root){    if (root == null) return 0;    int depth = 0;    Deque<Node> deque = new LinkedList<>();    deque.offerLast(root);    while (!deque.isEmpty()){        depth++;        int len = deque.size();        while (len > 0){            Node tmp = deque.pollFirst();            for (int i = 0; i < tmp.children.size(); i++) {                if (tmp.children.get(i) != null){                    deque.offerLast(tmp.children.get(i));                }            }            len--;        }    }    return depth;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="111-二叉树的最小深度（简单）"><a class="header-anchor" href="#111-二叉树的最小深度（简单）"></a>111. 二叉树的最小深度（简单）</h2><p>给定一个二叉树，找出其最小深度。</p><p>最小深度是从根节点到最近叶子节点的最短路径上的节点数量。</p><blockquote><p>输入：root = [3,9,20,null,null,15,7]<br>输出：2</p></blockquote><p>迭代法：</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int minDepthCursion(TreeNode root){    if (root == null) return 0;    if (root.left == null && root.right != null) {return minDepthCursion(root.right) + 1;}        if (root.left != null && root.right == null) {return minDepthCursion(root.left) + 1;}    return 1 + Math.min(rightDepth, leftDepth);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>递归法：</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int minDepethInteration(TreeNode root){    if (root == null) return 0;    int depth = 0;    Deque<TreeNode> deque = new LinkedList<>();    deque.offerLast(root);    while (!deque.isEmpty()) {        depth++;        int len = deque.size();        for (int i = 0; i < len; i++) {            TreeNode tmp = deque.pollFirst();            if (tmp.left != null && tmp.right == null) deque.offerLast(tmp.left);            if (tmp.left == null && tmp.right != null) deque.offerLast(tmp.right);            if (tmp.left == null && tmp.right == null) return depth;        }    }    return depth;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="222-完全二叉树的节点个数（中等）"><a class="header-anchor" href="#222-完全二叉树的节点个数（中等）"></a>222. 完全二叉树的节点个数（中等）</h2><p>给你一棵 完全二叉树 的根节点 root ，求出该树的节点个数。</p><blockquote><p>输入：root = [1,2,3,4,5,6]<br>输出：6</p></blockquote><p>迭代法：</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int countNodesIteration(TreeNode root){    if (root == null) return 0;    int res = 0;    Deque<TreeNode> deque = new LinkedList<>();    deque.offerLast(root);    while (!deque.isEmpty()) {        int len = deque.size();        for (int i = 0; i < len; i++) {            TreeNode tmp = deque.pollFirst();            res++;            if (tmp.left != null) deque.offerLast(tmp.left);            if (tmp.right != null) deque.offerLast(tmp.right);        }    }    return res;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>递归法：</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int countNodesCursion(TreeNode root) {    if (root == null) return 0;    int leftCount = countNodesCursion(root.left);    int rightCount = countNodesCursion(root.right);    int nodeCount = leftCount + rightCount + 1;    return nodeCount;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>符合满二叉树的写法：注意 ：&lt;&lt; : 左移运算符，num &lt;&lt; 1,相当于num乘以2｜｜&gt;&gt; : 右移运算符，num &gt;&gt; 1,相当于num除以2<br>满二叉树的节点数为2^depth - 1<br>即：10 &gt;&gt; 3  = 10  /  (2 * 2 * 2)， 10 &lt;&lt; 3 = 10 * ( 2 * 2 * 2)<br>思路：因为它输入已经确定是完全二叉树，所以只需判断最左边的深度是否与最右边的深度一致，若一致则为满二叉树，可用公式 2^depth - 1 计算。</p><pre class="line-numbers language-language-java"><code class="language-language-java">public int countNodesFullTree(TreeNode root){     if (root == null) return 0;     int leftDepth = getDepth(root.left);     int rightDepth = getDepth(root.right);     if (leftDepth == rightDepth){//左子树为满二叉树         return (1 << leftDepth) + countNodesFullTree(root.right);     }else {//右子树为满二叉树         return (1 << rightDepth) + countNodesFullTree(root.left);     } } //只判断最左边的 private int getDepth(TreeNode root){     int depth = 0;     while (root != null){         root = root.left;         depth++;     }     return depth; }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="110-平衡二叉树（简单）"><a class="header-anchor" href="#110-平衡二叉树（简单）"></a>110. 平衡二叉树（简单）</h2><p>给定一个二叉树，判断它是否是高度平衡的二叉树。</p><p>本题中，一棵高度平衡二叉树定义为：</p><p>一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1 。</p><blockquote><p>输入：root = [3,9,20,null,null,15,7]<br>输出：true</p></blockquote><p>思路：比较高度，需要使用后序遍历。<br>1.递归参数及返回值：</p><pre class="line-numbers language-language-java"><code class="language-language-java">int getHeight(TreeNode node)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.终止条件：</p><pre class="line-numbers language-language-java"><code class="language-language-java">node == null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.单层递归逻辑判断左右子树的高度，若不同则返回-1 ，若相同则返回当前当前二叉树高度。</p><p>最终代码：（PS： abs是返回绝对值）</p><pre class="line-numbers language-language-java"><code class="language-language-java">public boolean isBalanced(TreeNode root) {        return getHeight(root) != -1;    }    public int getHeight(TreeNode node){        if(node == null) return 0;        int leftHeight = getHeight(node.left);        if(leftHeight == -1) return -1;        int rightHeight = getHeight(node.right);        if(leftHeight == -1) return -1;        if(Math.abs(leftHeight - rightHeight) > 1){            return -1;        }        return Math.max(leftHeight, rightHeight) + 1;    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="257-二叉树的所有路径（简单）"><a class="header-anchor" href="#257-二叉树的所有路径（简单）"></a>257. 二叉树的所有路径（简单）</h2><p>不止用了递归，还用了回溯给定一个二叉树，返回所有从根节点到叶子节点的路径。</p><blockquote><p>输入：root = [1,2,3,null,5]<br>输出：[“1-&gt;2-&gt;5”,“1-&gt;3”]</p></blockquote><pre class="line-numbers language-language-java"><code class="language-language-java"> public List<String> binaryTreePathsCursion(TreeNode root){    List<String> res = new ArrayList<>();    if (root == null) return res;    List<Integer> paths = new ArrayList<>();    traversal(root, paths, res);    return res;}private void traversal(TreeNode root, List<Integer> paths, List<String> res){    paths.add(root.val);    if (root.left == null && root.right == null){        StringBuilder sb = new StringBuilder();        for (int i = 0; i < paths.size() - 1; i++) {            sb.append(paths.get(i)).append("->");        }        sb.append(paths.get(paths.size() - 1));        res.add(sb.toString());        return;    }    if (root.left != null){        traversal(root.left, paths, res);        paths.remove(paths.size() - 1);    }    if (root.right != null){        traversal(root.right, paths, res);        paths.remove(paths.size() - 1);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL_数据页、b+树索引</title>
      <link href="/2022/08/04/mysql-shu-ju-ye-b-shu-suo-yin/"/>
      <url>/2022/08/04/mysql-shu-ju-ye-b-shu-suo-yin/</url>
      
        <content type="html"><![CDATA[<h1>InnoDB记录存储结构</h1><blockquote><p>除InnoDB以外的常用引擎,还有MyISAM</p></blockquote><p>页是磁盘和内存中交互的基本单位,也是存储空间的基本单位,默认大小为16kb</p><h2 id="COMPACT行格式"><a class="header-anchor" href="#COMPACT行格式"></a>COMPACT行格式:</h2><img src="https://img-blog.csdnimg.cn/d047d5f857834718b5f27f7470074d31.png" alt="COMPACT行格式示意图" style="zoom:67%;">记录的额外信息:变长字段长度列表、NULL值列表、记录信息;<ol><li class="lvl-3"><p>变长字段列表:(如varchar等)因<code>存储多少字节的数据是不固定的</code>,所以分为两部分:真正的数据、占用的字节数</p></li></ol><blockquote><p><mark>按照列的顺序逆序存放</mark> 最大存储数M * 占用字节数W  &lt;= 255, 则使用1字节表示占用的字节数,其中若&gt;255, 若实际占用的&lt;=127则还用1字节,否则2字节.<br>InnoDB读取记录时候先看表结构,入欧工允许存储的最大字节数部大雨255可以认为只是用1字节来表示真是数据占用的字节数</p></blockquote><ol start="2"><li class="lvl-3"><p>NULL值列表:首先统计允许存储NULL的列有哪些,若没有则NULL值列表页不存在了</p></li></ol><h2 id="REDUNDANT行格式"><a class="header-anchor" href="#REDUNDANT行格式"></a>REDUNDANT行格式:</h2><img src="https://img-blog.csdnimg.cn/d1fd92ac892b4863aa2a8df3cd4e5800.png" alt="REDUNDANT行格式示意图" style="zoom: 50%;"><p>5.0之前的了</p><h2 id="DYNAMIC和COMPRESSED行格式"><a class="header-anchor" href="#DYNAMIC和COMPRESSED行格式"></a>DYNAMIC和COMPRESSED行格式</h2><p>类似于COMPACT行格式,不过处理溢出时的决策不同,不是只把溢出的数据放到原先的溢出页中了,而是直接将所有的数据存储在溢出页,然后直接指向地址,另外COMPRESSED回采用压缩算法对页面进行压缩.</p><h1>InnoDB数据页结构</h1><p>页的结构图:<br><img src="https://img-blog.csdnimg.cn/f86f4b1000fe458e803aa188e9802961.png" alt="InnoDB数据页结构示意图" style="zoom: 33%;"></p><p>一开始生成页的时候,没有User Records的部分,每当插入一条记录时,会从Free Space中申请一个记录大小的空间,并分配.</p><p>记录头:<br><img src="https://img-blog.csdnimg.cn/50d419dec8a341fa83250d5eb23a8ead.png" alt="COMPACT行格式示意图" style="zoom: 33%;"><br>其中<code>n_owned</code>是带头大哥记录的是该组中所有的记录条数，小弟记录的都为0。<code>next_record</code>代表从当前记录的真实数据到下一条记录的真实数据，正数代表在后面，附属代表在前面(按主键值排序)，而且想做读取就是记录头信息，向右读区是真实数据。<code>Supremum</code>主键值最大的用户记录的下一条记录<code>Infimum</code>记录的下一条记录是主键值最小的用户记录</p><blockquote><p>变长字段长度列表、NULL值列表中的信息逆序存放的原因：可以是使得记录中位置靠前的字段和他们对应的字段长度信息在内存中的距离更近，这可能会提高高速缓存的命中率。</p></blockquote><h2 id="Page-Directory页目录"><a class="header-anchor" href="#Page-Directory页目录"></a>Page Directory页目录</h2><p>1、将所有的<code>有效正常记录</code>（包括Infimum和Supremum）划分为几个组<br>2、每个组的最后一条记录计为<code>“带头大哥”</code><br>3、每个组最后一条数据的地址偏移量单独提取出来，按顺序存储到靠页尾部的地方，这个地方就是页目录。并且将之称为<code>槽（slot）</code>，占用2字节</p><blockquote><p>Infimum记录所在分组只能有1条记录<br>Supremum记录的所在的分组只能在1-8条剩下的记录范围只能是4-8条</p></blockquote><p>步骤：1.只有两个槽Infi，Supre 2.找到比插入大但差值最小的记录，槽对应的n_owned+1<br>3.记录数为8后，再插入时拆分成两个组，一个4一个5，新增槽，记录最大的记录的偏移量</p><p>采用二分法快速寻找槽</p><h2 id="PageHeader页面头部"><a class="header-anchor" href="#PageHeader页面头部"></a>PageHeader页面头部</h2><img src="https://img-blog.csdnimg.cn/5a2e1608916f4ef7bfa0cabad3fd6c69.png" alt="描述记录的状态信息" style="zoom:33%;"><h2 id="File-Header文件头部"><a class="header-anchor" href="#File-Header文件头部"></a>File Header文件头部</h2><p>通用于各种类型的页，都会将其作为第一个组成部分，描述通用于各种页的信息。<img src="https://img-blog.csdnimg.cn/d9b5c87e14e74396ac272b8929f55daf.png" alt="File Header的结构及描述" style="zoom:33%;"><br>其中：<br>FIL_PAGE_SPACE_OR_CHKSUM：相当于当前页面的校验和。<br>FIL_PAGE_OFFSET：页号，通过它定位一个页<br>FILE_PAGE_TYPE：页的类型</p><blockquote><p>以下的开头前缀都是FIL_PAGE_<br>TYPE_ALLOCATED 最新分配没使用<br>UNDO_LOG undo日志页<br>INODE 存储段的信息<br>IBUF_FREE_LIST Change Buffer空闲列表<br>IBUF_BITMAP Change Buffer的一些属性<br>TYPE_SYS 系统数据<br>TYPE_TRX_SYS 事务系统数据<br>TYPE_FSP_HDR 表空间头部信息<br>TYPE_XDES 存储区的一些信息<br>TYPE_BLOB 溢出页<br>INDEX  索引页 即数据页。可以组成一个双向链表</p></blockquote><h2 id="File-Trailer-文件尾部"><a class="header-anchor" href="#File-Trailer-文件尾部"></a>File Trailer 文件尾部</h2><p>File Trailer由8个字节组成，可以分成2个小部分</p><ul class="lvl-0"><li class="lvl-2"><p>前4个字节代表校验和，与File Header中的校验和对应。每次页面在内存中修改时，刷新之前将校验和算出来，File Header会首先刷新到磁盘中，然后校验和也会被写到页的尾部，若刷新成功那么校验和是一致的，不同则错误</p></li><li class="lvl-2"><p>对应最后修改时的LSN的后4个字节（日志序列号）与Header中的FIL_PAGE_LSN后4哥字节相同，用于完整性。</p></li></ul><h1>B+树索引</h1><h2 id="InnoDB的索引方案"><a class="header-anchor" href="#InnoDB的索引方案"></a>InnoDB的索引方案</h2><p>聚簇索引（ID排序）二级索引（别的列排序）联合索引（多个列排序）</p><ol><li class="lvl-3"><p>B+树索引的根节点不会移动（页号不会改变）</p></li><li class="lvl-3"><p>二级索引的内节点记录的内容实际上由3部分组成：<code>索引列的值、主键值、页号</code></p></li><li class="lvl-3"><p>一个页面至少容纳两条记录</p></li></ol><h2 id="MyISAM索引方案"><a class="header-anchor" href="#MyISAM索引方案"></a>MyISAM索引方案</h2><p>将索引和数据分开存储将记录按照<mark>插入顺序</mark>存放再一个文件中（数据文件），不划分页，通过行号快速访问。将索引信息单独存放在另一个文件中，为表的主键单独创建一个索引，在索引的叶子节点中是<mark>主键值与行号的组合。</mark>即<mark>MyISAM中建立的索引相当于全部都是二级索引。</mark></p><h2 id="MySQL中创建和删除索引的语句"><a class="header-anchor" href="#MySQL中创建和删除索引的语句"></a>MySQL中创建和删除索引的语句</h2><p>ALTER TABLE 表名 ADD/DROP （INDEX｜KEY）索引名</p><h1>B+树索引的使用</h1><p>B+树索引在空间和时间上都有代价。可以用于减少需要扫描的记录数量，也可以用于排序和分组。</p><blockquote><p>一般只为WHERE中的列、连接子句中的连接列，活着出现在ORDER BY 或 GROUP BY</p></blockquote><p>注意事项：</p><ul class="lvl-0"><li class="lvl-2"><p>只为用于搜索、排序或分组的列创建索引</p></li><li class="lvl-2"><p>不重复的数据占重比大时使用（过多可以重复的列，有太多的回表操作）</p></li><li class="lvl-2"><p>索引列的类型尽量小（IO消耗少）</p></li><li class="lvl-2"><p>只为索引前缀建立索引，减小占用的存储空间（可以只保留字符串的前10个字符）</p></li><li class="lvl-2"><p>使用覆盖索引进行查询，避免回表操作，（在查询列表中只保留索引列）</p></li><li class="lvl-2"><p>让索引列以列名出现在搜索条件中（key2 * 2 &lt;4 变为 key2 &lt; 4/2）</p></li><li class="lvl-2"><p>减少聚簇索引发生页面分裂，让主键拥有AUTO_INCREMENT属性（减少插入时的损耗）</p></li><li class="lvl-2"><p>定位并删除表中的冗余和重复索引（已经有联合索引，那么单独索引就可以看成冗余索引）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> MySql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
